{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721[]",
              "name": "nftContracts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct Fractron.Vault",
          "name": "vault",
          "type": "tuple"
        }
      ],
      "name": "VaultCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721[]",
              "name": "nftContracts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct Fractron.Vault",
          "name": "vault",
          "type": "tuple"
        }
      ],
      "name": "VaultDestroyed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCanGetAllVaults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCanSplitToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTotalSupplyOwnerCanJoinToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "611:4280:10:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;857:35:10;;;-1:-1:-1;;;;;;857:35:10;1671:64:0;857:35:10;;;611:4280;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "611:4280:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2244:931;;;:::i;:::-;;1241:997;;;:::i;3181:1138::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;179:14:11;;172:22;154:41;;142:2;127:18;1819:584:0;;;;;;;4325:564:10;;;:::i;1572:26:0:-;;;;;;;;;2244:931:10;2299:11;;;2319:15;2299:36;;-1:-1:-1;;;2299:36:10;;;;;352:25:11;;;;2290:61:10;;-1:-1:-1;;;;;2299:11:10;;:19;;325:18:11;;2299:36:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2345:4;2290:8;:61::i;:::-;2362:4;;:40;;-1:-1:-1;;;2362:40:10;;:4;:40;;;987:41:11;;;1044:18;;;1037:50;;;2362:4:10;1103:18:11;;;1096:50;1162:18;;;1155:50;-1:-1:-1;;;;;2362:4:10;;;;:15;;959:19:11;;2362:40:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2417:46:10;;2453:9;352:25:11;;2446:4:10;;-1:-1:-1;2434:1:10;;-1:-1:-1;2417:46:10;;340:2:11;325:18;2417:46:10;;;;;;;2492:8;;:147;;-1:-1:-1;;;2492:147:10;;2474:15;;-1:-1:-1;;;;;2492:8:10;;:14;;:147;;2520:12;;2546:6;;2566:9;;2492:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2680:8;;:26;;-1:-1:-1;;;2680:26:10;;;;;352:25:11;;;2474:165:10;;-1:-1:-1;2650:27:10;;-1:-1:-1;;;;;2680:8:10;;;;:17;;325:18:11;;2680:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2680:26:10;;;;;;;;;;;;:::i;:::-;2650:56;;2722:9;2717:328;2741:18;;:25;2737:29;;2717:328;;;2787:115;2813:5;:18;;;2832:1;2813:21;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2813:29:10;;2843:6;2850:1;2843:9;;;;;;;;:::i;:::-;;;;;;;;;2813:40;;;;;;;;;;;;;352:25:11;;340:2;325:18;;206:177;2813:40:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2879:8;;-1:-1:-1;;;;;2879:8:10;2787;:115::i;:::-;2916:66;2933:5;:18;;;2952:1;2933:21;;;;;;;;:::i;:::-;;;;;;;2965:12;2978:1;2965:15;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2965:15:10;2916:8;:66::i;:::-;2996:38;3005:5;:14;;;3020:1;3005:17;;;;;;;;:::i;:::-;;;;;;;3024:6;3031:1;3024:9;;;;;;;;:::i;:::-;;;;;;;;;2996:8;:38::i;:::-;2768:3;;;;:::i;:::-;;;;2717:328;;;;3055:38;3064:5;:17;;;3083:9;3055:8;:38::i;:::-;3112:19;;;;:44;;-1:-1:-1;;;3112:44:10;;3150:4;3112:44;;;7748:51:11;3103:65:10;;-1:-1:-1;;;;;3112:29:10;;;;7721:18:11;;3112:44:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3158:9;3103:8;:65::i;:::-;2280:895;;2244:931::o;1241:997::-;1282:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1275:4:10;:17;;-1:-1:-1;;;;;;1275:17:10;-1:-1:-1;;;;;1275:17:10;;;;;;;;;;1316:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1302:11:10;:27;;-1:-1:-1;;;;;;1302:27:10;-1:-1:-1;;;;;1302:27:10;;;;;;;;;;1353:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1339:11:10;:27;;-1:-1:-1;;;;;;1339:27:10;-1:-1:-1;;;;;1339:27:10;;;;;;;;;;1387:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1376:8:10;:25;;-1:-1:-1;;;;;;1376:25:10;-1:-1:-1;;;;;1376:25:10;;;;;;;;;1412:11;;:54;;-1:-1:-1;;;1412:54:10;;;;;7978:51:11;;;;-1:-1:-1;8045:18:11;;;8038:50;1412:11:10;;;;:29;;7951:18:11;;1412:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1476:11:10;;1514:8;;1476:54;;-1:-1:-1;;;1476:54:10;;-1:-1:-1;;;;;1514:8:10;;;1476:54;;;7978:51:11;1476:11:10;8045:18:11;;;8038:50;1476:11:10;;;-1:-1:-1;1476:29:10;;-1:-1:-1;7951:18:11;;1476:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1541:4:10;;1560;;1541:25;;-1:-1:-1;;;1541:25:10;;-1:-1:-1;;;;;1560:4:10;;;1541:25;;;7748:51:11;1541:4:10;;;-1:-1:-1;1541:10:10;;-1:-1:-1;7721:18:11;;1541:25:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1576:11:10;;1614:8;;1576:54;;-1:-1:-1;;;1576:54:10;;-1:-1:-1;;;;;1614:8:10;;;1576:54;;;7978:51:11;1576:11:10;8045:18:11;;;8038:50;1576:11:10;;;-1:-1:-1;1576:29:10;;-1:-1:-1;7951:18:11;;1576:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1640:4:10;;1659;;1640:25;;-1:-1:-1;;;1640:25:10;;-1:-1:-1;;;;;1659:4:10;;;1640:25;;;7748:51:11;1640:4:10;;;-1:-1:-1;1640:10:10;;-1:-1:-1;7721:18:11;;1640:25:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1675:11:10;;1713:8;;1675:54;;-1:-1:-1;;;1675:54:10;;-1:-1:-1;;;;;1713:8:10;;;1675:54;;;7978:51:11;1675:11:10;8045:18:11;;;8038:50;1675:11:10;;;-1:-1:-1;1675:29:10;;-1:-1:-1;7951:18:11;;1675:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1758:11;;;;;;;;;-1:-1:-1;;;;;1758:11:10;-1:-1:-1;;;;;1758:16:10;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1740:15;:36;1804:11;;:18;;;-1:-1:-1;;;1804:18:10;;;;-1:-1:-1;;;;;1804:11:10;;;;:16;;:18;;;;;;;;;;;;;;;:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1786:15;:36;1850:11;;:18;;;-1:-1:-1;;;1850:18:10;;;;-1:-1:-1;;;;;1850:11:10;;;;:16;;:18;;;;;;;;;;;;;;;:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1832:15;:36;1896:11;;:18;;;-1:-1:-1;;;1896:18:10;;;;-1:-1:-1;;;;;1896:11:10;;;;:16;;:18;;;;;;;;;;;;;;;:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1878:15;:36;;;1943:11;;;1925:12;:30;;1943:11;1925:30;;;;;;;;;;;-1:-1:-1;;;;;;1925:30:10;;;-1:-1:-1;;;;;1943:11:10;;;1925:30;;;;1983:11;;1965:30;;;;;;;;;;;;;1983:11;;;1965:30;;;;;;2023:11;;;2005:30;;;;;;;;;;;;;;;;2023:11;;;2005:30;;;;;;;2058:15;;2046:6;:28;;;;;;;;;;;;;;;2096:15;;2084:28;;;;;;;;;;2134:15;;2122:28;;;;;;;;;;;2180:11;2161:13;:31;;;;;;;;;;;;;;;2180:11;;2161:31;;;;;;;2215:15;;2202:7;:29;;;;;;;1943:11;2202:29;;;;;;1241:997::o;3181:1138::-;3260:8;;:147;;-1:-1:-1;;;3260:147:10;;3242:15;;-1:-1:-1;;;;;3260:8:10;;:14;;:147;;3288:12;;3314:6;;3334:9;;3260:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3448:8;;:26;;-1:-1:-1;;;3448:26:10;;;;;352:25:11;;;3242:165:10;;-1:-1:-1;3418:27:10;;-1:-1:-1;;;;;3448:8:10;;;;:17;;325:18:11;;3448:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3448:26:10;;;;;;;;;;;;:::i;:::-;3418:56;;3489:9;3484:204;3508:18;;:25;3504:29;;3484:204;;;3554:123;3580:5;:18;;;3599:1;3580:21;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3580:29:10;;3610:5;:14;;;3625:1;3610:17;;;;;;;;:::i;:::-;;;;;;;3580:48;;;;;;;;;;;;;352:25:11;;340:2;325:18;;206:177;3554:123:10;3535:3;;;;:::i;:::-;;;;3484:204;;;-1:-1:-1;3706:19:10;;;;:44;;-1:-1:-1;;;3706:44:10;;3744:4;3706:44;;;7748:51:11;3697:65:10;;-1:-1:-1;;;;;3706:29:10;;;;7721:18:11;;3706:44:10;7602:203:11;3697:65:10;3773:19;;;;3809:8;;3773:65;;-1:-1:-1;;;3773:65:10;;-1:-1:-1;;;;;3809:8:10;;;3773:65;;;8273:51:11;-1:-1:-1;;8340:18:11;;;8333:34;3773:27:10;;;;;8246:18:11;;3773:65:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3848:8:10;;:22;;-1:-1:-1;;;3848:22:10;;;;;352:25:11;;;-1:-1:-1;;;;;3848:8:10;;;;:13;;325:18:11;;3848:22:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3886:9;3881:200;3905:18;;:25;3901:29;;3881:200;;;3951:119;3977:5;:18;;;3996:1;3977:21;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3977:29:10;;4007:5;:14;;;4022:1;4007:17;;;;;;;;:::i;:::-;;;;;;;3977:48;;;;;;;;;;;;;352:25:11;;340:2;325:18;;206:177;3951:119:10;3932:3;;;;:::i;:::-;;;;3881:200;;;-1:-1:-1;4099:19:10;;;;:44;;-1:-1:-1;;;4099:44:10;;4137:4;4099:44;;;7748:51:11;4090:57:10;;-1:-1:-1;;;;;4099:29:10;;;;7721:18:11;;4099:44:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4145:1;4090:8;:57::i;:::-;4166:8;;:26;;-1:-1:-1;;;4166:26:10;;;;;352:25:11;;;-1:-1:-1;;;;;4166:8:10;;;;:17;;325:18:11;;4166:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4166:26:10;;;;;;;;;;;;:::i;:::-;4158:34;;4207:9;4202:111;4226:18;;:25;4222:29;;4202:111;;;4272:30;4281:5;:14;;;4296:1;4281:17;;;;;;;;:::i;:::-;;;;;;;4300:1;4272:8;:30::i;:::-;4253:3;;;;:::i;:::-;;;;4202:111;;;;3232:1087;;3181:1138::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;8273:51:11;;;-1:-1:-1;;;8340:18:11;;;8333:34;2196:43:0;;;;;;;;;8246:18:11;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;4325:564:10:-;4373:8;;:147;;-1:-1:-1;;;4373:147:10;;-1:-1:-1;;;;;4373:8:10;;;;:14;;:147;;4401:12;;4427:6;;4447:9;;4373:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4530:8:10;;:149;;-1:-1:-1;;;4530:149:10;;-1:-1:-1;;;;;4530:8:10;;;;:14;;:149;;4558:13;;4585:7;;4606:9;;4530:149;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4723:8:10;;:23;;;-1:-1:-1;;;4723:23:10;;;;4690:30;;-1:-1:-1;;;;;4723:8:10;;:21;;:23;;;;;4690:30;;4723:23;;;;;;;:8;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4723:23:10;;;;;;;;;;;;:::i;:::-;4690:56;;4761:9;4756:127;4780:6;:13;4776:1;:17;4756:127;;;4814:58;4869:1;-1:-1:-1;;;;;4825:46:10;4833:6;4840:1;4833:9;;;;;;;;:::i;:::-;;;;;;;:23;;;-1:-1:-1;;;;;4825:46:10;;;4814:10;:58::i;:::-;4795:3;;;;:::i;:::-;;;;4756:127;;3615:277:0;3683:1;-1:-1:-1;;;;;3678:6:0;:1;-1:-1:-1;;;;;3678:6:0;;3674:212;;3705:44;;;;;11126:2:11;11108:21;;;11165:2;11145:18;;;11138:30;11204:34;11199:2;11184:18;;11177:62;-1:-1:-1;;;11270:2:11;11255:18;;11248:35;11315:3;11300:19;;10924:401;3705:44:0;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;:::-;;;;;;;;3869:6;:4;:6::i;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;12618:2:11;12600:21;;;12657:2;12637:18;;;12630:30;12696:34;12691:2;12676:18;;12669:62;-1:-1:-1;;;12762:2:11;12747:18;;12740:32;12804:3;12789:19;;12416:398;5286:41:0;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;3255:157::-;3315:9;3310:96;;3345:30;;;;;13727:2:11;13709:21;;;13766:2;13746:18;;;13739:30;13805:25;13800:2;13785:18;;13778:53;13863:2;13848:18;;13525:347;3345:30:0;;;;;;;;3389:6;:4;:6::i;:::-;3255:157;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;14079:51:11;;;-1:-1:-1;;;14146:18:11;;;14139:34;;;;2705:4:0;14189:18:11;;;14182:34;2482:11:0;;1671:64;2579:43;;14052:18:11;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;388:131:11:-;-1:-1:-1;;;;;463:31:11;;453:42;;443:70;;509:1;506;499:12;524:251;594:6;647:2;635:9;626:7;622:23;618:32;615:52;;;663:1;660;653:12;615:52;695:9;689:16;714:31;739:5;714:31;:::i;:::-;764:5;524:251;-1:-1:-1;;;524:251:11:o;1426:469::-;1487:3;1525:5;1519:12;1552:6;1547:3;1540:19;1578:4;1607:2;1602:3;1598:12;1591:19;;1629:5;1626:1;1619:16;1671:2;1668:1;1658:16;1692:1;1702:168;1716:6;1713:1;1710:13;1702:168;;;1777:13;;1765:26;;1811:12;;;;1858:1;1846:14;;;;1731:9;1702:168;;;-1:-1:-1;1886:3:11;;1426:469;-1:-1:-1;;;;;1426:469:11:o;2224:1414::-;2712:4;2760:3;2749:9;2745:19;2791:3;2780:9;2773:22;2815:6;2850;2844:13;2881:6;2873;2866:22;2919:3;2908:9;2904:19;2897:26;;2942:6;2939:1;2932:17;2968:4;2958:14;;3008:2;3005:1;2995:16;3029:1;3039:194;3053:6;3050:1;3047:13;3039:194;;;3118:13;;-1:-1:-1;;;;;3114:39:11;3102:52;;3174:12;;;;3150:1;3209:14;;;;3068:9;3039:194;;;3043:3;;;3278:9;3273:3;3269:19;3264:2;3253:9;3249:18;3242:47;3312:49;3357:3;3349:6;3312:49;:::i;:::-;3298:63;;;3397:6;3392:2;3381:9;3377:18;3370:34;3452:9;3444:6;3440:22;3435:2;3424:9;3420:18;3413:50;3486:37;3516:6;1977:2;1965:15;;-1:-1:-1;;;2005:4:11;1996:14;;1989:44;2058:2;2049:12;;1900:167;3486:37;3560:22;;;3554:3;3539:19;;3532:51;2144:1;2132:14;;-1:-1:-1;;;2171:4:11;2162:14;;2155:30;3472:51;-1:-1:-1;2210:2:11;2201:12;;3592:40;2224:1414;-1:-1:-1;;;;;;2224:1414:11:o;3643:184::-;3713:6;3766:2;3754:9;3745:7;3741:23;3737:32;3734:52;;;3782:1;3779;3772:12;3734:52;-1:-1:-1;3805:16:11;;3643:184;-1:-1:-1;3643:184:11:o;3832:127::-;3893:10;3888:3;3884:20;3881:1;3874:31;3924:4;3921:1;3914:15;3948:4;3945:1;3938:15;3964:253;4036:2;4030:9;4078:4;4066:17;;4113:18;4098:34;;4134:22;;;4095:62;4092:88;;;4160:18;;:::i;:::-;4196:2;4189:22;3964:253;:::o;4222:275::-;4293:2;4287:9;4358:2;4339:13;;-1:-1:-1;;4335:27:11;4323:40;;4393:18;4378:34;;4414:22;;;4375:62;4372:88;;;4440:18;;:::i;:::-;4476:2;4469:22;4222:275;;-1:-1:-1;4222:275:11:o;4502:191::-;4570:4;4603:18;4595:6;4592:30;4589:56;;;4625:18;;:::i;:::-;-1:-1:-1;4670:1:11;4666:14;4682:4;4662:25;;4502:191::o;4698:667::-;4763:5;4816:3;4809:4;4801:6;4797:17;4793:27;4783:55;;4834:1;4831;4824:12;4783:55;4863:6;4857:13;4889:4;4913:68;4929:51;4977:2;4929:51;:::i;:::-;4913:68;:::i;:::-;5015:15;;;5101:1;5097:10;;;;5085:23;;5081:32;;;5046:12;;;;5125:15;;;5122:35;;;5153:1;5150;5143:12;5122:35;5189:2;5181:6;5177:15;5201:135;5217:6;5212:3;5209:15;5201:135;;;5283:10;;5271:23;;5314:12;;;;5234;;5201:135;;;-1:-1:-1;5354:5:11;4698:667;-1:-1:-1;;;;;;4698:667:11:o;5370:148::-;5459:13;;5481:31;5459:13;5481:31;:::i;5523:1343::-;5586:5;5634:4;5622:9;5617:3;5613:19;5609:30;5606:50;;;5652:1;5649;5642:12;5606:50;5674:22;;:::i;:::-;5665:31;;5725:9;5719:16;5754:18;5795:2;5787:6;5784:14;5781:34;;;5811:1;5808;5801:12;5781:34;5849:6;5838:9;5834:22;5824:32;;5894:3;5887:4;5883:2;5879:13;5875:23;5865:51;;5912:1;5909;5902:12;5865:51;5941:2;5935:9;5963:4;5987:68;6003:51;6051:2;6003:51;:::i;5987:68::-;6089:15;;;6171:1;6167:10;;;;6159:19;;6155:28;;;6120:12;;;;6195:15;;;6192:35;;;6223:1;6220;6213:12;6192:35;6247:11;;;;6267:216;6283:6;6278:3;6275:15;6267:216;;;6358:3;6352:10;6375:33;6400:7;6375:33;:::i;:::-;6421:20;;6300:12;;;;6461;;;;6267:216;;;6492:20;;-1:-1:-1;6543:18:11;;;6537:25;;-1:-1:-1;6574:16:11;;;6571:36;;;6603:1;6600;6593:12;6571:36;6639:70;6705:3;6694:8;6683:9;6679:24;6639:70;:::i;:::-;6634:2;6627:5;6623:14;6616:94;;;;;6763:2;6752:9;6748:18;6742:25;6737:2;6730:5;6726:14;6719:49;6800:59;6855:2;6844:9;6840:18;6800:59;:::i;:::-;6795:2;6788:5;6784:14;6777:83;5523:1343;;;;:::o;6871:357::-;6965:6;7018:2;7006:9;6997:7;6993:23;6989:32;6986:52;;;7034:1;7031;7024:12;6986:52;7067:9;7061:16;7100:18;7092:6;7089:30;7086:50;;;7132:1;7129;7122:12;7086:50;7155:67;7214:7;7205:6;7194:9;7190:22;7155:67;:::i;:::-;7145:77;6871:357;-1:-1:-1;;;;6871:357:11:o;7233:127::-;7294:10;7289:3;7285:20;7282:1;7275:31;7325:4;7322:1;7315:15;7349:4;7346:1;7339:15;7365:232;7404:3;-1:-1:-1;;7425:17:11;;7422:140;;;7484:10;7479:3;7475:20;7472:1;7465:31;7519:4;7516:1;7509:15;7547:4;7544:1;7537:15;7422:140;-1:-1:-1;7589:1:11;7578:13;;7365:232::o;8378:277::-;8445:6;8498:2;8486:9;8477:7;8473:23;8469:32;8466:52;;;8514:1;8511;8504:12;8466:52;8546:9;8540:16;8599:5;8592:13;8585:21;8578:5;8575:32;8565:60;;8621:1;8618;8611:12;8939:336;8980:3;9018:5;9012:12;9042:1;9052:128;9066:6;9063:1;9060:13;9052:128;;;9163:4;9148:13;;;9144:24;;9138:31;9125:11;;;9118:52;9081:12;9052:128;;;9198:6;9195:1;9192:13;9189:48;;;9233:1;9224:6;9219:3;9215:16;9208:27;9189:48;-1:-1:-1;9253:16:11;;;;;8939:336;-1:-1:-1;;8939:336:11:o;9280:278::-;-1:-1:-1;;;;;;9465:33:11;;9453:46;;9435:3;9515:37;9549:1;9540:11;;9532:6;9515:37;:::i;9563:189::-;9692:3;9717:29;9742:3;9734:6;9717:29;:::i;9757:1162::-;9876:6;9907:2;9950;9938:9;9929:7;9925:23;9921:32;9918:52;;;9966:1;9963;9956:12;9918:52;9999:9;9993:16;10028:18;10069:2;10061:6;10058:14;10055:34;;;10085:1;10082;10075:12;10055:34;10123:6;10112:9;10108:22;10098:32;;10168:7;10161:4;10157:2;10153:13;10149:27;10139:55;;10190:1;10187;10180:12;10139:55;10219:2;10213:9;10242:68;10258:51;10306:2;10258:51;:::i;10242:68::-;10344:15;;;10426:1;10422:10;;;;10414:19;;10410:28;;;10375:12;;;;10450:19;;;10447:39;;;10482:1;10479;10472:12;10447:39;10514:2;10510;10506:11;10526:363;10542:6;10537:3;10534:15;10526:363;;;10621:3;10615:10;10657:2;10644:11;10641:19;10638:109;;;10701:1;10730:2;10726;10719:14;10638:109;10772:74;10838:7;10833:2;10819:11;10815:2;10811:20;10807:29;10772:74;:::i;:::-;10760:87;;-1:-1:-1;10867:12:11;;;;10559;;10526:363;;;-1:-1:-1;10908:5:11;9757:1162;-1:-1:-1;;;;;;;;9757:1162:11:o;11494:374::-;11724:2;11713:9;11706:21;11687:4;11744:49;11789:2;11778:9;11774:18;11407:2;11395:15;;-1:-1:-1;;;11435:4:11;11426:14;;11419:36;11480:2;11471:12;;11330:159;11744:49;-1:-1:-1;;;;;11829:32:11;;;;11824:2;11809:18;;;;11802:60;;;;-1:-1:-1;11736:57:11;11494:374::o;12037:::-;12267:2;12256:9;12249:21;12230:4;12287:49;12332:2;12321:9;12317:18;11950:2;11938:15;;-1:-1:-1;;;11978:4:11;11969:14;;11962:36;12023:2;12014:12;;11873:159;12819:348;13049:2;13038:9;13031:21;13012:4;13069:49;13114:2;13103:9;13099:18;11407:2;11395:15;;-1:-1:-1;;;11435:4:11;11426:14;;11419:36;11480:2;11471:12;;11330:159;13069:49;13061:57;;13154:6;13149:2;13138:9;13134:18;13127:34;12819:348;;;;:::o;13172:::-;13402:2;13391:9;13384:21;13365:4;13422:49;13467:2;13456:9;13452:18;11950:2;11938:15;;-1:-1:-1;;;11978:4:11;11969:14;;11962:36;12023:2;12014:12;;11873:159",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/alexander/dev/fractional/contracts/src/test/Fractron.t.sol",
    "exportedSymbols": {
      "DSTest": [
        1786
      ],
      "ERC721": [
        24144
      ],
      "Fractron": [
        24516
      ],
      "FractronTest": [
        25142
      ],
      "NFTShare": [
        24237
      ],
      "TestNFT": [
        24564
      ],
      "User": [
        24530
      ],
      "Vm": [
        3175
      ],
      "stdError": [
        21943
      ]
    },
    "id": 25143,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24518,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:10"
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "id": 24520,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25143,
        "sourceUnit": 3176,
        "src": "58:36:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24519,
              "name": "Vm",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "66:2:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "id": 24522,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25143,
        "sourceUnit": 1787,
        "src": "95:40:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24521,
              "name": "DSTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "103:6:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/forge-std/src/test.sol",
        "file": "forge-std/test.sol",
        "id": 24524,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25143,
        "sourceUnit": 23213,
        "src": "136:44:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24523,
              "name": "stdError",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "144:8:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "id": 24526,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25143,
        "sourceUnit": 24165,
        "src": "181:49:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24525,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "189:6:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/src/Fractron.sol",
        "file": "../Fractron.sol",
        "id": 24529,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25143,
        "sourceUnit": 24517,
        "src": "231:51:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24527,
              "name": "Fractron",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "239:8:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24528,
              "name": "NFTShare",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "249:8:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "User",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24530,
        "linearizedBaseContracts": [
          24530
        ],
        "name": "User",
        "nameLocation": "293:4:10",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 25143,
        "src": "284:16:10",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "54657374204e4654",
                "id": 24532,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "329:10:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_399b3b8e1a607e38a806dbdb386c84217e0a0255dd7cc2a55c6afb0aaffe0822",
                  "typeString": "literal_string \"Test NFT\""
                },
                "value": "Test NFT"
              },
              {
                "hexValue": "54455354",
                "id": 24533,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "341:6:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                  "typeString": "literal_string \"TEST\""
                },
                "value": "TEST"
              }
            ],
            "baseName": {
              "id": 24531,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24144,
              "src": "322:6:10"
            },
            "id": 24534,
            "nodeType": "InheritanceSpecifier",
            "src": "322:26:10"
          }
        ],
        "canonicalName": "TestNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24564,
        "linearizedBaseContracts": [
          24564,
          24144
        ],
        "name": "TestNFT",
        "nameLocation": "311:7:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "17d70f7c",
            "id": 24537,
            "mutability": "mutable",
            "name": "tokenId",
            "nameLocation": "370:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 24564,
            "src": "355:26:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24535,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "355:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 24536,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "380:1:10",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23638
            ],
            "body": {
              "id": 24547,
              "nodeType": "Block",
              "src": "460:30:10",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74657374",
                    "id": 24545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "477:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                      "typeString": "literal_string \"test\""
                    },
                    "value": "test"
                  },
                  "functionReturnParameters": 24544,
                  "id": 24546,
                  "nodeType": "Return",
                  "src": "470:13:10"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 24548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "397:8:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24541,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "427:8:10"
            },
            "parameters": {
              "id": 24540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24539,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24548,
                  "src": "406:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "405:9:10"
            },
            "returnParameters": {
              "id": 24544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24543,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24548,
                  "src": "445:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24542,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "444:15:10"
            },
            "scope": 24564,
            "src": "388:102:10",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24562,
              "nodeType": "Block",
              "src": "537:70:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24554,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "553:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "553:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24556,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24537,
                        "src": "565:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24553,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24014,
                      "src": "547:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 24557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "547:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24558,
                  "nodeType": "ExpressionStatement",
                  "src": "547:26:10"
                },
                {
                  "expression": {
                    "id": 24560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "591:9:10",
                    "subExpression": {
                      "id": 24559,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24537,
                      "src": "591:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 24552,
                  "id": 24561,
                  "nodeType": "Return",
                  "src": "584:16:10"
                }
              ]
            },
            "functionSelector": "1249c58b",
            "id": 24563,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "505:4:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "509:2:10"
            },
            "returnParameters": {
              "id": 24552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24551,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24563,
                  "src": "528:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24550,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "527:9:10"
            },
            "scope": 24564,
            "src": "496:111:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 25143,
        "src": "302:307:10",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24565,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1786,
              "src": "636:6:10"
            },
            "id": 24566,
            "nodeType": "InheritanceSpecifier",
            "src": "636:6:10"
          }
        ],
        "canonicalName": "FractronTest",
        "contractDependencies": [
          24516,
          24530,
          24564
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 25142,
        "linearizedBaseContracts": [
          25142,
          1786
        ],
        "name": "FractronTest",
        "nameLocation": "620:12:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 24568,
            "mutability": "mutable",
            "name": "collection1_id1",
            "nameLocation": "657:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 25142,
            "src": "649:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24567,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "649:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24570,
            "mutability": "mutable",
            "name": "collection1_id2",
            "nameLocation": "686:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 25142,
            "src": "678:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24569,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "678:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24572,
            "mutability": "mutable",
            "name": "collection2_id1",
            "nameLocation": "715:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 25142,
            "src": "707:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24571,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "707:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24574,
            "mutability": "mutable",
            "name": "collection2_id2",
            "nameLocation": "744:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 25142,
            "src": "736:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24573,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "736:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24577,
            "mutability": "mutable",
            "name": "user",
            "nameLocation": "779:4:10",
            "nodeType": "VariableDeclaration",
            "scope": 25142,
            "src": "765:18:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_User_$24530",
              "typeString": "contract User"
            },
            "typeName": {
              "id": 24576,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24575,
                "name": "User",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24530,
                "src": "765:4:10"
              },
              "referencedDeclaration": 24530,
              "src": "765:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_User_$24530",
                "typeString": "contract User"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24580,
            "mutability": "mutable",
            "name": "collection1",
            "nameLocation": "806:11:10",
            "nodeType": "VariableDeclaration",
            "scope": 25142,
            "src": "789:28:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestNFT_$24564",
              "typeString": "contract TestNFT"
            },
            "typeName": {
              "id": 24579,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24578,
                "name": "TestNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24564,
                "src": "789:7:10"
              },
              "referencedDeclaration": 24564,
              "src": "789:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestNFT_$24564",
                "typeString": "contract TestNFT"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24583,
            "mutability": "mutable",
            "name": "collection2",
            "nameLocation": "840:11:10",
            "nodeType": "VariableDeclaration",
            "scope": 25142,
            "src": "823:28:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestNFT_$24564",
              "typeString": "contract TestNFT"
            },
            "typeName": {
              "id": 24582,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24581,
                "name": "TestNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24564,
                "src": "823:7:10"
              },
              "referencedDeclaration": 24564,
              "src": "823:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestNFT_$24564",
                "typeString": "contract TestNFT"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24589,
            "mutability": "mutable",
            "name": "hevm",
            "nameLocation": "869:4:10",
            "nodeType": "VariableDeclaration",
            "scope": 25142,
            "src": "857:35:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$3175",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 24585,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24584,
                "name": "Vm",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3175,
                "src": "857:2:10"
              },
              "referencedDeclaration": 3175,
              "src": "857:2:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$3175",
                "typeString": "contract Vm"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 24587,
                  "name": "HEVM_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 107,
                  "src": "879:12:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 24586,
                "name": "Vm",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3175,
                "src": "876:2:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Vm_$3175_$",
                  "typeString": "type(contract Vm)"
                }
              },
              "id": 24588,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "876:16:10",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$3175",
                "typeString": "contract Vm"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24592,
            "mutability": "mutable",
            "name": "fractron",
            "nameLocation": "916:8:10",
            "nodeType": "VariableDeclaration",
            "scope": 25142,
            "src": "898:26:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Fractron_$24516",
              "typeString": "contract Fractron"
            },
            "typeName": {
              "id": 24591,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24590,
                "name": "Fractron",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24516,
                "src": "898:8:10"
              },
              "referencedDeclaration": 24516,
              "src": "898:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Fractron_$24516",
                "typeString": "contract Fractron"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24596,
            "mutability": "mutable",
            "name": "nftContracts",
            "nameLocation": "949:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 25142,
            "src": "931:30:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
              "typeString": "contract ERC721[]"
            },
            "typeName": {
              "baseType": {
                "id": 24594,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 24593,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24144,
                  "src": "931:6:10"
                },
                "referencedDeclaration": 24144,
                "src": "931:6:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC721_$24144",
                  "typeString": "contract ERC721"
                }
              },
              "id": 24595,
              "nodeType": "ArrayTypeName",
              "src": "931:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr",
                "typeString": "contract ERC721[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24600,
            "mutability": "mutable",
            "name": "nftContracts2",
            "nameLocation": "985:13:10",
            "nodeType": "VariableDeclaration",
            "scope": 25142,
            "src": "967:31:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
              "typeString": "contract ERC721[]"
            },
            "typeName": {
              "baseType": {
                "id": 24598,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 24597,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24144,
                  "src": "967:6:10"
                },
                "referencedDeclaration": 24144,
                "src": "967:6:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC721_$24144",
                  "typeString": "contract ERC721"
                }
              },
              "id": 24599,
              "nodeType": "ArrayTypeName",
              "src": "967:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr",
                "typeString": "contract ERC721[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24603,
            "mutability": "mutable",
            "name": "nftIds",
            "nameLocation": "1023:6:10",
            "nodeType": "VariableDeclaration",
            "scope": 25142,
            "src": "1004:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 24601,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1004:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 24602,
              "nodeType": "ArrayTypeName",
              "src": "1004:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24606,
            "mutability": "mutable",
            "name": "nftIds2",
            "nameLocation": "1054:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 25142,
            "src": "1035:26:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 24604,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1035:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 24605,
              "nodeType": "ArrayTypeName",
              "src": "1035:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 24611,
            "name": "VaultCreated",
            "nameLocation": "1074:12:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24609,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1102:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24611,
                  "src": "1087:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                    "typeString": "struct Fractron.Vault"
                  },
                  "typeName": {
                    "id": 24608,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24607,
                      "name": "Fractron.Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24256,
                      "src": "1087:14:10"
                    },
                    "referencedDeclaration": 24256,
                    "src": "1087:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24256_storage_ptr",
                      "typeString": "struct Fractron.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1086:22:10"
            },
            "src": "1068:41:10"
          },
          {
            "anonymous": false,
            "id": 24616,
            "name": "VaultDestroyed",
            "nameLocation": "1120:14:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24614,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1150:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24616,
                  "src": "1135:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                    "typeString": "struct Fractron.Vault"
                  },
                  "typeName": {
                    "id": 24613,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24612,
                      "name": "Fractron.Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24256,
                      "src": "1135:14:10"
                    },
                    "referencedDeclaration": 24256,
                    "src": "1135:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24256_storage_ptr",
                      "typeString": "struct Fractron.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1134:22:10"
            },
            "src": "1114:43:10"
          },
          {
            "anonymous": false,
            "id": 24624,
            "name": "Transfer",
            "nameLocation": "1168:8:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24618,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1193:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24624,
                  "src": "1177:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24620,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1215:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24624,
                  "src": "1199:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1199:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24622,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1227:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24624,
                  "src": "1219:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1176:58:10"
            },
            "src": "1162:73:10"
          },
          {
            "body": {
              "id": 24785,
              "nodeType": "Block",
              "src": "1265:973:10",
              "statements": [
                {
                  "expression": {
                    "id": 24632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24627,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24577,
                      "src": "1275:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$24530",
                        "typeString": "contract User"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1282:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_User_$24530_$",
                          "typeString": "function () returns (contract User)"
                        },
                        "typeName": {
                          "id": 24629,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24628,
                            "name": "User",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24530,
                            "src": "1286:4:10"
                          },
                          "referencedDeclaration": 24530,
                          "src": "1286:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_User_$24530",
                            "typeString": "contract User"
                          }
                        }
                      },
                      "id": 24631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1282:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$24530",
                        "typeString": "contract User"
                      }
                    },
                    "src": "1275:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$24530",
                      "typeString": "contract User"
                    }
                  },
                  "id": 24633,
                  "nodeType": "ExpressionStatement",
                  "src": "1275:17:10"
                },
                {
                  "expression": {
                    "id": 24639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24634,
                      "name": "collection1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24580,
                      "src": "1302:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestNFT_$24564",
                        "typeString": "contract TestNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1316:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestNFT_$24564_$",
                          "typeString": "function () returns (contract TestNFT)"
                        },
                        "typeName": {
                          "id": 24636,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24635,
                            "name": "TestNFT",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24564,
                            "src": "1320:7:10"
                          },
                          "referencedDeclaration": 24564,
                          "src": "1320:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestNFT_$24564",
                            "typeString": "contract TestNFT"
                          }
                        }
                      },
                      "id": 24638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1316:13:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestNFT_$24564",
                        "typeString": "contract TestNFT"
                      }
                    },
                    "src": "1302:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestNFT_$24564",
                      "typeString": "contract TestNFT"
                    }
                  },
                  "id": 24640,
                  "nodeType": "ExpressionStatement",
                  "src": "1302:27:10"
                },
                {
                  "expression": {
                    "id": 24646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24641,
                      "name": "collection2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24583,
                      "src": "1339:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestNFT_$24564",
                        "typeString": "contract TestNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1353:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestNFT_$24564_$",
                          "typeString": "function () returns (contract TestNFT)"
                        },
                        "typeName": {
                          "id": 24643,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24642,
                            "name": "TestNFT",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24564,
                            "src": "1357:7:10"
                          },
                          "referencedDeclaration": 24564,
                          "src": "1357:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestNFT_$24564",
                            "typeString": "contract TestNFT"
                          }
                        }
                      },
                      "id": 24645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1353:13:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestNFT_$24564",
                        "typeString": "contract TestNFT"
                      }
                    },
                    "src": "1339:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestNFT_$24564",
                      "typeString": "contract TestNFT"
                    }
                  },
                  "id": 24647,
                  "nodeType": "ExpressionStatement",
                  "src": "1339:27:10"
                },
                {
                  "expression": {
                    "id": 24653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24648,
                      "name": "fractron",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24592,
                      "src": "1376:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Fractron_$24516",
                        "typeString": "contract Fractron"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1387:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Fractron_$24516_$",
                          "typeString": "function () returns (contract Fractron)"
                        },
                        "typeName": {
                          "id": 24650,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24649,
                            "name": "Fractron",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24516,
                            "src": "1391:8:10"
                          },
                          "referencedDeclaration": 24516,
                          "src": "1391:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Fractron_$24516",
                            "typeString": "contract Fractron"
                          }
                        }
                      },
                      "id": 24652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1387:14:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Fractron_$24516",
                        "typeString": "contract Fractron"
                      }
                    },
                    "src": "1376:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Fractron_$24516",
                      "typeString": "contract Fractron"
                    }
                  },
                  "id": 24654,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:25:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24660,
                            "name": "fractron",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24592,
                            "src": "1450:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fractron_$24516",
                              "typeString": "contract Fractron"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Fractron_$24516",
                              "typeString": "contract Fractron"
                            }
                          ],
                          "id": 24659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1442:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24658,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1442:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1442:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1461:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 24655,
                        "name": "collection1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24580,
                        "src": "1412:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24564",
                          "typeString": "contract TestNFT"
                        }
                      },
                      "id": 24657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23782,
                      "src": "1412:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 24663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1412:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24664,
                  "nodeType": "ExpressionStatement",
                  "src": "1412:54:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24670,
                            "name": "fractron",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24592,
                            "src": "1514:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fractron_$24516",
                              "typeString": "contract Fractron"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Fractron_$24516",
                              "typeString": "contract Fractron"
                            }
                          ],
                          "id": 24669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1506:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24668,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1506:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1506:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1525:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 24665,
                        "name": "collection2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24583,
                        "src": "1476:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24564",
                          "typeString": "contract TestNFT"
                        }
                      },
                      "id": 24667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23782,
                      "src": "1476:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 24673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24674,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:54:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24680,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24577,
                            "src": "1560:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_User_$24530",
                              "typeString": "contract User"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_User_$24530",
                              "typeString": "contract User"
                            }
                          ],
                          "id": 24679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1552:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24678,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1552:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1552:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24675,
                        "name": "hevm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24589,
                        "src": "1541:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3175",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2634,
                      "src": "1541:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1541:25:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24683,
                  "nodeType": "ExpressionStatement",
                  "src": "1541:25:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24689,
                            "name": "fractron",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24592,
                            "src": "1614:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fractron_$24516",
                              "typeString": "contract Fractron"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Fractron_$24516",
                              "typeString": "contract Fractron"
                            }
                          ],
                          "id": 24688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1606:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24687,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1606:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1606:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1625:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 24684,
                        "name": "collection1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24580,
                        "src": "1576:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24564",
                          "typeString": "contract TestNFT"
                        }
                      },
                      "id": 24686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23782,
                      "src": "1576:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 24692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1576:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24693,
                  "nodeType": "ExpressionStatement",
                  "src": "1576:54:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24699,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24577,
                            "src": "1659:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_User_$24530",
                              "typeString": "contract User"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_User_$24530",
                              "typeString": "contract User"
                            }
                          ],
                          "id": 24698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1651:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24697,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1651:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1651:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24694,
                        "name": "hevm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24589,
                        "src": "1640:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3175",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2634,
                      "src": "1640:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1640:25:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24702,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:25:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24708,
                            "name": "fractron",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24592,
                            "src": "1713:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fractron_$24516",
                              "typeString": "contract Fractron"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Fractron_$24516",
                              "typeString": "contract Fractron"
                            }
                          ],
                          "id": 24707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1705:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24706,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1705:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1705:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1724:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 24703,
                        "name": "collection2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24583,
                        "src": "1675:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24564",
                          "typeString": "contract TestNFT"
                        }
                      },
                      "id": 24705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23782,
                      "src": "1675:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 24711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1675:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24712,
                  "nodeType": "ExpressionStatement",
                  "src": "1675:54:10"
                },
                {
                  "expression": {
                    "id": 24717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24713,
                      "name": "collection1_id1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24568,
                      "src": "1740:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 24714,
                          "name": "collection1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24580,
                          "src": "1758:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestNFT_$24564",
                            "typeString": "contract TestNFT"
                          }
                        },
                        "id": 24715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24563,
                        "src": "1758:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 24716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1758:18:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1740:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24718,
                  "nodeType": "ExpressionStatement",
                  "src": "1740:36:10"
                },
                {
                  "expression": {
                    "id": 24723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24719,
                      "name": "collection1_id2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24570,
                      "src": "1786:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 24720,
                          "name": "collection1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24580,
                          "src": "1804:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestNFT_$24564",
                            "typeString": "contract TestNFT"
                          }
                        },
                        "id": 24721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24563,
                        "src": "1804:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 24722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1804:18:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1786:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24724,
                  "nodeType": "ExpressionStatement",
                  "src": "1786:36:10"
                },
                {
                  "expression": {
                    "id": 24729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24725,
                      "name": "collection2_id1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24572,
                      "src": "1832:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 24726,
                          "name": "collection2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24583,
                          "src": "1850:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestNFT_$24564",
                            "typeString": "contract TestNFT"
                          }
                        },
                        "id": 24727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24563,
                        "src": "1850:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 24728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1850:18:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1832:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24730,
                  "nodeType": "ExpressionStatement",
                  "src": "1832:36:10"
                },
                {
                  "expression": {
                    "id": 24735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24731,
                      "name": "collection2_id2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24574,
                      "src": "1878:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 24732,
                          "name": "collection2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24583,
                          "src": "1896:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestNFT_$24564",
                            "typeString": "contract TestNFT"
                          }
                        },
                        "id": 24733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24563,
                        "src": "1896:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 24734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1896:18:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1878:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24736,
                  "nodeType": "ExpressionStatement",
                  "src": "1878:36:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24740,
                        "name": "collection1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24580,
                        "src": "1943:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24564",
                          "typeString": "contract TestNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestNFT_$24564",
                          "typeString": "contract TestNFT"
                        }
                      ],
                      "expression": {
                        "id": 24737,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24596,
                        "src": "1925:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      "id": 24739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1925:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$_t_contract$_ERC721_$24144_$returns$__$bound_to$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$",
                        "typeString": "function (contract ERC721[] storage pointer,contract ERC721)"
                      }
                    },
                    "id": 24741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1925:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24742,
                  "nodeType": "ExpressionStatement",
                  "src": "1925:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24746,
                        "name": "collection1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24580,
                        "src": "1983:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24564",
                          "typeString": "contract TestNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestNFT_$24564",
                          "typeString": "contract TestNFT"
                        }
                      ],
                      "expression": {
                        "id": 24743,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24596,
                        "src": "1965:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      "id": 24745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1965:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$_t_contract$_ERC721_$24144_$returns$__$bound_to$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$",
                        "typeString": "function (contract ERC721[] storage pointer,contract ERC721)"
                      }
                    },
                    "id": 24747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1965:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24748,
                  "nodeType": "ExpressionStatement",
                  "src": "1965:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24752,
                        "name": "collection2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24583,
                        "src": "2023:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24564",
                          "typeString": "contract TestNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestNFT_$24564",
                          "typeString": "contract TestNFT"
                        }
                      ],
                      "expression": {
                        "id": 24749,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24596,
                        "src": "2005:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      "id": 24751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2005:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$_t_contract$_ERC721_$24144_$returns$__$bound_to$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$",
                        "typeString": "function (contract ERC721[] storage pointer,contract ERC721)"
                      }
                    },
                    "id": 24753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2005:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24754,
                  "nodeType": "ExpressionStatement",
                  "src": "2005:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24758,
                        "name": "collection1_id1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24568,
                        "src": "2058:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24755,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24603,
                        "src": "2046:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 24757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2046:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 24759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2046:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24760,
                  "nodeType": "ExpressionStatement",
                  "src": "2046:28:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24764,
                        "name": "collection1_id2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24570,
                        "src": "2096:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24761,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24603,
                        "src": "2084:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 24763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2084:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 24765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2084:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24766,
                  "nodeType": "ExpressionStatement",
                  "src": "2084:28:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24770,
                        "name": "collection2_id1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24572,
                        "src": "2134:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24767,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24603,
                        "src": "2122:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 24769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2122:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 24771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2122:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24772,
                  "nodeType": "ExpressionStatement",
                  "src": "2122:28:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24776,
                        "name": "collection2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24583,
                        "src": "2180:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24564",
                          "typeString": "contract TestNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestNFT_$24564",
                          "typeString": "contract TestNFT"
                        }
                      ],
                      "expression": {
                        "id": 24773,
                        "name": "nftContracts2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24600,
                        "src": "2161:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      "id": 24775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2161:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$_t_contract$_ERC721_$24144_$returns$__$bound_to$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$",
                        "typeString": "function (contract ERC721[] storage pointer,contract ERC721)"
                      }
                    },
                    "id": 24777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2161:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24778,
                  "nodeType": "ExpressionStatement",
                  "src": "2161:31:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24782,
                        "name": "collection2_id2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24574,
                        "src": "2215:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24779,
                        "name": "nftIds2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24606,
                        "src": "2202:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 24781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2202:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 24783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2202:29:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24784,
                  "nodeType": "ExpressionStatement",
                  "src": "2202:29:10"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 24786,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1250:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:2:10"
            },
            "returnParameters": {
              "id": 24626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1265:0:10"
            },
            "scope": 25142,
            "src": "1241:997:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24916,
              "nodeType": "Block",
              "src": "2280:895:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24792,
                            "name": "collection1_id1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24568,
                            "src": "2319:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 24790,
                            "name": "collection1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24580,
                            "src": "2299:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestNFT_$24564",
                              "typeString": "contract TestNFT"
                            }
                          },
                          "id": 24791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23669,
                          "src": "2299:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 24793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2299:36:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 24796,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2345:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractronTest_$25142",
                              "typeString": "contract FractronTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractronTest_$25142",
                              "typeString": "contract FractronTest"
                            }
                          ],
                          "id": 24795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2337:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24794,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2337:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2337:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24789,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "2290:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 24798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2290:61:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24799,
                  "nodeType": "ExpressionStatement",
                  "src": "2290:61:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 24803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2378:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2384:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 24805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2390:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2397:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 24800,
                        "name": "hevm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24589,
                        "src": "2362:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3175",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2708,
                      "src": "2362:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 24807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2362:40:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24808,
                  "nodeType": "ExpressionStatement",
                  "src": "2362:40:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 24812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2434:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 24811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2426:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24810,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2426:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2426:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 24816,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2446:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractronTest_$25142",
                              "typeString": "contract FractronTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractronTest_$25142",
                              "typeString": "contract FractronTest"
                            }
                          ],
                          "id": 24815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2438:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24814,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2438:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2438:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 24818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2453:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 24809,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24624,
                      "src": "2417:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 24819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:46:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24820,
                  "nodeType": "EmitStatement",
                  "src": "2412:51:10"
                },
                {
                  "assignments": [
                    24822
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24822,
                      "mutability": "mutable",
                      "name": "vaultId",
                      "nameLocation": "2482:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 24916,
                      "src": "2474:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24821,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2474:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24831,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24825,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24596,
                        "src": "2520:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      {
                        "id": 24826,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24603,
                        "src": "2546:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 24827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2566:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "4672616374696f6e616c69736564204e4654",
                        "id": 24828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2589:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        "value": "Fractionalised NFT"
                      },
                      {
                        "hexValue": "46524143",
                        "id": 24829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2623:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        },
                        "value": "FRAC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        }
                      ],
                      "expression": {
                        "id": 24823,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24592,
                        "src": "2492:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24516",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 24824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "split",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24366,
                      "src": "2492:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC721[] memory,uint256[] memory,uint256,string memory,string memory) payable external returns (uint256)"
                      }
                    },
                    "id": 24830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2492:147:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2474:165:10"
                },
                {
                  "assignments": [
                    24836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24836,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "2672:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 24916,
                      "src": "2650:27:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                        "typeString": "struct Fractron.Vault"
                      },
                      "typeName": {
                        "id": 24835,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24834,
                          "name": "Fractron.Vault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24256,
                          "src": "2650:14:10"
                        },
                        "referencedDeclaration": 24256,
                        "src": "2650:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$24256_storage_ptr",
                          "typeString": "struct Fractron.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24841,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24839,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24822,
                        "src": "2698:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24837,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24592,
                        "src": "2680:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24516",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 24838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24454,
                      "src": "2680:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Vault_$24256_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct Fractron.Vault memory)"
                      }
                    },
                    "id": 24840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2680:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                      "typeString": "struct Fractron.Vault memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2650:56:10"
                },
                {
                  "body": {
                    "id": 24896,
                    "nodeType": "Block",
                    "src": "2773:272:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 24860,
                                    "name": "nftIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24603,
                                    "src": "2843:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 24862,
                                  "indexExpression": {
                                    "id": 24861,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24843,
                                    "src": "2850:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2843:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 24855,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24836,
                                      "src": "2813:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 24856,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftContracts",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24247,
                                    "src": "2813:18:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                                      "typeString": "contract ERC721[] memory"
                                    }
                                  },
                                  "id": 24858,
                                  "indexExpression": {
                                    "id": 24857,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24843,
                                    "src": "2832:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2813:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                },
                                "id": 24859,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23669,
                                "src": "2813:29:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 24863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2813:40:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 24866,
                                  "name": "fractron",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24592,
                                  "src": "2879:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Fractron_$24516",
                                    "typeString": "contract Fractron"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Fractron_$24516",
                                    "typeString": "contract Fractron"
                                  }
                                ],
                                "id": 24865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2871:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24864,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2871:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2871:17:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 24854,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 320,
                            "src": "2787:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 24868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2787:115:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24869,
                        "nodeType": "ExpressionStatement",
                        "src": "2787:115:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 24873,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24836,
                                      "src": "2933:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 24874,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftContracts",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24247,
                                    "src": "2933:18:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                                      "typeString": "contract ERC721[] memory"
                                    }
                                  },
                                  "id": 24876,
                                  "indexExpression": {
                                    "id": 24875,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24843,
                                    "src": "2952:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2933:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                ],
                                "id": 24872,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2925:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24871,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2925:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2925:30:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 24880,
                                    "name": "nftContracts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24596,
                                    "src": "2965:12:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                                      "typeString": "contract ERC721[] storage ref"
                                    }
                                  },
                                  "id": 24882,
                                  "indexExpression": {
                                    "id": 24881,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24843,
                                    "src": "2978:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2965:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                ],
                                "id": 24879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2957:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24878,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2957:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2957:24:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 24870,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 320,
                            "src": "2916:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 24884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2916:66:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24885,
                        "nodeType": "ExpressionStatement",
                        "src": "2916:66:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 24887,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24836,
                                  "src": "3005:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                    "typeString": "struct Fractron.Vault memory"
                                  }
                                },
                                "id": 24888,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenIds",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24250,
                                "src": "3005:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 24890,
                              "indexExpression": {
                                "id": 24889,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24843,
                                "src": "3020:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3005:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 24891,
                                "name": "nftIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24603,
                                "src": "3024:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 24893,
                              "indexExpression": {
                                "id": 24892,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24843,
                                "src": "3031:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3024:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 24886,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 514,
                            "src": "2996:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 24894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2996:38:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24895,
                        "nodeType": "ExpressionStatement",
                        "src": "2996:38:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24846,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24843,
                      "src": "2737:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 24847,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24836,
                          "src": "2741:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24848,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftContracts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24247,
                        "src": "2741:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                          "typeString": "contract ERC721[] memory"
                        }
                      },
                      "id": 24849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2741:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2737:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24897,
                  "initializationExpression": {
                    "assignments": [
                      24843
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24843,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2730:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 24897,
                        "src": "2722:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24842,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2722:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24845,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2734:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2722:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2768:3:10",
                      "subExpression": {
                        "id": 24851,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24843,
                        "src": "2768:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24853,
                    "nodeType": "ExpressionStatement",
                    "src": "2768:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "2717:328:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24899,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24836,
                          "src": "3064:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24900,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24252,
                        "src": "3064:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 24901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3083:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 24898,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3055:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3055:38:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24903,
                  "nodeType": "ExpressionStatement",
                  "src": "3055:38:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 24910,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3150:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FractronTest_$25142",
                                  "typeString": "contract FractronTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FractronTest_$25142",
                                  "typeString": "contract FractronTest"
                                }
                              ],
                              "id": 24909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3142:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24908,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3142:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24911,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3142:13:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 24905,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24836,
                              "src": "3112:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                "typeString": "struct Fractron.Vault memory"
                              }
                            },
                            "id": 24906,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24255,
                            "src": "3112:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTShare_$24237",
                              "typeString": "contract NFTShare"
                            }
                          },
                          "id": 24907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23243,
                          "src": "3112:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 24912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3112:44:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 24913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3158:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 24904,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3103:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3103:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24915,
                  "nodeType": "ExpressionStatement",
                  "src": "3103:65:10"
                }
              ]
            },
            "functionSelector": "085d70ea",
            "id": 24917,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCanSplitToken",
            "nameLocation": "2253:17:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2270:2:10"
            },
            "returnParameters": {
              "id": 24788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2280:0:10"
            },
            "scope": 25142,
            "src": "2244:931:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25078,
              "nodeType": "Block",
              "src": "3232:1087:10",
              "statements": [
                {
                  "assignments": [
                    24921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24921,
                      "mutability": "mutable",
                      "name": "vaultId",
                      "nameLocation": "3250:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 25078,
                      "src": "3242:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24920,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3242:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24930,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24924,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24596,
                        "src": "3288:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      {
                        "id": 24925,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24603,
                        "src": "3314:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 24926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3334:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "4672616374696f6e616c69736564204e4654",
                        "id": 24927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3357:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        "value": "Fractionalised NFT"
                      },
                      {
                        "hexValue": "46524143",
                        "id": 24928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3391:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        },
                        "value": "FRAC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        }
                      ],
                      "expression": {
                        "id": 24922,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24592,
                        "src": "3260:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24516",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 24923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "split",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24366,
                      "src": "3260:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC721[] memory,uint256[] memory,uint256,string memory,string memory) payable external returns (uint256)"
                      }
                    },
                    "id": 24929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3260:147:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3242:165:10"
                },
                {
                  "assignments": [
                    24935
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24935,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "3440:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 25078,
                      "src": "3418:27:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                        "typeString": "struct Fractron.Vault"
                      },
                      "typeName": {
                        "id": 24934,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24933,
                          "name": "Fractron.Vault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24256,
                          "src": "3418:14:10"
                        },
                        "referencedDeclaration": 24256,
                        "src": "3418:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$24256_storage_ptr",
                          "typeString": "struct Fractron.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24940,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24938,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24921,
                        "src": "3466:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24936,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24592,
                        "src": "3448:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24516",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 24937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24454,
                      "src": "3448:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Vault_$24256_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct Fractron.Vault memory)"
                      }
                    },
                    "id": 24939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3448:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                      "typeString": "struct Fractron.Vault memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3418:56:10"
                },
                {
                  "body": {
                    "id": 24970,
                    "nodeType": "Block",
                    "src": "3540:148:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 24959,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24935,
                                      "src": "3610:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 24960,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenIds",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24250,
                                    "src": "3610:14:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 24962,
                                  "indexExpression": {
                                    "id": 24961,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24942,
                                    "src": "3625:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3610:17:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 24954,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24935,
                                      "src": "3580:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 24955,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftContracts",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24247,
                                    "src": "3580:18:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                                      "typeString": "contract ERC721[] memory"
                                    }
                                  },
                                  "id": 24957,
                                  "indexExpression": {
                                    "id": 24956,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24942,
                                    "src": "3599:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3580:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                },
                                "id": 24958,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23669,
                                "src": "3580:29:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 24963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3580:48:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 24966,
                                  "name": "fractron",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24592,
                                  "src": "3654:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Fractron_$24516",
                                    "typeString": "contract Fractron"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Fractron_$24516",
                                    "typeString": "contract Fractron"
                                  }
                                ],
                                "id": 24965,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3646:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24964,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3646:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3646:17:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 24953,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 320,
                            "src": "3554:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 24968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3554:123:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24969,
                        "nodeType": "ExpressionStatement",
                        "src": "3554:123:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24945,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24942,
                      "src": "3504:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 24946,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24935,
                          "src": "3508:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24947,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftContracts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24247,
                        "src": "3508:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                          "typeString": "contract ERC721[] memory"
                        }
                      },
                      "id": 24948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3508:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3504:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24971,
                  "initializationExpression": {
                    "assignments": [
                      24942
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24942,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3497:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 24971,
                        "src": "3489:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24941,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3489:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24944,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3501:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3489:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3535:3:10",
                      "subExpression": {
                        "id": 24950,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24942,
                        "src": "3535:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24952,
                    "nodeType": "ExpressionStatement",
                    "src": "3535:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "3484:204:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 24978,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3744:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FractronTest_$25142",
                                  "typeString": "contract FractronTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FractronTest_$25142",
                                  "typeString": "contract FractronTest"
                                }
                              ],
                              "id": 24977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3736:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24976,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3736:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3736:13:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 24973,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24935,
                              "src": "3706:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                "typeString": "struct Fractron.Vault memory"
                              }
                            },
                            "id": 24974,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24255,
                            "src": "3706:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTShare_$24237",
                              "typeString": "contract NFTShare"
                            }
                          },
                          "id": 24975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23243,
                          "src": "3706:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 24980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3706:44:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 24981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3752:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 24972,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3697:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3697:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24983,
                  "nodeType": "ExpressionStatement",
                  "src": "3697:65:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24991,
                            "name": "fractron",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24592,
                            "src": "3809:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fractron_$24516",
                              "typeString": "contract Fractron"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Fractron_$24516",
                              "typeString": "contract Fractron"
                            }
                          ],
                          "id": 24990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3801:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24989,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3801:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3801:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 24995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3825:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 24994,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3825:7:10",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 24993,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3820:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3820:13:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 24997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "3820:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 24984,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24935,
                          "src": "3773:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24987,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24255,
                        "src": "3773:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24237",
                          "typeString": "contract NFTShare"
                        }
                      },
                      "id": 24988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23317,
                      "src": "3773:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 24998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3773:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24999,
                  "nodeType": "ExpressionStatement",
                  "src": "3773:65:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25003,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24921,
                        "src": "3862:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25000,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24592,
                        "src": "3848:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24516",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 25002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "join",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24441,
                      "src": "3848:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 25004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3848:22:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25005,
                  "nodeType": "ExpressionStatement",
                  "src": "3848:22:10"
                },
                {
                  "body": {
                    "id": 25035,
                    "nodeType": "Block",
                    "src": "3937:144:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 25024,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24935,
                                      "src": "4007:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 25025,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenIds",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24250,
                                    "src": "4007:14:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 25027,
                                  "indexExpression": {
                                    "id": 25026,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25007,
                                    "src": "4022:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4007:17:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 25019,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24935,
                                      "src": "3977:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 25020,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftContracts",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24247,
                                    "src": "3977:18:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                                      "typeString": "contract ERC721[] memory"
                                    }
                                  },
                                  "id": 25022,
                                  "indexExpression": {
                                    "id": 25021,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25007,
                                    "src": "3996:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3977:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                },
                                "id": 25023,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23669,
                                "src": "3977:29:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 25028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3977:48:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 25031,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4051:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FractronTest_$25142",
                                    "typeString": "contract FractronTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_FractronTest_$25142",
                                    "typeString": "contract FractronTest"
                                  }
                                ],
                                "id": 25030,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4043:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 25029,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4043:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 25032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4043:13:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 25018,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 320,
                            "src": "3951:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 25033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3951:119:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25034,
                        "nodeType": "ExpressionStatement",
                        "src": "3951:119:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25010,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25007,
                      "src": "3901:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 25011,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24935,
                          "src": "3905:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 25012,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftContracts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24247,
                        "src": "3905:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                          "typeString": "contract ERC721[] memory"
                        }
                      },
                      "id": 25013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3905:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3901:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25036,
                  "initializationExpression": {
                    "assignments": [
                      25007
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 25007,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3894:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 25036,
                        "src": "3886:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25006,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3886:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 25009,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 25008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3898:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3886:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 25016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3932:3:10",
                      "subExpression": {
                        "id": 25015,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25007,
                        "src": "3932:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25017,
                    "nodeType": "ExpressionStatement",
                    "src": "3932:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "3881:200:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 25043,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4137:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FractronTest_$25142",
                                  "typeString": "contract FractronTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FractronTest_$25142",
                                  "typeString": "contract FractronTest"
                                }
                              ],
                              "id": 25042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4129:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25041,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4129:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4129:13:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 25038,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24935,
                              "src": "4099:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                "typeString": "struct Fractron.Vault memory"
                              }
                            },
                            "id": 25039,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24255,
                            "src": "4099:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTShare_$24237",
                              "typeString": "contract NFTShare"
                            }
                          },
                          "id": 25040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23243,
                          "src": "4099:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4099:44:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 25046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4145:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 25037,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4090:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4090:57:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25048,
                  "nodeType": "ExpressionStatement",
                  "src": "4090:57:10"
                },
                {
                  "expression": {
                    "id": 25054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25049,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24935,
                      "src": "4158:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                        "typeString": "struct Fractron.Vault memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25052,
                          "name": "vaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24921,
                          "src": "4184:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 25050,
                          "name": "fractron",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24592,
                          "src": "4166:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Fractron_$24516",
                            "typeString": "contract Fractron"
                          }
                        },
                        "id": 25051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getVault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24454,
                        "src": "4166:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Vault_$24256_memory_ptr_$",
                          "typeString": "function (uint256) view external returns (struct Fractron.Vault memory)"
                        }
                      },
                      "id": 25053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4166:26:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                        "typeString": "struct Fractron.Vault memory"
                      }
                    },
                    "src": "4158:34:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                      "typeString": "struct Fractron.Vault memory"
                    }
                  },
                  "id": 25055,
                  "nodeType": "ExpressionStatement",
                  "src": "4158:34:10"
                },
                {
                  "body": {
                    "id": 25076,
                    "nodeType": "Block",
                    "src": "4258:55:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 25069,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24935,
                                  "src": "4281:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                    "typeString": "struct Fractron.Vault memory"
                                  }
                                },
                                "id": 25070,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenIds",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24250,
                                "src": "4281:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 25072,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 25071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4296:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4281:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 25073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4300:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25068,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 514,
                            "src": "4272:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 25074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4272:30:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25075,
                        "nodeType": "ExpressionStatement",
                        "src": "4272:30:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25060,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25057,
                      "src": "4222:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 25061,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24935,
                          "src": "4226:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 25062,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftContracts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24247,
                        "src": "4226:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                          "typeString": "contract ERC721[] memory"
                        }
                      },
                      "id": 25063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4226:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4222:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25077,
                  "initializationExpression": {
                    "assignments": [
                      25057
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 25057,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4215:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 25077,
                        "src": "4207:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25056,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4207:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 25059,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 25058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4219:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4207:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 25066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4253:3:10",
                      "subExpression": {
                        "id": 25065,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25057,
                        "src": "4253:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25067,
                    "nodeType": "ExpressionStatement",
                    "src": "4253:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "4202:111:10"
                }
              ]
            },
            "functionSelector": "5ddea6a8",
            "id": 25079,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTotalSupplyOwnerCanJoinToken",
            "nameLocation": "3190:32:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3222:2:10"
            },
            "returnParameters": {
              "id": 24919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3232:0:10"
            },
            "scope": 25142,
            "src": "3181:1138:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25140,
              "nodeType": "Block",
              "src": "4363:526:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25085,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24596,
                        "src": "4401:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      {
                        "id": 25086,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24603,
                        "src": "4427:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 25087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4447:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "4672616374696f6e616c69736564204e4654",
                        "id": 25088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4470:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        "value": "Fractionalised NFT"
                      },
                      {
                        "hexValue": "46524143",
                        "id": 25089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4504:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        },
                        "value": "FRAC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        }
                      ],
                      "expression": {
                        "id": 25082,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24592,
                        "src": "4373:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24516",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 25084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "split",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24366,
                      "src": "4373:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC721[] memory,uint256[] memory,uint256,string memory,string memory) payable external returns (uint256)"
                      }
                    },
                    "id": 25090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4373:147:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25091,
                  "nodeType": "ExpressionStatement",
                  "src": "4373:147:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25095,
                        "name": "nftContracts2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24600,
                        "src": "4558:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      {
                        "id": 25096,
                        "name": "nftIds2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24606,
                        "src": "4585:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 25097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4606:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "4672616374696f6e616c69736564204e4654",
                        "id": 25098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4629:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        "value": "Fractionalised NFT"
                      },
                      {
                        "hexValue": "46524143",
                        "id": 25099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4663:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        },
                        "value": "FRAC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        }
                      ],
                      "expression": {
                        "id": 25092,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24592,
                        "src": "4530:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24516",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 25094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "split",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24366,
                      "src": "4530:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC721[] memory,uint256[] memory,uint256,string memory,string memory) payable external returns (uint256)"
                      }
                    },
                    "id": 25100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4530:149:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25101,
                  "nodeType": "ExpressionStatement",
                  "src": "4530:149:10"
                },
                {
                  "assignments": [
                    25107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25107,
                      "mutability": "mutable",
                      "name": "vaults",
                      "nameLocation": "4714:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 25140,
                      "src": "4690:30:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Vault_$24256_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Fractron.Vault[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 25105,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25104,
                            "name": "Fractron.Vault",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24256,
                            "src": "4690:14:10"
                          },
                          "referencedDeclaration": 24256,
                          "src": "4690:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_storage_ptr",
                            "typeString": "struct Fractron.Vault"
                          }
                        },
                        "id": 25106,
                        "nodeType": "ArrayTypeName",
                        "src": "4690:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vault_$24256_storage_$dyn_storage_ptr",
                          "typeString": "struct Fractron.Vault[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25111,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25108,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24592,
                        "src": "4723:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24516",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 25109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAllVaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24496,
                      "src": "4723:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_struct$_Vault_$24256_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (struct Fractron.Vault memory[] memory)"
                      }
                    },
                    "id": 25110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4723:23:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Vault_$24256_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Fractron.Vault memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4690:56:10"
                },
                {
                  "body": {
                    "id": 25138,
                    "nodeType": "Block",
                    "src": "4800:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 25135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 25126,
                                        "name": "vaults",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25107,
                                        "src": "4833:6:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Vault_$24256_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct Fractron.Vault memory[] memory"
                                        }
                                      },
                                      "id": 25128,
                                      "indexExpression": {
                                        "id": 25127,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25113,
                                        "src": "4840:1:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4833:9:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 25129,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenContract",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24255,
                                    "src": "4833:23:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NFTShare_$24237",
                                      "typeString": "contract NFTShare"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_NFTShare_$24237",
                                      "typeString": "contract NFTShare"
                                    }
                                  ],
                                  "id": 25125,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4825:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 25124,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4825:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 25130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4825:32:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 25133,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4869:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 25132,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4861:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 25131,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4861:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 25134,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4861:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4825:46:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 25123,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              269,
                              290
                            ],
                            "referencedDeclaration": 269,
                            "src": "4814:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 25136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4814:58:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25137,
                        "nodeType": "ExpressionStatement",
                        "src": "4814:58:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25116,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25113,
                      "src": "4776:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 25117,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25107,
                        "src": "4780:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vault_$24256_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Fractron.Vault memory[] memory"
                        }
                      },
                      "id": 25118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4780:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4776:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25139,
                  "initializationExpression": {
                    "assignments": [
                      25113
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 25113,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4769:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 25139,
                        "src": "4761:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25112,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4761:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 25115,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 25114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4773:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4761:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 25121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4795:3:10",
                      "subExpression": {
                        "id": 25120,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25113,
                        "src": "4795:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25122,
                    "nodeType": "ExpressionStatement",
                    "src": "4795:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "4756:127:10"
                }
              ]
            },
            "functionSelector": "f6781937",
            "id": 25141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCanGetAllVaults",
            "nameLocation": "4334:19:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4353:2:10"
            },
            "returnParameters": {
              "id": 25081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4363:0:10"
            },
            "scope": 25142,
            "src": "4325:564:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 25143,
        "src": "611:4280:10",
        "usedErrors": []
      }
    ],
    "src": "32:4860:10"
  }
}