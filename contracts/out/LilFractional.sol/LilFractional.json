{
  "abi": [
    {
      "inputs": [],
      "name": "VaultNotFound",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct LilFractional.Vault",
          "name": "vault",
          "type": "tuple"
        }
      ],
      "name": "VaultCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721",
              "name": "nftContract",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct LilFractional.Vault",
          "name": "vault",
          "type": "tuple"
        }
      ],
      "name": "VaultDestroyed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getVault",
      "outputs": [
        {
          "internalType": "contract ERC721",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenSupply",
          "type": "uint256"
        },
        {
          "internalType": "contract NFTShare",
          "name": "tokenContract",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "join",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC721",
          "name": "nftContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "split",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1755:3110:11:-:0;;;2788:1;2761:28;;1755:3110;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610620000445760003560e01c8063049878f31462000049578063150b7a0214620000625780639403b63414620000a1578063cf6a4d161462000125575b600080fd5b620000606200005a3660046200047f565b6200014b565b005b620000836200007336600462000545565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b348015620000ae57600080fd5b50620000f5620000c03660046200047f565b600160208190526000918252604090912080549181015460028201546003909201546001600160a01b03938416939192911684565b604080516001600160a01b0395861681526020810194909452830191909152909116606082015260800162000098565b6200013c62000136366004620005f8565b620002d1565b60405190815260200162000098565b600081815260016020818152604092839020835160808101855281546001600160a01b03908116825293820154928101929092526002810154938201939093526003909201541660608201819052620001b75760405163dee790fb60e01b815260040160405180910390fd5b600082815260016020819052604080832080546001600160a01b031990811682559281018490556002810193909355600390920180549091169055606082015182820151915163079cc67960e41b815233600482015260248101929092526001600160a01b0316906379cc679090604401600060405180830381600087803b1580156200024357600080fd5b505af115801562000258573d6000803e3d6000fd5b5050825160208401516040516323b872dd60e01b815230600482015233602482015260448101919091526001600160a01b0390911692506323b872dd9150606401600060405180830381600087803b158015620002b457600080fd5b505af1158015620002c9573d6000803e3d6000fd5b505050505050565b60008083838633604051620002e69062000471565b620002f59493929190620006db565b604051809103906000f08015801562000312573d6000803e3d6000fd5b5060408051608080820183526001600160a01b03808c1680845260208085018d81528587018d81528489166060808901918252895195865292519385019390935251968301969096525190911693810193909352929350917f2d35c27b22fcea532e2e6ce89cdda1b4734be07b3a7b45e5022730144b0118bc910160405180910390a160008054815260016020818152604092839020845181546001600160a01b03199081166001600160a01b03928316178355928601519382019390935584840151600282015560608501516003909101805490921690831617905590516323b872dd60e01b815233600482015230602482015260448101899052908916906323b872dd90606401600060405180830381600087803b1580156200043657600080fd5b505af11580156200044b573d6000803e3d6000fd5b5050600080549250905080620004618362000726565b9091555098975050505050505050565b6110f8806200075183390190565b6000602082840312156200049257600080fd5b5035919050565b6001600160a01b0381168114620004af57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115620004e657620004e6620004b2565b604051601f8501601f19908116603f01168101908282118183101715620005115762000511620004b2565b816040528093508581528686860111156200052b57600080fd5b858560208301376000602087830101525050509392505050565b600080600080608085870312156200055c57600080fd5b8435620005698162000499565b935060208501356200057b8162000499565b925060408501359150606085013567ffffffffffffffff8111156200059f57600080fd5b8501601f81018713620005b157600080fd5b620005c287823560208401620004c8565b91505092959194509250565b600082601f830112620005e057600080fd5b620005f183833560208501620004c8565b9392505050565b600080600080600060a086880312156200061157600080fd5b85356200061e8162000499565b94506020860135935060408601359250606086013567ffffffffffffffff808211156200064a57600080fd5b6200065889838a01620005ce565b935060808801359150808211156200066f57600080fd5b506200067e88828901620005ce565b9150509295509295909350565b6000815180845260005b81811015620006b35760208185018101518683018201520162000695565b81811115620006c6576000602083870101525b50601f01601f19169290920160200192915050565b608081526000620006f060808301876200068b565b82810360208401526200070481876200068b565b604084019590955250506001600160a01b039190911660609091015292915050565b60006000198214156200074957634e487b7160e01b600052601160045260246000fd5b506001019056fe60e0604052604051620010f8380380620010f8833981016040819052620000269162000308565b8383601282600090805190602001906200004292919062000195565b5081516200005890600190602085019062000195565b5060ff81166080524660a0526200006e6200008c565b60c052506200008291508290508362000128565b50505050620004a5565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000c09190620003da565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546200013c91906200047e565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b828054620001a3906200039d565b90600052602060002090601f016020900481019282620001c7576000855562000212565b82601f10620001e257805160ff191683800117855562000212565b8280016001018555821562000212579182015b8281111562000212578251825591602001919060010190620001f5565b506200022092915062000224565b5090565b5b8082111562000220576000815560010162000225565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200026357600080fd5b81516001600160401b03808211156200028057620002806200023b565b604051601f8301601f19908116603f01168101908282118183101715620002ab57620002ab6200023b565b81604052838152602092508683858801011115620002c857600080fd5b600091505b83821015620002ec5785820183015181830184015290820190620002cd565b83821115620002fe5760008385830101525b9695505050505050565b600080600080608085870312156200031f57600080fd5b84516001600160401b03808211156200033757600080fd5b620003458883890162000251565b955060208701519150808211156200035c57600080fd5b506200036b8782880162000251565b60408701516060880151919550935090506001600160a01b03811681146200039257600080fd5b939692955090935050565b600181811c90821680620003b257607f821691505b60208210811415620003d457634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c915080831680620003f757607f831692505b60208084108214156200041857634e487b7160e01b86526022600452602486fd5b8180156200042f5760018114620004415762000470565b60ff1986168952848901965062000470565b60008a81526020902060005b86811015620004685781548b8201529085019083016200044d565b505084890196505b509498975050505050505050565b60008219821115620004a057634e487b7160e01b600052601160045260246000fd5b500190565b60805160a05160c051610c23620004d560003960006104e2015260006104ad015260006101780152610c236000f3fe6080604052600436106100c25760003560e01c806370a082311161007f57806395d89b411161005957806395d89b4114610230578063a9059cbb14610245578063d505accf14610265578063dd62ed3e1461028557600080fd5b806370a08231146101c157806379cc6790146101ee5780637ecebe001461020357600080fd5b806306fdde03146100c7578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610146578063313ce567146101665780633644e515146101ac575b600080fd5b3480156100d357600080fd5b506100dc6102bd565b6040516100e99190610952565b60405180910390f35b3480156100fe57600080fd5b5061011261010d3660046109c3565b61034b565b60405190151581526020016100e9565b34801561012e57600080fd5b5061013860025481565b6040519081526020016100e9565b34801561015257600080fd5b506101126101613660046109ed565b6103b7565b34801561017257600080fd5b5061019a7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100e9565b3480156101b857600080fd5b506101386104a9565b3480156101cd57600080fd5b506101386101dc366004610a29565b60036020526000908152604090205481565b6102016101fc3660046109c3565b610504565b005b34801561020f57600080fd5b5061013861021e366004610a29565b60056020526000908152604090205481565b34801561023c57600080fd5b506100dc61056f565b34801561025157600080fd5b506101126102603660046109c3565b61057c565b34801561027157600080fd5b50610201610280366004610a4b565b6105f4565b34801561029157600080fd5b506101386102a0366004610abe565b600460209081526000928352604080842090915290825290205481565b600080546102ca90610af1565b80601f01602080910402602001604051908101604052809291908181526020018280546102f690610af1565b80156103435780601f1061031857610100808354040283529160200191610343565b820191906000526020600020905b81548152906001019060200180831161032657829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103a69086815260200190565b60405180910390a350600192915050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610413576103ee8382610b2c565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b0385166000908152600360205260408120805485929061043b908490610b2c565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104969087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104df576104da61083d565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b038216600090815260046020908152604080832033845290915290205460001981146105605761053b8282610b2c565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b61056a83836108d7565b505050565b600180546102ca90610af1565b3360009081526003602052604081208054839190839061059d908490610b2c565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103a69086815260200190565b428410156106495760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b600060016106556104a9565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610761573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906107975750876001600160a01b0316816001600160a01b0316145b6107d45760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610640565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161086f9190610b51565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b038216600090815260036020526040812080548392906108ff908490610b2c565b90915550506002805482900390556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b8181101561097f57858101830151858201604001528201610963565b81811115610991576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146109be57600080fd5b919050565b600080604083850312156109d657600080fd5b6109df836109a7565b946020939093013593505050565b600080600060608486031215610a0257600080fd5b610a0b846109a7565b9250610a19602085016109a7565b9150604084013590509250925092565b600060208284031215610a3b57600080fd5b610a44826109a7565b9392505050565b600080600080600080600060e0888a031215610a6657600080fd5b610a6f886109a7565b9650610a7d602089016109a7565b95506040880135945060608801359350608088013560ff81168114610aa157600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610ad157600080fd5b610ada836109a7565b9150610ae8602084016109a7565b90509250929050565b600181811c90821680610b0557607f821691505b60208210811415610b2657634e487b7160e01b600052602260045260246000fd5b50919050565b600082821015610b4c57634e487b7160e01b600052601160045260246000fd5b500390565b600080835481600182811c915080831680610b6d57607f831692505b6020808410821415610b8d57634e487b7160e01b86526022600452602486fd5b818015610ba15760018114610bb257610bdf565b60ff19861689528489019650610bdf565b60008a81526020902060005b86811015610bd75781548b820152908501908301610bbe565b505084890196505b50949897505050505050505056fea26469706673582212201845fc9509405b78de7280fc0e3d50556fc343fb70cb7435cf34dcea5ef4c23264736f6c634300080a0033a264697066735822122035038adb7330697c906d51162d4c431c1a0a54130446b3603ca6b46012e9cdda64736f6c634300080a0033",
    "sourceMap": "1755:3110:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4297:336;;;;;;:::i;:::-;;:::i;:::-;;4708:155;;;;;;:::i;:::-;-1:-1:-1;;;4708:155:11;;;;;;;;;;-1:-1:-1;;;;;;2064:33:15;;;2046:52;;2034:2;2019:18;4708:155:11;;;;;;;;2888:41;;;;;;;;;;-1:-1:-1;2888:41:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2888:41:11;;;;;;;;;;;;;;-1:-1:-1;;;;;2430:15:15;;;2412:34;;2477:2;2462:18;;2455:34;;;;2505:18;;2498:34;;;;2568:15;;;2563:2;2548:18;;2541:43;2361:3;2346:19;2888:41:11;2109:481:15;3521:524:11;;;;;;:::i;:::-;;:::i;:::-;;;3804:25:15;;;3792:2;3777:18;3521:524:11;3658:177:15;4297:336:11;4347:18;4368:17;;;:8;:17;;;;;;;;;4347:38;;;;;;;;;-1:-1:-1;;;;;4347:38:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4390:70;;4445:15;;-1:-1:-1;;;4445:15:11;;;;;;;;;;;4390:70;4472:17;;;;:8;:17;;;;;;;;4465:24;;-1:-1:-1;;;;;;4465:24:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4494:19;;;;4535:17;;;;4494:59;;-1:-1:-1;;;4494:59:11;;4523:10;4494:59;;;4014:51:15;4081:18;;;4074:34;;;;-1:-1:-1;;;;;4494:28:11;;;;3987:18:15;;4494:59:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4557:17:11;;4615:13;;;;4557:72;;-1:-1:-1;;;4557:72:11;;4596:4;4557:72;;;4359:34:15;4603:10:11;4409:18:15;;;4402:43;4461:18;;;4454:34;;;;-1:-1:-1;;;;;4557:30:11;;;;-1:-1:-1;4557:30:11;;-1:-1:-1;4294:18:15;;4557:72:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4343:290;4297:336;:::o;3521:524::-;3668:7;3681:22;3719:4;3725:6;3733;3741:10;3706:46;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3778:118:11;;;;;;;;;-1:-1:-1;;;;;3778:118:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3906:19;;5767:41:15;;;5846:24;;5824:20;;;5817:54;;;;5909:24;5887:20;;;5880:54;;;;5976:24;5972:33;;;5950:20;;;5943:63;;;;3681:71:11;;-1:-1:-1;3778:118:11;3906:19;;5701::15;3906::11;;;;;;;3930:17;3939:7;;3930:17;;:8;:17;;;;;;;;;:25;;;;-1:-1:-1;;;;;;3930:25:11;;;-1:-1:-1;;;;;3930:25:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3960:60;;-1:-1:-1;;;3960:60:11;;3985:10;3960:60;;;4359:34:15;4005:4:11;4409:18:15;;;4402:43;4461:18;;;4454:34;;;3960:24:11;;;;;;4294:18:15;;3960:60:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4032:7:11;:9;;;-1:-1:-1;4032:7:11;-1:-1:-1;4032:7:11;:9;;;:::i;:::-;;;;-1:-1:-1;4025:16:11;3521:524;-1:-1:-1;;;;;;;;3521:524:11:o;-1:-1:-1:-;;;;;;;;:::o;14:180:15:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:15;;14:180;-1:-1:-1;14:180:15:o;199:131::-;-1:-1:-1;;;;;274:31:15;;264:42;;254:70;;320:1;317;310:12;254:70;199:131;:::o;335:127::-;396:10;391:3;387:20;384:1;377:31;427:4;424:1;417:15;451:4;448:1;441:15;467:631;531:5;561:18;602:2;594:6;591:14;588:40;;;608:18;;:::i;:::-;683:2;677:9;651:2;737:15;;-1:-1:-1;;733:24:15;;;759:2;729:33;725:42;713:55;;;783:18;;;803:22;;;780:46;777:72;;;829:18;;:::i;:::-;869:10;865:2;858:22;898:6;889:15;;928:6;920;913:22;968:3;959:6;954:3;950:16;947:25;944:45;;;985:1;982;975:12;944:45;1035:6;1030:3;1023:4;1015:6;1011:17;998:44;1090:1;1083:4;1074:6;1066;1062:19;1058:30;1051:41;;;;467:631;;;;;:::o;1103:794::-;1198:6;1206;1214;1222;1275:3;1263:9;1254:7;1250:23;1246:33;1243:53;;;1292:1;1289;1282:12;1243:53;1331:9;1318:23;1350:31;1375:5;1350:31;:::i;:::-;1400:5;-1:-1:-1;1457:2:15;1442:18;;1429:32;1470:33;1429:32;1470:33;:::i;:::-;1522:7;-1:-1:-1;1576:2:15;1561:18;;1548:32;;-1:-1:-1;1631:2:15;1616:18;;1603:32;1658:18;1647:30;;1644:50;;;1690:1;1687;1680:12;1644:50;1713:22;;1766:4;1758:13;;1754:27;-1:-1:-1;1744:55:15;;1795:1;1792;1785:12;1744:55;1818:73;1883:7;1878:2;1865:16;1860:2;1856;1852:11;1818:73;:::i;:::-;1808:83;;;1103:794;;;;;;;:::o;2595:221::-;2638:5;2691:3;2684:4;2676:6;2672:17;2668:27;2658:55;;2709:1;2706;2699:12;2658:55;2731:79;2806:3;2797:6;2784:20;2777:4;2769:6;2765:17;2731:79;:::i;:::-;2722:88;2595:221;-1:-1:-1;;;2595:221:15:o;2821:832::-;2952:6;2960;2968;2976;2984;3037:3;3025:9;3016:7;3012:23;3008:33;3005:53;;;3054:1;3051;3044:12;3005:53;3093:9;3080:23;3112:31;3137:5;3112:31;:::i;:::-;3162:5;-1:-1:-1;3214:2:15;3199:18;;3186:32;;-1:-1:-1;3265:2:15;3250:18;;3237:32;;-1:-1:-1;3320:2:15;3305:18;;3292:32;3343:18;3373:14;;;3370:34;;;3400:1;3397;3390:12;3370:34;3423:50;3465:7;3456:6;3445:9;3441:22;3423:50;:::i;:::-;3413:60;;3526:3;3515:9;3511:19;3498:33;3482:49;;3556:2;3546:8;3543:16;3540:36;;;3572:1;3569;3562:12;3540:36;;3595:52;3639:7;3628:8;3617:9;3613:24;3595:52;:::i;:::-;3585:62;;;2821:832;;;;;;;;:::o;4499:472::-;4541:3;4579:5;4573:12;4606:6;4601:3;4594:19;4631:1;4641:162;4655:6;4652:1;4649:13;4641:162;;;4717:4;4773:13;;;4769:22;;4763:29;4745:11;;;4741:20;;4734:59;4670:12;4641:162;;;4821:6;4818:1;4815:13;4812:87;;;4887:1;4880:4;4871:6;4866:3;4862:16;4858:27;4851:38;4812:87;-1:-1:-1;4953:2:15;4932:15;-1:-1:-1;;4928:29:15;4919:39;;;;4960:4;4915:50;;4499:472;-1:-1:-1;;4499:472:15:o;4976:553::-;5229:3;5218:9;5211:22;5192:4;5256:46;5297:3;5286:9;5282:19;5274:6;5256:46;:::i;:::-;5350:9;5342:6;5338:22;5333:2;5322:9;5318:18;5311:50;5378:33;5404:6;5396;5378:33;:::i;:::-;5442:2;5427:18;;5420:34;;;;-1:-1:-1;;;;;;;5490:32:15;;;;5485:2;5470:18;;;5463:60;5370:41;4976:553;-1:-1:-1;;4976:553:15:o;6017:232::-;6056:3;-1:-1:-1;;6077:17:15;;6074:140;;;6136:10;6131:3;6127:20;6124:1;6117:31;6171:4;6168:1;6161:15;6199:4;6196:1;6189:15;6074:140;-1:-1:-1;6241:1:15;6230:13;;6017:232::o",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/alexander/dev/fractional/contracts/src/LilFractional.sol",
    "exportedSymbols": {
      "ERC20": [
        23600
      ],
      "ERC721": [
        24144
      ],
      "LilFractional": [
        24770
      ],
      "NFTShare": [
        24588
      ]
    },
    "id": 24771,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24515,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:24:11"
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "id": 24517,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24771,
        "sourceUnit": 23601,
        "src": "68:49:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24516,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "77:5:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "id": 24519,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24771,
        "sourceUnit": 24165,
        "src": "118:51:11",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24518,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "127:6:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24521,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23600,
              "src": "307:5:11"
            },
            "id": 24522,
            "nodeType": "InheritanceSpecifier",
            "src": "307:5:11"
          }
        ],
        "canonicalName": "NFTShare",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 24520,
          "nodeType": "StructuredDocumentation",
          "src": "171:115:11",
          "text": "@title NFT Share Token\n @author Miguel Piedrafita\n @notice ERC20 token representing a share of an ERC721"
        },
        "fullyImplemented": true,
        "id": 24588,
        "linearizedBaseContracts": [
          24588,
          23600
        ],
        "name": "NFTShare",
        "nameLocation": "295:8:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 24544,
              "nodeType": "Block",
              "src": "912:33:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24540,
                        "name": "mintTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24531,
                        "src": "922:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24541,
                        "name": "mintSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24529,
                        "src": "930:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24539,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23571,
                      "src": "916:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 24542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "916:25:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24543,
                  "nodeType": "ExpressionStatement",
                  "src": "916:25:11"
                }
              ]
            },
            "documentation": {
              "id": 24523,
              "nodeType": "StructuredDocumentation",
              "src": "316:461:11",
              "text": "@notice Deploys an NFTShare with the specified name and symbol, and mints an initial supply to the specified address\n @param name The name of the deployed token\n @param symbol The symbol of the deployed token\n @param mintSupply The supply this token will have, which be minted to the specified address\n @param mintTo The address the initial supply will get minted to\n @dev Deployed from the split() function of the LilFractional contract"
            },
            "id": 24545,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 24534,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24525,
                    "src": "894:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 24535,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24527,
                    "src": "900:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "hexValue": "3138",
                    "id": 24536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "908:2:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 24537,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 24533,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23600,
                  "src": "888:5:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "888:23:11"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24525,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "808:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 24545,
                  "src": "794:18:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24524,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "794:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24527,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "830:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 24545,
                  "src": "816:20:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24526,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24529,
                  "mutability": "mutable",
                  "name": "mintSupply",
                  "nameLocation": "848:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 24545,
                  "src": "840:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24528,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "840:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24531,
                  "mutability": "mutable",
                  "name": "mintTo",
                  "nameLocation": "870:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 24545,
                  "src": "862:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "790:89:11"
            },
            "returnParameters": {
              "id": 24538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "912:0:11"
            },
            "scope": 24588,
            "src": "779:166:11",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24586,
              "nodeType": "Block",
              "src": "1444:198:11",
              "statements": [
                {
                  "assignments": [
                    24554
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24554,
                      "mutability": "mutable",
                      "name": "allowed",
                      "nameLocation": "1456:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 24586,
                      "src": "1448:15:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24553,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1448:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24561,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 24555,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23249,
                        "src": "1466:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 24557,
                      "indexExpression": {
                        "id": 24556,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24548,
                        "src": "1476:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1466:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 24560,
                    "indexExpression": {
                      "expression": {
                        "id": 24558,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1482:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 24559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1482:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1466:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1448:45:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24562,
                      "name": "allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24554,
                      "src": "1538:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 24565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1554:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 24564,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1554:7:11",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 24563,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "1549:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 24566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1549:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 24567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "1549:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1538:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24580,
                  "nodeType": "IfStatement",
                  "src": "1534:80:11",
                  "trueBody": {
                    "expression": {
                      "id": 24578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 24569,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23249,
                            "src": "1568:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 24573,
                          "indexExpression": {
                            "id": 24570,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24548,
                            "src": "1578:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1568:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 24574,
                        "indexExpression": {
                          "expression": {
                            "id": 24571,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1584:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 24572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1584:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "1568:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24575,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24554,
                          "src": "1598:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 24576,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24550,
                          "src": "1608:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1598:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1568:46:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24579,
                    "nodeType": "ExpressionStatement",
                    "src": "1568:46:11"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24582,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24548,
                        "src": "1625:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24583,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24550,
                        "src": "1631:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24581,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23599,
                      "src": "1619:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 24584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1619:19:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24585,
                  "nodeType": "ExpressionStatement",
                  "src": "1619:19:11"
                }
              ]
            },
            "documentation": {
              "id": 24546,
              "nodeType": "StructuredDocumentation",
              "src": "948:431:11",
              "text": "@notice Burns a specified amount of tokens from a specified user after ensuring the caller has permission to\n @param from The address of the user who should get their tokens burned\n @param amount The amount of tokens that should get burned\n @dev The allowance check happens when substracting the amount from the allowed amount. This operation will underflow (and revert) if the caller doesn't have enough allowance."
            },
            "functionSelector": "79cc6790",
            "id": 24587,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "1390:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24548,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1407:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 24587,
                  "src": "1399:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24550,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1421:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 24587,
                  "src": "1413:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1398:30:11"
            },
            "returnParameters": {
              "id": 24552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1444:0:11"
            },
            "scope": 24588,
            "src": "1381:261:11",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 24771,
        "src": "286:1358:11",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "LilFractional",
        "contractDependencies": [
          24588
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 24589,
          "nodeType": "StructuredDocumentation",
          "src": "1646:109:11",
          "text": "@title lil fractional\n @author Miguel Piedrafita\n @notice Barebones NFT fractionalisation factory."
        },
        "fullyImplemented": true,
        "id": 24770,
        "linearizedBaseContracts": [
          24770
        ],
        "name": "LilFractional",
        "nameLocation": "1764:13:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 24590,
              "nodeType": "StructuredDocumentation",
              "src": "1798:80:11",
              "text": "@notice Thrown when trying to rejoin a token from a vault that doesn't exist"
            },
            "id": 24592,
            "name": "VaultNotFound",
            "nameLocation": "1886:13:11",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 24591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1899:2:11"
            },
            "src": "1880:22:11"
          },
          {
            "canonicalName": "LilFractional.Vault",
            "id": 24603,
            "members": [
              {
                "constant": false,
                "id": 24595,
                "mutability": "mutable",
                "name": "nftContract",
                "nameLocation": "2229:11:11",
                "nodeType": "VariableDeclaration",
                "scope": 24603,
                "src": "2222:18:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC721_$24144",
                  "typeString": "contract ERC721"
                },
                "typeName": {
                  "id": 24594,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 24593,
                    "name": "ERC721",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 24144,
                    "src": "2222:6:11"
                  },
                  "referencedDeclaration": 24144,
                  "src": "2222:6:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$24144",
                    "typeString": "contract ERC721"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24597,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "2252:7:11",
                "nodeType": "VariableDeclaration",
                "scope": 24603,
                "src": "2244:15:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24596,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2244:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24599,
                "mutability": "mutable",
                "name": "tokenSupply",
                "nameLocation": "2271:11:11",
                "nodeType": "VariableDeclaration",
                "scope": 24603,
                "src": "2263:19:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24598,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2263:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24602,
                "mutability": "mutable",
                "name": "tokenContract",
                "nameLocation": "2295:13:11",
                "nodeType": "VariableDeclaration",
                "scope": 24603,
                "src": "2286:22:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_NFTShare_$24588",
                  "typeString": "contract NFTShare"
                },
                "typeName": {
                  "id": 24601,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 24600,
                    "name": "NFTShare",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 24588,
                    "src": "2286:8:11"
                  },
                  "referencedDeclaration": 24588,
                  "src": "2286:8:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTShare_$24588",
                    "typeString": "contract NFTShare"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Vault",
            "nameLocation": "2212:5:11",
            "nodeType": "StructDefinition",
            "scope": 24770,
            "src": "2205:107:11",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 24604,
              "nodeType": "StructuredDocumentation",
              "src": "2332:101:11",
              "text": "@notice Emitted when a token is fractionalized\n @param vault The details of the created vault"
            },
            "id": 24609,
            "name": "VaultCreated",
            "nameLocation": "2441:12:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24607,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2460:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 24609,
                  "src": "2454:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$24603_memory_ptr",
                    "typeString": "struct LilFractional.Vault"
                  },
                  "typeName": {
                    "id": 24606,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24605,
                      "name": "Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24603,
                      "src": "2454:5:11"
                    },
                    "referencedDeclaration": 24603,
                    "src": "2454:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24603_storage_ptr",
                      "typeString": "struct LilFractional.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2453:13:11"
            },
            "src": "2435:32:11"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 24610,
              "nodeType": "StructuredDocumentation",
              "src": "2470:111:11",
              "text": "@notice Emitted when a token is recovered from a vault\n @param vault The details of the destroyed vault"
            },
            "id": 24615,
            "name": "VaultDestroyed",
            "nameLocation": "2589:14:11",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24613,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2610:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 24615,
                  "src": "2604:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$24603_memory_ptr",
                    "typeString": "struct LilFractional.Vault"
                  },
                  "typeName": {
                    "id": 24612,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24611,
                      "name": "Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24603,
                      "src": "2604:5:11"
                    },
                    "referencedDeclaration": 24603,
                    "src": "2604:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24603_storage_ptr",
                      "typeString": "struct LilFractional.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2603:13:11"
            },
            "src": "2583:34:11"
          },
          {
            "constant": false,
            "documentation": {
              "id": 24616,
              "nodeType": "StructuredDocumentation",
              "src": "2620:139:11",
              "text": "@notice Used as a counter for the next vault index.\n @dev Initialised at 1 because it makes the first transaction slightly cheaper."
            },
            "id": 24619,
            "mutability": "mutable",
            "name": "vaultId",
            "nameLocation": "2778:7:11",
            "nodeType": "VariableDeclaration",
            "scope": 24770,
            "src": "2761:28:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24617,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2761:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 24618,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2788:1:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 24620,
              "nodeType": "StructuredDocumentation",
              "src": "2793:93:11",
              "text": "@notice An indexed list of vaults\n @dev This automatically generates a getter for us!"
            },
            "functionSelector": "9403b634",
            "id": 24625,
            "mutability": "mutable",
            "name": "getVault",
            "nameLocation": "2921:8:11",
            "nodeType": "VariableDeclaration",
            "scope": 24770,
            "src": "2888:41:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24603_storage_$",
              "typeString": "mapping(uint256 => struct LilFractional.Vault)"
            },
            "typeName": {
              "id": 24624,
              "keyType": {
                "id": 24621,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2896:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2888:25:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24603_storage_$",
                "typeString": "mapping(uint256 => struct LilFractional.Vault)"
              },
              "valueType": {
                "id": 24623,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 24622,
                  "name": "Vault",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24603,
                  "src": "2907:5:11"
                },
                "referencedDeclaration": 24603,
                "src": "2907:5:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Vault_$24603_storage_ptr",
                  "typeString": "struct LilFractional.Vault"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 24690,
              "nodeType": "Block",
              "src": "3677:368:11",
              "statements": [
                {
                  "assignments": [
                    24644
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24644,
                      "mutability": "mutable",
                      "name": "tokenContract",
                      "nameLocation": "3690:13:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 24690,
                      "src": "3681:22:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTShare_$24588",
                        "typeString": "contract NFTShare"
                      },
                      "typeName": {
                        "id": 24643,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24642,
                          "name": "NFTShare",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24588,
                          "src": "3681:8:11"
                        },
                        "referencedDeclaration": 24588,
                        "src": "3681:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24588",
                          "typeString": "contract NFTShare"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24654,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24648,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24635,
                        "src": "3719:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 24649,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24637,
                        "src": "3725:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 24650,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24633,
                        "src": "3733:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 24651,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3741:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3741:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3706:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_NFTShare_$24588_$",
                        "typeString": "function (string memory,string memory,uint256,address) payable returns (contract NFTShare)"
                      },
                      "typeName": {
                        "id": 24646,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24645,
                          "name": "NFTShare",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24588,
                          "src": "3710:8:11"
                        },
                        "referencedDeclaration": 24588,
                        "src": "3710:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24588",
                          "typeString": "contract NFTShare"
                        }
                      }
                    },
                    "id": 24653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3706:46:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTShare_$24588",
                      "typeString": "contract NFTShare"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3681:71:11"
                },
                {
                  "assignments": [
                    24657
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24657,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "3770:5:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 24690,
                      "src": "3757:18:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24603_memory_ptr",
                        "typeString": "struct LilFractional.Vault"
                      },
                      "typeName": {
                        "id": 24656,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24655,
                          "name": "Vault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24603,
                          "src": "3757:5:11"
                        },
                        "referencedDeclaration": 24603,
                        "src": "3757:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$24603_storage_ptr",
                          "typeString": "struct LilFractional.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24664,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24659,
                        "name": "nftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24629,
                        "src": "3802:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$24144",
                          "typeString": "contract ERC721"
                        }
                      },
                      {
                        "id": 24660,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24631,
                        "src": "3827:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24661,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24633,
                        "src": "3852:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24662,
                        "name": "tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24644,
                        "src": "3878:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24588",
                          "typeString": "contract NFTShare"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC721_$24144",
                          "typeString": "contract ERC721"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_NFTShare_$24588",
                          "typeString": "contract NFTShare"
                        }
                      ],
                      "id": 24658,
                      "name": "Vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24603,
                      "src": "3778:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Vault_$24603_storage_ptr_$",
                        "typeString": "type(struct LilFractional.Vault storage pointer)"
                      }
                    },
                    "id": 24663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "nftContract",
                      "tokenId",
                      "tokenSupply",
                      "tokenContract"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3778:118:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24603_memory_ptr",
                      "typeString": "struct LilFractional.Vault memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3757:139:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 24666,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24657,
                        "src": "3919:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$24603_memory_ptr",
                          "typeString": "struct LilFractional.Vault memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Vault_$24603_memory_ptr",
                          "typeString": "struct LilFractional.Vault memory"
                        }
                      ],
                      "id": 24665,
                      "name": "VaultCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24609,
                      "src": "3906:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Vault_$24603_memory_ptr_$returns$__$",
                        "typeString": "function (struct LilFractional.Vault memory)"
                      }
                    },
                    "id": 24667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3906:19:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24668,
                  "nodeType": "EmitStatement",
                  "src": "3901:24:11"
                },
                {
                  "expression": {
                    "id": 24673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 24669,
                        "name": "getVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24625,
                        "src": "3930:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24603_storage_$",
                          "typeString": "mapping(uint256 => struct LilFractional.Vault storage ref)"
                        }
                      },
                      "id": 24671,
                      "indexExpression": {
                        "id": 24670,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24619,
                        "src": "3939:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3930:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24603_storage",
                        "typeString": "struct LilFractional.Vault storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24672,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24657,
                      "src": "3950:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24603_memory_ptr",
                        "typeString": "struct LilFractional.Vault memory"
                      }
                    },
                    "src": "3930:25:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24603_storage",
                      "typeString": "struct LilFractional.Vault storage ref"
                    }
                  },
                  "id": 24674,
                  "nodeType": "ExpressionStatement",
                  "src": "3930:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24678,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3985:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3985:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 24682,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4005:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LilFractional_$24770",
                              "typeString": "contract LilFractional"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LilFractional_$24770",
                              "typeString": "contract LilFractional"
                            }
                          ],
                          "id": 24681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3997:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24680,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3997:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3997:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24684,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24631,
                        "src": "4012:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24675,
                        "name": "nftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24629,
                        "src": "3960:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$24144",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 24677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23861,
                      "src": "3960:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 24685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3960:60:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24686,
                  "nodeType": "ExpressionStatement",
                  "src": "3960:60:11"
                },
                {
                  "expression": {
                    "id": 24688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4032:9:11",
                    "subExpression": {
                      "id": 24687,
                      "name": "vaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24619,
                      "src": "4032:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 24641,
                  "id": 24689,
                  "nodeType": "Return",
                  "src": "4025:16:11"
                }
              ]
            },
            "documentation": {
              "id": 24626,
              "nodeType": "StructuredDocumentation",
              "src": "2933:586:11",
              "text": "@notice Fractionalize an ERC721 token\n @param nftContract The ERC721 contract for the token you're fractionalizing\n @param tokenId The ID of the token you're fractionalizing\n @param supply The amount of ERC20 tokens to issue for this token. These will be distributed to the caller\n @param name The name for the resultant ERC20 token\n @param symbol The symbol for the resultant ERC20 token\n @return The ID of the created vault\n @dev Remember to call setApprovalForAll(<address of this contract>, true) on the ERC721's contract before calling this function"
            },
            "functionSelector": "cf6a4d16",
            "id": 24691,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "split",
            "nameLocation": "3530:5:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24629,
                  "mutability": "mutable",
                  "name": "nftContract",
                  "nameLocation": "3546:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 24691,
                  "src": "3539:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$24144",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 24628,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24627,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24144,
                      "src": "3539:6:11"
                    },
                    "referencedDeclaration": 24144,
                    "src": "3539:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$24144",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24631,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3569:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 24691,
                  "src": "3561:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3561:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24633,
                  "mutability": "mutable",
                  "name": "supply",
                  "nameLocation": "3588:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 24691,
                  "src": "3580:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3580:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24635,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "3612:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 24691,
                  "src": "3598:18:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24634,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3598:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24637,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "3634:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 24691,
                  "src": "3620:20:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24636,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3620:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3535:108:11"
            },
            "returnParameters": {
              "id": 24641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24640,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24691,
                  "src": "3668:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3668:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3667:9:11"
            },
            "scope": 24770,
            "src": "3521:524:11",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24749,
              "nodeType": "Block",
              "src": "4343:290:11",
              "statements": [
                {
                  "assignments": [
                    24699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24699,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "4360:5:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 24749,
                      "src": "4347:18:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24603_memory_ptr",
                        "typeString": "struct LilFractional.Vault"
                      },
                      "typeName": {
                        "id": 24698,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24697,
                          "name": "Vault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24603,
                          "src": "4347:5:11"
                        },
                        "referencedDeclaration": 24603,
                        "src": "4347:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$24603_storage_ptr",
                          "typeString": "struct LilFractional.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24703,
                  "initialValue": {
                    "baseExpression": {
                      "id": 24700,
                      "name": "getVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24625,
                      "src": "4368:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24603_storage_$",
                        "typeString": "mapping(uint256 => struct LilFractional.Vault storage ref)"
                      }
                    },
                    "id": 24702,
                    "indexExpression": {
                      "id": 24701,
                      "name": "vaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24694,
                      "src": "4377:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4368:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24603_storage",
                      "typeString": "struct LilFractional.Vault storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4347:38:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 24713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 24706,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24699,
                            "src": "4402:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$24603_memory_ptr",
                              "typeString": "struct LilFractional.Vault memory"
                            }
                          },
                          "id": 24707,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24602,
                          "src": "4402:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTShare_$24588",
                            "typeString": "contract NFTShare"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_NFTShare_$24588",
                            "typeString": "contract NFTShare"
                          }
                        ],
                        "id": 24705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4394:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24704,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4394:7:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4394:28:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 24711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4434:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 24710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4426:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24709,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4426:7:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4426:10:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4394:42:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24717,
                  "nodeType": "IfStatement",
                  "src": "4390:70:11",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24714,
                        "name": "VaultNotFound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24592,
                        "src": "4445:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 24715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4445:15:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 24716,
                    "nodeType": "RevertStatement",
                    "src": "4438:22:11"
                  }
                },
                {
                  "expression": {
                    "id": 24721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4465:24:11",
                    "subExpression": {
                      "baseExpression": {
                        "id": 24718,
                        "name": "getVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24625,
                        "src": "4472:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24603_storage_$",
                          "typeString": "mapping(uint256 => struct LilFractional.Vault storage ref)"
                        }
                      },
                      "id": 24720,
                      "indexExpression": {
                        "id": 24719,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24694,
                        "src": "4481:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4472:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24603_storage",
                        "typeString": "struct LilFractional.Vault storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24722,
                  "nodeType": "ExpressionStatement",
                  "src": "4465:24:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24728,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4523:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4523:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 24730,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24699,
                          "src": "4535:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24603_memory_ptr",
                            "typeString": "struct LilFractional.Vault memory"
                          }
                        },
                        "id": 24731,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24599,
                        "src": "4535:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 24723,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24699,
                          "src": "4494:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24603_memory_ptr",
                            "typeString": "struct LilFractional.Vault memory"
                          }
                        },
                        "id": 24726,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24602,
                        "src": "4494:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24588",
                          "typeString": "contract NFTShare"
                        }
                      },
                      "id": 24727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24587,
                      "src": "4494:28:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 24732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4494:59:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24733,
                  "nodeType": "ExpressionStatement",
                  "src": "4494:59:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24741,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4596:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LilFractional_$24770",
                              "typeString": "contract LilFractional"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LilFractional_$24770",
                              "typeString": "contract LilFractional"
                            }
                          ],
                          "id": 24740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4588:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24739,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4588:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4588:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 24743,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4603:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4603:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 24745,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24699,
                          "src": "4615:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24603_memory_ptr",
                            "typeString": "struct LilFractional.Vault memory"
                          }
                        },
                        "id": 24746,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24597,
                        "src": "4615:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 24734,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24699,
                          "src": "4557:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24603_memory_ptr",
                            "typeString": "struct LilFractional.Vault memory"
                          }
                        },
                        "id": 24737,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24595,
                        "src": "4557:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$24144",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 24738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23861,
                      "src": "4557:30:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 24747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4557:72:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24748,
                  "nodeType": "ExpressionStatement",
                  "src": "4557:72:11"
                }
              ]
            },
            "documentation": {
              "id": 24692,
              "nodeType": "StructuredDocumentation",
              "src": "4048:247:11",
              "text": "@notice Recover a fractionalized ERC721 token\n @param vaultId The ID of the vault containing the token\n @dev Remember to call approve(<address of this contract>, <supply or greater>) on the ERC20's contract before calling this function"
            },
            "functionSelector": "049878f3",
            "id": 24750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "join",
            "nameLocation": "4306:4:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24694,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "4319:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 24750,
                  "src": "4311:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4311:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4310:17:11"
            },
            "returnParameters": {
              "id": 24696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4343:0:11"
            },
            "scope": 24770,
            "src": "4297:336:11",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24768,
              "nodeType": "Block",
              "src": "4818:45:11",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 24764,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "4829:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LilFractional_$24770",
                          "typeString": "contract LilFractional"
                        }
                      },
                      "id": 24765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24769,
                      "src": "4829:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) payable external returns (bytes4)"
                      }
                    },
                    "id": 24766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "4829:30:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 24763,
                  "id": 24767,
                  "nodeType": "Return",
                  "src": "4822:37:11"
                }
              ]
            },
            "documentation": {
              "id": 24751,
              "nodeType": "StructuredDocumentation",
              "src": "4636:70:11",
              "text": "@dev This function ensures this contract can receive ERC721 tokens"
            },
            "functionSelector": "150b7a02",
            "id": 24769,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "4717:16:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24753,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24769,
                  "src": "4737:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24752,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4737:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24755,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24769,
                  "src": "4748:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4748:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24769,
                  "src": "4759:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4759:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24759,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24769,
                  "src": "4770:12:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24758,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4770:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4733:52:11"
            },
            "returnParameters": {
              "id": 24763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24762,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24769,
                  "src": "4810:6:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 24761,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4810:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4809:8:11"
            },
            "scope": 24770,
            "src": "4708:155:11",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 24771,
        "src": "1755:3110:11",
        "usedErrors": [
          24592
        ]
      }
    ],
    "src": "42:4823:11"
  }
}