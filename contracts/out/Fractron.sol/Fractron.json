{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721[]",
              "name": "nftContracts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct Fractron.Vault",
          "name": "vault",
          "type": "tuple"
        }
      ],
      "name": "VaultCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721[]",
              "name": "nftContracts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct Fractron.Vault",
          "name": "vault",
          "type": "tuple"
        }
      ],
      "name": "VaultDestroyed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getAllVaults",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721[]",
              "name": "nftContracts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            }
          ],
          "internalType": "struct Fractron.Vault[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "getVault",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721[]",
              "name": "nftContracts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            }
          ],
          "internalType": "struct Fractron.Vault",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "join",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC721[]",
          "name": "nftContracts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "split",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vaultById",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenSupply",
          "type": "uint256"
        },
        {
          "internalType": "contract NFTShare",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "878:3169:9:-:0;;;1718:1;1684:35;;878:3169;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "878:3169:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2790:604;;;;;;:::i;:::-;;:::i;:::-;;3854:191;;;;;;:::i;:::-;-1:-1:-1;;;3854:191:9;;;;;;;;;;-1:-1:-1;;;;;;2064:33:11;;;2046:52;;2034:2;2019:18;3854:191:9;;;;;;;;1725:42;;;;;;;;;;-1:-1:-1;1725:42:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1725:42:9;;;;;;;;;;;2448:25:11;;;-1:-1:-1;;;;;2547:15:11;;;2542:2;2527:18;;2520:43;2599:15;;2579:18;;;2572:43;2436:2;2421:18;1725:42:9;2228:393:11;3400:112:9;;;;;;;;;;-1:-1:-1;3400:112:9;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3518:255::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1774:1010::-;;;;;;:::i;:::-;;:::i;:::-;;;7289:25:11;;;7277:2;7262:18;1774:1010:9;7143:177:11;2790:604:9;2846:18;2867;;;:9;:18;;;;;;;;2846:39;;;;;;;;;;;;;;;;;;;;;;;2867:18;;2846:39;;2867:18;;2846:39;;;2867:18;2846:39;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2846:39:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2846:39:9;;;-1:-1:-1;;2846:39:9;;;;;;;;;;;;-1:-1:-1;;;;;2846:39:9;;;;;;;;;;;;;;;;;;;2995:19;;;2846:39;;-1:-1:-1;2987:42:9;2979:70;;;;-1:-1:-1;;;2979:70:9;;7527:2:11;2979:70:9;;;7509:21:11;7566:2;7546:18;;;7539:30;-1:-1:-1;;;7585:18:11;;;7578:45;7640:18;;2979:70:9;;;;;;;;;3067:18;;;;:9;:18;;;;;;3060:25;3067:18;;3060:25;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;3060:25:9;;;;;;;;;;-1:-1:-1;;;;;;3060:25:9;;;;;;;;;;;;;;;;;3096:19;;;;3137:17;;;;;3096:59;;-1:-1:-1;;;3096:59:9;;3125:10;3096:59;;;7843:51:11;;;;7910:18;;;7903:34;-1:-1:-1;;;;;3096:28:9;;;;7816:18:11;;3096:59:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3170:9;3165:223;3189:18;;:25;3185:29;;3165:223;;;3235:18;;:21;;3254:1;;3235:21;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3235:34:9;;3295:4;3318:10;3346:5;:14;;;3361:1;3346:17;;;;;;;;:::i;:::-;;;;;;;;;;;3235:142;;-1:-1:-1;;;;;;3235:142:9;;;;;;;-1:-1:-1;;;;;8338:15:11;;;3235:142:9;;;8320:34:11;8390:15;;;;8370:18;;;8363:43;8422:18;;;8415:34;8255:18;;3235:142:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3216:3;;;;;:::i;:::-;;;;3165:223;;;;2836:558;2790:604;:::o;3400:112::-;3456:12;;:::i;:::-;3487:18;;;;:9;:18;;;;;;;;;3480:25;;;;;;;;;;;;;;;;;;;;;;;3487:18;;3480:25;;3487:18;;3480:25;;3487:18;3480:25;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3480:25:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3480:25:9;;;-1:-1:-1;;3480:25:9;;;;;;;;;;;;-1:-1:-1;;;;;3480:25:9;;;;;;;;;;;;;;;;;;;;;3400:112;-1:-1:-1;;3400:112:9:o;3518:255::-;3563:14;3589:21;3625:14;;3613:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3589:51;;3655:9;3650:94;3674:14;;3670:1;:18;3650:94;;;3721:12;;;;:9;:12;;;;;;;;;3709:24;;;;;;;;;;;;;;;;;;;;;;;3721:12;;3709:24;;3721:12;;3709:24;;3721:12;3709:24;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3709:24:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3709:24:9;;;-1:-1:-1;;3709:24:9;;;;;;;;;;;;-1:-1:-1;;;;;3709:24:9;;;;;;;;;;;;;;;;;;;;:9;;:6;;3716:1;;3709:9;;;;;;:::i;:::-;;;;;;:24;;;;3690:3;;;;;:::i;:::-;;;;3650:94;;;-1:-1:-1;3760:6:9;3518:255;-1:-1:-1;3518:255:9:o;1774:1010::-;1978:7;2083:38;;;2075:64;;;;-1:-1:-1;;;2075:64:9;;8899:2:11;2075:64:9;;;8881:21:11;8938:2;8918:18;;;8911:30;-1:-1:-1;;;8957:18:11;;;8950:43;9010:18;;2075:64:9;8697:337:11;2075:64:9;2149:22;2187:4;2193:6;2201;2209:10;2174:46;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2149:71;;2231:18;2252:197;;;;;;;;2286:12;;2252:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2252:197:9;;;-1:-1:-1;2252:197:9;;;;;;;;;;;;;;;;;;;;;;;;2322:8;;;;;;2252:197;;;2322:8;;2252:197;2322:8;2252:197;;;;;;;;;-1:-1:-1;;;2252:197:9;;;-1:-1:-1;2252:197:9;;;;;;-1:-1:-1;;;;;2252:197:9;;;;;;;;;;2428:10;2252:197;;;;;;;;2465:19;2231:218;;-1:-1:-1;2465:19:9;;;;2231:218;;2465:19;:::i;:::-;;;;;;;;2495:25;2505:14;;2495:25;;:9;:25;;;;;;;;:33;;;;2523:5;;2495:33;;:25;;:33;;;;:::i;:::-;-1:-1:-1;2495:33:9;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2495:33:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2495:33:9;;;-1:-1:-1;;;;;2495:33:9;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2539:205:9;2559:23;;;2539:205;;;2603:12;;2616:1;2603:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2603:28:9;;2649:10;2685:4;2708:8;;2717:1;2708:11;;;;;;;:::i;:::-;2603:130;;-1:-1:-1;;;;;;2603:130:9;;;;;;;-1:-1:-1;;;;;8338:15:11;;;2603:130:9;;;8320:34:11;8390:15;;;;8370:18;;;8363:43;-1:-1:-1;2708:11:9;;;;;;8422:18:11;;;8415:34;8255:18;;2603:130:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2584:3;;;;;:::i;:::-;;;;2539:205;;;-1:-1:-1;2761:14:9;:16;;;:14;:16;;;:::i;:::-;;;;-1:-1:-1;2754:23:9;1774:1010;-1:-1:-1;;;;;;;;;;1774:1010:9:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:11;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:11;;14:180;-1:-1:-1;14:180:11:o;199:131::-;-1:-1:-1;;;;;274:31:11;;264:42;;254:70;;320:1;317;310:12;335:127;396:10;391:3;387:20;384:1;377:31;427:4;424:1;417:15;451:4;448:1;441:15;467:631;531:5;561:18;602:2;594:6;591:14;588:40;;;608:18;;:::i;:::-;683:2;677:9;651:2;737:15;;-1:-1:-1;;733:24:11;;;759:2;729:33;725:42;713:55;;;783:18;;;803:22;;;780:46;777:72;;;829:18;;:::i;:::-;869:10;865:2;858:22;898:6;889:15;;928:6;920;913:22;968:3;959:6;954:3;950:16;947:25;944:45;;;985:1;982;975:12;944:45;1035:6;1030:3;1023:4;1015:6;1011:17;998:44;1090:1;1083:4;1074:6;1066;1062:19;1058:30;1051:41;;;;467:631;;;;;:::o;1103:794::-;1198:6;1206;1214;1222;1275:3;1263:9;1254:7;1250:23;1246:33;1243:53;;;1292:1;1289;1282:12;1243:53;1331:9;1318:23;1350:31;1375:5;1350:31;:::i;:::-;1400:5;-1:-1:-1;1457:2:11;1442:18;;1429:32;1470:33;1429:32;1470:33;:::i;:::-;1522:7;-1:-1:-1;1576:2:11;1561:18;;1548:32;;-1:-1:-1;1631:2:11;1616:18;;1603:32;1658:18;1647:30;;1644:50;;;1690:1;1687;1680:12;1644:50;1713:22;;1766:4;1758:13;;1754:27;-1:-1:-1;1744:55:11;;1795:1;1792;1785:12;1744:55;1818:73;1883:7;1878:2;1865:16;1860:2;1856;1852:11;1818:73;:::i;:::-;1808:83;;;1103:794;;;;;;;:::o;2626:435::-;2679:3;2717:5;2711:12;2744:6;2739:3;2732:19;2770:4;2799:2;2794:3;2790:12;2783:19;;2836:2;2829:5;2825:14;2857:1;2867:169;2881:6;2878:1;2875:13;2867:169;;;2942:13;;2930:26;;2976:12;;;;3011:15;;;;2903:1;2896:9;2867:169;;;-1:-1:-1;3052:3:11;;2626:435;-1:-1:-1;;;;;2626:435:11:o;3066:1085::-;3187:12;;3153:4;3208:17;;;3274:19;;3144:14;;;3302:20;;;3114:3;;3372:4;;3399:21;;;;3349:3;3340:13;;;3114:3;3448:201;3462:6;3459:1;3456:13;3448:201;;;3529:13;;-1:-1:-1;;;;;3525:39:11;3511:54;;3624:15;;;;3587:14;;;;3561:1;3477:9;3448:201;;;3452:3;;3697:2;3690:5;3686:14;3680:21;3658:43;;3742:3;3735:5;3731:15;3726:2;3721:3;3717:12;3710:37;3770:51;3815:5;3799:14;3770:51;:::i;:::-;3756:65;;;;3870:4;3863:5;3859:16;3853:23;3846:4;3841:3;3837:14;3830:47;3925:4;3918:5;3914:16;3908:23;3940:60;3994:4;3989:3;3985:14;3969;-1:-1:-1;;;;;2185:31:11;2173:44;;2109:114;3940:60;;4048:4;4041:5;4037:16;4031:23;4063:60;4117:4;4112:3;4108:14;4092;-1:-1:-1;;;;;2185:31:11;2173:44;;2109:114;4063:60;-1:-1:-1;4139:6:11;3066:1085;-1:-1:-1;;;3066:1085:11:o;4156:254::-;4333:2;4322:9;4315:21;4296:4;4353:51;4400:2;4389:9;4385:18;4377:6;4353:51;:::i;:::-;4345:59;4156:254;-1:-1:-1;;;4156:254:11:o;4415:837::-;4605:4;4634:2;4674;4663:9;4659:18;4704:2;4693:9;4686:21;4727:6;4762;4756:13;4793:6;4785;4778:22;4831:2;4820:9;4816:18;4809:25;;4893:2;4883:6;4880:1;4876:14;4865:9;4861:30;4857:39;4843:53;;4931:2;4923:6;4919:15;4952:1;4962:261;4976:6;4973:1;4970:13;4962:261;;;5069:2;5065:7;5053:9;5045:6;5041:22;5037:36;5032:3;5025:49;5097:46;5136:6;5127;5121:13;5097:46;:::i;:::-;5087:56;-1:-1:-1;5201:12:11;;;;5166:15;;;;4998:1;4991:9;4962:261;;;-1:-1:-1;5240:6:11;;4415:837;-1:-1:-1;;;;;;;4415:837:11:o;5257:375::-;5328:8;5338:6;5392:3;5385:4;5377:6;5373:17;5369:27;5359:55;;5410:1;5407;5400:12;5359:55;-1:-1:-1;5433:20:11;;5476:18;5465:30;;5462:50;;;5508:1;5505;5498:12;5462:50;5545:4;5537:6;5533:17;5521:29;;5605:3;5598:4;5588:6;5585:1;5581:14;5573:6;5569:27;5565:38;5562:47;5559:67;;;5622:1;5619;5612:12;5559:67;5257:375;;;;;:::o;5637:221::-;5680:5;5733:3;5726:4;5718:6;5714:17;5710:27;5700:55;;5751:1;5748;5741:12;5700:55;5773:79;5848:3;5839:6;5826:20;5819:4;5811:6;5807:17;5773:79;:::i;5863:1275::-;6048:6;6056;6064;6072;6080;6088;6096;6149:3;6137:9;6128:7;6124:23;6120:33;6117:53;;;6166:1;6163;6156:12;6117:53;6206:9;6193:23;6235:18;6276:2;6268:6;6265:14;6262:34;;;6292:1;6289;6282:12;6262:34;6331:78;6401:7;6392:6;6381:9;6377:22;6331:78;:::i;:::-;6428:8;;-1:-1:-1;6305:104:11;-1:-1:-1;6516:2:11;6501:18;;6488:32;;-1:-1:-1;6532:16:11;;;6529:36;;;6561:1;6558;6551:12;6529:36;6600:80;6672:7;6661:8;6650:9;6646:24;6600:80;:::i;:::-;6699:8;;-1:-1:-1;6574:106:11;-1:-1:-1;6781:2:11;6766:18;;6753:32;;-1:-1:-1;6838:2:11;6823:18;;6810:32;;-1:-1:-1;6854:16:11;;;6851:36;;;6883:1;6880;6873:12;6851:36;6906:52;6950:7;6939:8;6928:9;6924:24;6906:52;:::i;:::-;6896:62;;7011:3;7000:9;6996:19;6983:33;6967:49;;7041:2;7031:8;7028:16;7025:36;;;7057:1;7054;7047:12;7025:36;;7080:52;7124:7;7113:8;7102:9;7098:24;7080:52;:::i;:::-;7070:62;;;5863:1275;;;;;;;;;;:::o;7948:127::-;8009:10;8004:3;8000:20;7997:1;7990:31;8040:4;8037:1;8030:15;8064:4;8061:1;8054:15;8460:232;8499:3;-1:-1:-1;;8520:17:11;;8517:140;;;8579:10;8574:3;8570:20;8567:1;8560:31;8614:4;8611:1;8604:15;8642:4;8639:1;8632:15;8517:140;-1:-1:-1;8684:1:11;8673:13;;8460:232::o;9039:472::-;9081:3;9119:5;9113:12;9146:6;9141:3;9134:19;9171:1;9181:162;9195:6;9192:1;9189:13;9181:162;;;9257:4;9313:13;;;9309:22;;9303:29;9285:11;;;9281:20;;9274:59;9210:12;9181:162;;;9361:6;9358:1;9355:13;9352:87;;;9427:1;9420:4;9411:6;9406:3;9402:16;9398:27;9391:38;9352:87;-1:-1:-1;9493:2:11;9472:15;-1:-1:-1;;9468:29:11;9459:39;;;;9500:4;9455:50;;9039:472;-1:-1:-1;;9039:472:11:o;9516:553::-;9769:3;9758:9;9751:22;9732:4;9796:46;9837:3;9826:9;9822:19;9814:6;9796:46;:::i;:::-;9890:9;9882:6;9878:22;9873:2;9862:9;9858:18;9851:50;9918:33;9944:6;9936;9918:33;:::i;:::-;9982:2;9967:18;;9960:34;;;;-1:-1:-1;;;;;;;10030:32:11;;;;10025:2;10010:18;;;10003:60;9910:41;9516:553;-1:-1:-1;;9516:553:11:o;10074:263::-;10149:6;10202:2;10190:9;10181:7;10177:23;10173:32;10170:52;;;10218:1;10215;10208:12;10170:52;10257:9;10244:23;10276:31;10301:5;10276:31;:::i",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/alexander/dev/fractional/contracts/src/Fractron.sol",
    "exportedSymbols": {
      "ERC20": [
        23600
      ],
      "ERC721": [
        24144
      ],
      "Fractron": [
        24514
      ],
      "NFTShare": [
        24237
      ]
    },
    "id": 24515,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24166,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:9"
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "id": 24168,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24515,
        "sourceUnit": 23601,
        "src": "57:47:9",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24167,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "65:5:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "id": 24170,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24515,
        "sourceUnit": 24165,
        "src": "105:49:9",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24169,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "113:6:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24171,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23600,
              "src": "177:5:9"
            },
            "id": 24172,
            "nodeType": "InheritanceSpecifier",
            "src": "177:5:9"
          }
        ],
        "canonicalName": "NFTShare",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24237,
        "linearizedBaseContracts": [
          24237,
          23600
        ],
        "name": "NFTShare",
        "nameLocation": "165:8:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 24193,
              "nodeType": "Block",
              "src": "349:42:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24189,
                        "name": "mintTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24180,
                        "src": "365:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24190,
                        "name": "mintSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24178,
                        "src": "373:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24188,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23571,
                      "src": "359:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 24191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "359:25:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24192,
                  "nodeType": "ExpressionStatement",
                  "src": "359:25:9"
                }
              ]
            },
            "id": 24194,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 24183,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24174,
                    "src": "331:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 24184,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24176,
                    "src": "337:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "hexValue": "3138",
                    "id": 24185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "345:2:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 24186,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 24182,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23600,
                  "src": "325:5:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "325:23:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24174,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "224:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24194,
                  "src": "210:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24173,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "210:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24176,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "252:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24194,
                  "src": "238:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24175,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24178,
                  "mutability": "mutable",
                  "name": "mintSupply",
                  "nameLocation": "276:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24194,
                  "src": "268:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "268:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24180,
                  "mutability": "mutable",
                  "name": "mintTo",
                  "nameLocation": "304:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24194,
                  "src": "296:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "200:116:9"
            },
            "returnParameters": {
              "id": 24187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "349:0:9"
            },
            "scope": 24237,
            "src": "189:202:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24235,
              "nodeType": "Block",
              "src": "643:231:9",
              "statements": [
                {
                  "assignments": [
                    24203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24203,
                      "mutability": "mutable",
                      "name": "allowed",
                      "nameLocation": "661:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 24235,
                      "src": "653:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24202,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "653:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24210,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 24204,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23249,
                        "src": "671:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 24206,
                      "indexExpression": {
                        "id": 24205,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24197,
                        "src": "681:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "671:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 24209,
                    "indexExpression": {
                      "expression": {
                        "id": 24207,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "687:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 24208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "687:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "671:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "653:45:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24211,
                      "name": "allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24203,
                      "src": "749:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 24214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "765:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 24213,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "765:7:9",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 24212,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "760:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 24215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "760:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 24216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "760:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "749:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24229,
                  "nodeType": "IfStatement",
                  "src": "745:92:9",
                  "trueBody": {
                    "expression": {
                      "id": 24227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 24218,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23249,
                            "src": "791:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 24222,
                          "indexExpression": {
                            "id": 24219,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24197,
                            "src": "801:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "791:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 24223,
                        "indexExpression": {
                          "expression": {
                            "id": 24220,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "807:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 24221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "807:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "791:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24224,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24203,
                          "src": "821:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 24225,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24199,
                          "src": "831:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "821:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "791:46:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24228,
                    "nodeType": "ExpressionStatement",
                    "src": "791:46:9"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24231,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24197,
                        "src": "854:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24232,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24199,
                        "src": "860:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24230,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23599,
                      "src": "848:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 24233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "848:19:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24234,
                  "nodeType": "ExpressionStatement",
                  "src": "848:19:9"
                }
              ]
            },
            "documentation": {
              "id": 24195,
              "nodeType": "StructuredDocumentation",
              "src": "397:178:9",
              "text": "@dev The allowance check happens when substracting the amount from the allowed amount. This operation will underflow (and revert) if the caller doesn't have enough allowance."
            },
            "functionSelector": "79cc6790",
            "id": 24236,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "589:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24197,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "606:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24236,
                  "src": "598:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24199,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "620:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24236,
                  "src": "612:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "597:30:9"
            },
            "returnParameters": {
              "id": 24201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "643:0:9"
            },
            "scope": 24237,
            "src": "580:294:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 24515,
        "src": "156:720:9",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Fractron",
        "contractDependencies": [
          24237
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24514,
        "linearizedBaseContracts": [
          24514
        ],
        "name": "Fractron",
        "nameLocation": "887:8:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Fractron.Vault",
            "id": 24252,
            "members": [
              {
                "constant": false,
                "id": 24241,
                "mutability": "mutable",
                "name": "nftContracts",
                "nameLocation": "1468:12:9",
                "nodeType": "VariableDeclaration",
                "scope": 24252,
                "src": "1459:21:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr",
                  "typeString": "contract ERC721[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 24239,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24238,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24144,
                      "src": "1459:6:9"
                    },
                    "referencedDeclaration": 24144,
                    "src": "1459:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$24144",
                      "typeString": "contract ERC721"
                    }
                  },
                  "id": 24240,
                  "nodeType": "ArrayTypeName",
                  "src": "1459:8:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr",
                    "typeString": "contract ERC721[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24244,
                "mutability": "mutable",
                "name": "tokenIds",
                "nameLocation": "1500:8:9",
                "nodeType": "VariableDeclaration",
                "scope": 24252,
                "src": "1490:18:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 24242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24243,
                  "nodeType": "ArrayTypeName",
                  "src": "1490:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24246,
                "mutability": "mutable",
                "name": "tokenSupply",
                "nameLocation": "1526:11:9",
                "nodeType": "VariableDeclaration",
                "scope": 24252,
                "src": "1518:19:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24245,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1518:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24249,
                "mutability": "mutable",
                "name": "tokenContract",
                "nameLocation": "1556:13:9",
                "nodeType": "VariableDeclaration",
                "scope": 24252,
                "src": "1547:22:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_NFTShare_$24237",
                  "typeString": "contract NFTShare"
                },
                "typeName": {
                  "id": 24248,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 24247,
                    "name": "NFTShare",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 24237,
                    "src": "1547:8:9"
                  },
                  "referencedDeclaration": 24237,
                  "src": "1547:8:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTShare_$24237",
                    "typeString": "contract NFTShare"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24251,
                "mutability": "mutable",
                "name": "creator",
                "nameLocation": "1587:7:9",
                "nodeType": "VariableDeclaration",
                "scope": 24252,
                "src": "1579:15:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 24250,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1579:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Vault",
            "nameLocation": "1443:5:9",
            "nodeType": "StructDefinition",
            "scope": 24514,
            "src": "1436:165:9",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 24257,
            "name": "VaultCreated",
            "nameLocation": "1613:12:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24255,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1632:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24257,
                  "src": "1626:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$24252_memory_ptr",
                    "typeString": "struct Fractron.Vault"
                  },
                  "typeName": {
                    "id": 24254,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24253,
                      "name": "Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24252,
                      "src": "1626:5:9"
                    },
                    "referencedDeclaration": 24252,
                    "src": "1626:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24252_storage_ptr",
                      "typeString": "struct Fractron.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1625:13:9"
            },
            "src": "1607:32:9"
          },
          {
            "anonymous": false,
            "id": 24262,
            "name": "VaultDestroyed",
            "nameLocation": "1650:14:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24260,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1671:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24262,
                  "src": "1665:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$24252_memory_ptr",
                    "typeString": "struct Fractron.Vault"
                  },
                  "typeName": {
                    "id": 24259,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24258,
                      "name": "Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24252,
                      "src": "1665:5:9"
                    },
                    "referencedDeclaration": 24252,
                    "src": "1665:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24252_storage_ptr",
                      "typeString": "struct Fractron.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1664:13:9"
            },
            "src": "1644:34:9"
          },
          {
            "constant": false,
            "id": 24265,
            "mutability": "mutable",
            "name": "currentVaultId",
            "nameLocation": "1701:14:9",
            "nodeType": "VariableDeclaration",
            "scope": 24514,
            "src": "1684:35:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24263,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1684:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 24264,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1718:1:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "32f19a5c",
            "id": 24270,
            "mutability": "mutable",
            "name": "vaultById",
            "nameLocation": "1758:9:9",
            "nodeType": "VariableDeclaration",
            "scope": 24514,
            "src": "1725:42:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24252_storage_$",
              "typeString": "mapping(uint256 => struct Fractron.Vault)"
            },
            "typeName": {
              "id": 24269,
              "keyType": {
                "id": 24266,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1733:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1725:25:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24252_storage_$",
                "typeString": "mapping(uint256 => struct Fractron.Vault)"
              },
              "valueType": {
                "id": 24268,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 24267,
                  "name": "Vault",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24252,
                  "src": "1744:5:9"
                },
                "referencedDeclaration": 24252,
                "src": "1744:5:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Vault_$24252_storage_ptr",
                  "typeString": "struct Fractron.Vault"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 24363,
              "nodeType": "Block",
              "src": "1987:797:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 24289,
                            "name": "nftContracts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24274,
                            "src": "2083:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_calldata_ptr",
                              "typeString": "contract ERC721[] calldata"
                            }
                          },
                          "id": 24290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2083:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 24291,
                            "name": "tokenIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24277,
                            "src": "2106:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 24292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2106:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2083:38:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207661756c74",
                        "id": 24294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2123:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5665e01d410d24e9e02cac3caa7e0fb9268a0e971cc5a8ef80a1c751e8f1ffc7",
                          "typeString": "literal_string \"invalid vault\""
                        },
                        "value": "invalid vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5665e01d410d24e9e02cac3caa7e0fb9268a0e971cc5a8ef80a1c751e8f1ffc7",
                          "typeString": "literal_string \"invalid vault\""
                        }
                      ],
                      "id": 24288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2075:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2075:64:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24296,
                  "nodeType": "ExpressionStatement",
                  "src": "2075:64:9"
                },
                {
                  "assignments": [
                    24299
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24299,
                      "mutability": "mutable",
                      "name": "tokenContract",
                      "nameLocation": "2158:13:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 24363,
                      "src": "2149:22:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTShare_$24237",
                        "typeString": "contract NFTShare"
                      },
                      "typeName": {
                        "id": 24298,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24297,
                          "name": "NFTShare",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24237,
                          "src": "2149:8:9"
                        },
                        "referencedDeclaration": 24237,
                        "src": "2149:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24237",
                          "typeString": "contract NFTShare"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24309,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24303,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24281,
                        "src": "2187:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 24304,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24283,
                        "src": "2193:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 24305,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24279,
                        "src": "2201:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 24306,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2209:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2209:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2174:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_NFTShare_$24237_$",
                        "typeString": "function (string memory,string memory,uint256,address) payable returns (contract NFTShare)"
                      },
                      "typeName": {
                        "id": 24301,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24300,
                          "name": "NFTShare",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24237,
                          "src": "2178:8:9"
                        },
                        "referencedDeclaration": 24237,
                        "src": "2178:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24237",
                          "typeString": "contract NFTShare"
                        }
                      }
                    },
                    "id": 24308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2174:46:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTShare_$24237",
                      "typeString": "contract NFTShare"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2149:71:9"
                },
                {
                  "assignments": [
                    24312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24312,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "2244:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 24363,
                      "src": "2231:18:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24252_memory_ptr",
                        "typeString": "struct Fractron.Vault"
                      },
                      "typeName": {
                        "id": 24311,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24310,
                          "name": "Vault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24252,
                          "src": "2231:5:9"
                        },
                        "referencedDeclaration": 24252,
                        "src": "2231:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$24252_storage_ptr",
                          "typeString": "struct Fractron.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24321,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24314,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24274,
                        "src": "2286:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_calldata_ptr",
                          "typeString": "contract ERC721[] calldata"
                        }
                      },
                      {
                        "id": 24315,
                        "name": "tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24277,
                        "src": "2322:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 24316,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24279,
                        "src": "2357:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24317,
                        "name": "tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24299,
                        "src": "2392:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24237",
                          "typeString": "contract NFTShare"
                        }
                      },
                      {
                        "expression": {
                          "id": 24318,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2428:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2428:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_calldata_ptr",
                          "typeString": "contract ERC721[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_NFTShare_$24237",
                          "typeString": "contract NFTShare"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24313,
                      "name": "Vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24252,
                      "src": "2252:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Vault_$24252_storage_ptr_$",
                        "typeString": "type(struct Fractron.Vault storage pointer)"
                      }
                    },
                    "id": 24320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "nftContracts",
                      "tokenIds",
                      "tokenSupply",
                      "tokenContract",
                      "creator"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2252:197:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24252_memory_ptr",
                      "typeString": "struct Fractron.Vault memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2231:218:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 24323,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24312,
                        "src": "2478:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$24252_memory_ptr",
                          "typeString": "struct Fractron.Vault memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Vault_$24252_memory_ptr",
                          "typeString": "struct Fractron.Vault memory"
                        }
                      ],
                      "id": 24322,
                      "name": "VaultCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24257,
                      "src": "2465:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Vault_$24252_memory_ptr_$returns$__$",
                        "typeString": "function (struct Fractron.Vault memory)"
                      }
                    },
                    "id": 24324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2465:19:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24325,
                  "nodeType": "EmitStatement",
                  "src": "2460:24:9"
                },
                {
                  "expression": {
                    "id": 24330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 24326,
                        "name": "vaultById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24270,
                        "src": "2495:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24252_storage_$",
                          "typeString": "mapping(uint256 => struct Fractron.Vault storage ref)"
                        }
                      },
                      "id": 24328,
                      "indexExpression": {
                        "id": 24327,
                        "name": "currentVaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24265,
                        "src": "2505:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2495:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24252_storage",
                        "typeString": "struct Fractron.Vault storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24329,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24312,
                      "src": "2523:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24252_memory_ptr",
                        "typeString": "struct Fractron.Vault memory"
                      }
                    },
                    "src": "2495:33:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24252_storage",
                      "typeString": "struct Fractron.Vault storage ref"
                    }
                  },
                  "id": 24331,
                  "nodeType": "ExpressionStatement",
                  "src": "2495:33:9"
                },
                {
                  "body": {
                    "id": 24358,
                    "nodeType": "Block",
                    "src": "2589:155:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 24347,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2649:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 24348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2649:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 24351,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2685:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Fractron_$24514",
                                    "typeString": "contract Fractron"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Fractron_$24514",
                                    "typeString": "contract Fractron"
                                  }
                                ],
                                "id": 24350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2677:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24349,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2677:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2677:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 24353,
                                "name": "tokenIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24277,
                                "src": "2708:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 24355,
                              "indexExpression": {
                                "id": 24354,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24333,
                                "src": "2717:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2708:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 24343,
                                "name": "nftContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24274,
                                "src": "2603:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_calldata_ptr",
                                  "typeString": "contract ERC721[] calldata"
                                }
                              },
                              "id": 24345,
                              "indexExpression": {
                                "id": 24344,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24333,
                                "src": "2616:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2603:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$24144",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 24346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23861,
                            "src": "2603:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 24356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2603:130:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24357,
                        "nodeType": "ExpressionStatement",
                        "src": "2603:130:9"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24336,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24333,
                      "src": "2559:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 24337,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24274,
                        "src": "2563:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_calldata_ptr",
                          "typeString": "contract ERC721[] calldata"
                        }
                      },
                      "id": 24338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2563:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2559:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24359,
                  "initializationExpression": {
                    "assignments": [
                      24333
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24333,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2552:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 24359,
                        "src": "2544:9:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24332,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2544:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24335,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2556:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2544:13:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2584:3:9",
                      "subExpression": {
                        "id": 24340,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24333,
                        "src": "2584:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24342,
                    "nodeType": "ExpressionStatement",
                    "src": "2584:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "2539:205:9"
                },
                {
                  "expression": {
                    "id": 24361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2761:16:9",
                    "subExpression": {
                      "id": 24360,
                      "name": "currentVaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24265,
                      "src": "2761:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 24287,
                  "id": 24362,
                  "nodeType": "Return",
                  "src": "2754:23:9"
                }
              ]
            },
            "functionSelector": "9e9153c2",
            "id": 24364,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "split",
            "nameLocation": "1783:5:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24274,
                  "mutability": "mutable",
                  "name": "nftContracts",
                  "nameLocation": "1816:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24364,
                  "src": "1798:30:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_calldata_ptr",
                    "typeString": "contract ERC721[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24272,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 24271,
                        "name": "ERC721",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 24144,
                        "src": "1798:6:9"
                      },
                      "referencedDeclaration": 24144,
                      "src": "1798:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$24144",
                        "typeString": "contract ERC721"
                      }
                    },
                    "id": 24273,
                    "nodeType": "ArrayTypeName",
                    "src": "1798:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr",
                      "typeString": "contract ERC721[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24277,
                  "mutability": "mutable",
                  "name": "tokenIds",
                  "nameLocation": "1857:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24364,
                  "src": "1838:27:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24275,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1838:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24276,
                    "nodeType": "ArrayTypeName",
                    "src": "1838:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24279,
                  "mutability": "mutable",
                  "name": "supply",
                  "nameLocation": "1883:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24364,
                  "src": "1875:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1875:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24281,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1913:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24364,
                  "src": "1899:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24280,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1899:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24283,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1941:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24364,
                  "src": "1927:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24282,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1927:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1788:165:9"
            },
            "returnParameters": {
              "id": 24287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24286,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24364,
                  "src": "1978:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1978:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1977:9:9"
            },
            "scope": 24514,
            "src": "1774:1010:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24438,
              "nodeType": "Block",
              "src": "2836:558:9",
              "statements": [
                {
                  "assignments": [
                    24371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24371,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "2859:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 24438,
                      "src": "2846:18:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24252_memory_ptr",
                        "typeString": "struct Fractron.Vault"
                      },
                      "typeName": {
                        "id": 24370,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24369,
                          "name": "Vault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24252,
                          "src": "2846:5:9"
                        },
                        "referencedDeclaration": 24252,
                        "src": "2846:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$24252_storage_ptr",
                          "typeString": "struct Fractron.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24375,
                  "initialValue": {
                    "baseExpression": {
                      "id": 24372,
                      "name": "vaultById",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24270,
                      "src": "2867:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24252_storage_$",
                        "typeString": "mapping(uint256 => struct Fractron.Vault storage ref)"
                      }
                    },
                    "id": 24374,
                    "indexExpression": {
                      "id": 24373,
                      "name": "vaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24366,
                      "src": "2877:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2867:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24252_storage",
                      "typeString": "struct Fractron.Vault storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2846:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 24379,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24371,
                                "src": "2995:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Vault_$24252_memory_ptr",
                                  "typeString": "struct Fractron.Vault memory"
                                }
                              },
                              "id": 24380,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenContract",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24249,
                              "src": "2995:19:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFTShare_$24237",
                                "typeString": "contract NFTShare"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NFTShare_$24237",
                                "typeString": "contract NFTShare"
                              }
                            ],
                            "id": 24378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2987:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24377,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2987:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2987:28:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 24384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3027:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 24383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3019:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24382,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3019:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3019:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2987:42:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7661756c74206e6f7420666f756e64",
                        "id": 24387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3031:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c71b96f7c95eb866717c6b5014123bf7fbb993b6466ab79d5adafc3e0894f4af",
                          "typeString": "literal_string \"vault not found\""
                        },
                        "value": "vault not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c71b96f7c95eb866717c6b5014123bf7fbb993b6466ab79d5adafc3e0894f4af",
                          "typeString": "literal_string \"vault not found\""
                        }
                      ],
                      "id": 24376,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2979:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2979:70:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24389,
                  "nodeType": "ExpressionStatement",
                  "src": "2979:70:9"
                },
                {
                  "expression": {
                    "id": 24393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3060:25:9",
                    "subExpression": {
                      "baseExpression": {
                        "id": 24390,
                        "name": "vaultById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24270,
                        "src": "3067:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24252_storage_$",
                          "typeString": "mapping(uint256 => struct Fractron.Vault storage ref)"
                        }
                      },
                      "id": 24392,
                      "indexExpression": {
                        "id": 24391,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24366,
                        "src": "3077:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3067:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24252_storage",
                        "typeString": "struct Fractron.Vault storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24394,
                  "nodeType": "ExpressionStatement",
                  "src": "3060:25:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24400,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3125:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3125:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 24402,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24371,
                          "src": "3137:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24252_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24403,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24246,
                        "src": "3137:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 24395,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24371,
                          "src": "3096:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24252_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24398,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24249,
                        "src": "3096:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24237",
                          "typeString": "contract NFTShare"
                        }
                      },
                      "id": 24399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24236,
                      "src": "3096:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 24404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3096:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24405,
                  "nodeType": "ExpressionStatement",
                  "src": "3096:59:9"
                },
                {
                  "body": {
                    "id": 24436,
                    "nodeType": "Block",
                    "src": "3221:167:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 24426,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3295:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Fractron_$24514",
                                    "typeString": "contract Fractron"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Fractron_$24514",
                                    "typeString": "contract Fractron"
                                  }
                                ],
                                "id": 24425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3287:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24424,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3287:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3287:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 24428,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3318:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 24429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3318:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 24430,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24371,
                                  "src": "3346:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Vault_$24252_memory_ptr",
                                    "typeString": "struct Fractron.Vault memory"
                                  }
                                },
                                "id": 24431,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenIds",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24244,
                                "src": "3346:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 24433,
                              "indexExpression": {
                                "id": 24432,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24407,
                                "src": "3361:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3346:17:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 24418,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24371,
                                  "src": "3235:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Vault_$24252_memory_ptr",
                                    "typeString": "struct Fractron.Vault memory"
                                  }
                                },
                                "id": 24421,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftContracts",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24241,
                                "src": "3235:18:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                                  "typeString": "contract ERC721[] memory"
                                }
                              },
                              "id": 24422,
                              "indexExpression": {
                                "id": 24420,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24407,
                                "src": "3254:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3235:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$24144",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 24423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23861,
                            "src": "3235:34:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 24434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3235:142:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24435,
                        "nodeType": "ExpressionStatement",
                        "src": "3235:142:9"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24410,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24407,
                      "src": "3185:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 24411,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24371,
                          "src": "3189:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24252_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24412,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftContracts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24241,
                        "src": "3189:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                          "typeString": "contract ERC721[] memory"
                        }
                      },
                      "id": 24413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3189:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3185:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24437,
                  "initializationExpression": {
                    "assignments": [
                      24407
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24407,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3178:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 24437,
                        "src": "3170:9:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24406,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3170:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24409,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3182:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3170:13:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3216:3:9",
                      "subExpression": {
                        "id": 24415,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24407,
                        "src": "3216:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24417,
                    "nodeType": "ExpressionStatement",
                    "src": "3216:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "3165:223:9"
                }
              ]
            },
            "functionSelector": "049878f3",
            "id": 24439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "join",
            "nameLocation": "2799:4:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24366,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "2812:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24439,
                  "src": "2804:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2804:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2803:17:9"
            },
            "returnParameters": {
              "id": 24368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2836:0:9"
            },
            "scope": 24514,
            "src": "2790:604:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24451,
              "nodeType": "Block",
              "src": "3470:42:9",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 24447,
                      "name": "vaultById",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24270,
                      "src": "3487:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24252_storage_$",
                        "typeString": "mapping(uint256 => struct Fractron.Vault storage ref)"
                      }
                    },
                    "id": 24449,
                    "indexExpression": {
                      "id": 24448,
                      "name": "vaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24441,
                      "src": "3497:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3487:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24252_storage",
                      "typeString": "struct Fractron.Vault storage ref"
                    }
                  },
                  "functionReturnParameters": 24446,
                  "id": 24450,
                  "nodeType": "Return",
                  "src": "3480:25:9"
                }
              ]
            },
            "functionSelector": "9403b634",
            "id": 24452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVault",
            "nameLocation": "3409:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24441,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "3426:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24452,
                  "src": "3418:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3418:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3417:17:9"
            },
            "returnParameters": {
              "id": 24446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24445,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24452,
                  "src": "3456:12:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$24252_memory_ptr",
                    "typeString": "struct Fractron.Vault"
                  },
                  "typeName": {
                    "id": 24444,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24443,
                      "name": "Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24252,
                      "src": "3456:5:9"
                    },
                    "referencedDeclaration": 24252,
                    "src": "3456:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24252_storage_ptr",
                      "typeString": "struct Fractron.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3455:14:9"
            },
            "scope": 24514,
            "src": "3400:112:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24493,
              "nodeType": "Block",
              "src": "3579:194:9",
              "statements": [
                {
                  "assignments": [
                    24463
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24463,
                      "mutability": "mutable",
                      "name": "vaults",
                      "nameLocation": "3604:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 24493,
                      "src": "3589:21:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Vault_$24252_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Fractron.Vault[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 24461,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24460,
                            "name": "Vault",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24252,
                            "src": "3589:5:9"
                          },
                          "referencedDeclaration": 24252,
                          "src": "3589:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24252_storage_ptr",
                            "typeString": "struct Fractron.Vault"
                          }
                        },
                        "id": 24462,
                        "nodeType": "ArrayTypeName",
                        "src": "3589:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vault_$24252_storage_$dyn_storage_ptr",
                          "typeString": "struct Fractron.Vault[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24470,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24468,
                        "name": "currentVaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24265,
                        "src": "3625:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3613:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Vault_$24252_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Fractron.Vault memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 24465,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24464,
                            "name": "Vault",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24252,
                            "src": "3617:5:9"
                          },
                          "referencedDeclaration": 24252,
                          "src": "3617:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24252_storage_ptr",
                            "typeString": "struct Fractron.Vault"
                          }
                        },
                        "id": 24466,
                        "nodeType": "ArrayTypeName",
                        "src": "3617:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vault_$24252_storage_$dyn_storage_ptr",
                          "typeString": "struct Fractron.Vault[]"
                        }
                      }
                    },
                    "id": 24469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3613:27:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Vault_$24252_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Fractron.Vault memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3589:51:9"
                },
                {
                  "body": {
                    "id": 24489,
                    "nodeType": "Block",
                    "src": "3695:49:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 24487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 24481,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24463,
                              "src": "3709:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Vault_$24252_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Fractron.Vault memory[] memory"
                              }
                            },
                            "id": 24483,
                            "indexExpression": {
                              "id": 24482,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24472,
                              "src": "3716:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3709:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$24252_memory_ptr",
                              "typeString": "struct Fractron.Vault memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 24484,
                              "name": "vaultById",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24270,
                              "src": "3721:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24252_storage_$",
                                "typeString": "mapping(uint256 => struct Fractron.Vault storage ref)"
                              }
                            },
                            "id": 24486,
                            "indexExpression": {
                              "id": 24485,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24472,
                              "src": "3731:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3721:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$24252_storage",
                              "typeString": "struct Fractron.Vault storage ref"
                            }
                          },
                          "src": "3709:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24252_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24488,
                        "nodeType": "ExpressionStatement",
                        "src": "3709:24:9"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24475,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24472,
                      "src": "3670:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 24476,
                      "name": "currentVaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24265,
                      "src": "3674:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3670:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24490,
                  "initializationExpression": {
                    "assignments": [
                      24472
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24472,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3663:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 24490,
                        "src": "3655:9:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24471,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3655:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24474,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3667:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3655:13:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3690:3:9",
                      "subExpression": {
                        "id": 24478,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24472,
                        "src": "3690:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24480,
                    "nodeType": "ExpressionStatement",
                    "src": "3690:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "3650:94:9"
                },
                {
                  "expression": {
                    "id": 24491,
                    "name": "vaults",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24463,
                    "src": "3760:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Vault_$24252_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Fractron.Vault memory[] memory"
                    }
                  },
                  "functionReturnParameters": 24458,
                  "id": 24492,
                  "nodeType": "Return",
                  "src": "3753:13:9"
                }
              ]
            },
            "functionSelector": "97331bf9",
            "id": 24494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllVaults",
            "nameLocation": "3527:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3539:2:9"
            },
            "returnParameters": {
              "id": 24458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24457,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24494,
                  "src": "3563:14:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Vault_$24252_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Fractron.Vault[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24455,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 24454,
                        "name": "Vault",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 24252,
                        "src": "3563:5:9"
                      },
                      "referencedDeclaration": 24252,
                      "src": "3563:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24252_storage_ptr",
                        "typeString": "struct Fractron.Vault"
                      }
                    },
                    "id": 24456,
                    "nodeType": "ArrayTypeName",
                    "src": "3563:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Vault_$24252_storage_$dyn_storage_ptr",
                      "typeString": "struct Fractron.Vault[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3562:16:9"
            },
            "scope": 24514,
            "src": "3518:255:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24512,
              "nodeType": "Block",
              "src": "3991:54:9",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 24508,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "4008:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24514",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 24509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24513,
                      "src": "4008:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) payable external returns (bytes4)"
                      }
                    },
                    "id": 24510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "4008:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 24507,
                  "id": 24511,
                  "nodeType": "Return",
                  "src": "4001:37:9"
                }
              ]
            },
            "documentation": {
              "id": 24495,
              "nodeType": "StructuredDocumentation",
              "src": "3779:70:9",
              "text": "@dev This function ensures this contract can receive ERC721 tokens"
            },
            "functionSelector": "150b7a02",
            "id": 24513,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "3863:16:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24497,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24513,
                  "src": "3889:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3889:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24499,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24513,
                  "src": "3906:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3906:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24501,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24513,
                  "src": "3923:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3923:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24503,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24513,
                  "src": "3940:12:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24502,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3940:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3879:79:9"
            },
            "returnParameters": {
              "id": 24507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24506,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24513,
                  "src": "3983:6:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 24505,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3983:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3982:8:9"
            },
            "scope": 24514,
            "src": "3854:191:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 24515,
        "src": "878:3169:9",
        "usedErrors": []
      }
    ],
    "src": "32:4016:9"
  }
}