{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721[]",
              "name": "nftContracts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct Fractron.Vault",
          "name": "vault",
          "type": "tuple"
        }
      ],
      "name": "VaultCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721[]",
              "name": "nftContracts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct Fractron.Vault",
          "name": "vault",
          "type": "tuple"
        }
      ],
      "name": "VaultDestroyed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCanSplitToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTotalSupplyOwnerCanJoinToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "611:3638:10:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;857:35:10;;;-1:-1:-1;;;;;;857:35:10;1671:64:0;857:35:10;;;611:3638;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "611:3638:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:931;;;:::i;:::-;;1172:994;;;:::i;3109:1138::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;179:14:11;;172:22;154:41;;142:2;127:18;1819:584:0;;;;;;;1572:26;;;;;;;;;2172:931:10;2227:11;;;2247:15;2227:36;;-1:-1:-1;;;2227:36:10;;;;;352:25:11;;;;2218:61:10;;-1:-1:-1;;;;;2227:11:10;;:19;;325:18:11;;2227:36:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2273:4;2218:8;:61::i;:::-;2290:4;;:40;;-1:-1:-1;;;2290:40:10;;:4;:40;;;987:41:11;;;1044:18;;;1037:50;;;2290:4:10;1103:18:11;;;1096:50;1162:18;;;1155:50;-1:-1:-1;;;;;2290:4:10;;;;:15;;959:19:11;;2290:40:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2345:46:10;;2381:9;352:25:11;;2374:4:10;;-1:-1:-1;2362:1:10;;-1:-1:-1;2345:46:10;;340:2:11;325:18;2345:46:10;;;;;;;2420:8;;:147;;-1:-1:-1;;;2420:147:10;;2402:15;;-1:-1:-1;;;;;2420:8:10;;:14;;:147;;2448:12;;2474:6;;2494:9;;2420:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2608:8;;:26;;-1:-1:-1;;;2608:26:10;;;;;352:25:11;;;2402:165:10;;-1:-1:-1;2578:27:10;;-1:-1:-1;;;;;2608:8:10;;;;:17;;325:18:11;;2608:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2608:26:10;;;;;;;;;;;;:::i;:::-;2578:56;;2650:9;2645:328;2669:18;;:25;2665:29;;2645:328;;;2715:115;2741:5;:18;;;2760:1;2741:21;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2741:29:10;;2771:6;2778:1;2771:9;;;;;;;;:::i;:::-;;;;;;;;;2741:40;;;;;;;;;;;;;352:25:11;;340:2;325:18;;206:177;2741:40:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2807:8;;-1:-1:-1;;;;;2807:8:10;2715;:115::i;:::-;2844:66;2861:5;:18;;;2880:1;2861:21;;;;;;;;:::i;:::-;;;;;;;2893:12;2906:1;2893:15;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2893:15:10;2844:8;:66::i;:::-;2924:38;2933:5;:14;;;2948:1;2933:17;;;;;;;;:::i;:::-;;;;;;;2952:6;2959:1;2952:9;;;;;;;;:::i;:::-;;;;;;;;;2924:8;:38::i;:::-;2696:3;;;;:::i;:::-;;;;2645:328;;;;2983:38;2992:5;:17;;;3011:9;2983:8;:38::i;:::-;3040:19;;;;:44;;-1:-1:-1;;;3040:44:10;;3078:4;3040:44;;;7601:51:11;3031:65:10;;-1:-1:-1;;;;;3040:29:10;;;;7574:18:11;;3040:44:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3086:9;3031:8;:65::i;:::-;2208:895;;2172:931::o;1172:994::-;1213:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1206:4:10;:17;;-1:-1:-1;;;;;;1206:17:10;-1:-1:-1;;;;;1206:17:10;;;;;;;;;;1247:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1233:11:10;:27;;-1:-1:-1;;;;;;1233:27:10;-1:-1:-1;;;;;1233:27:10;;;;;;;;;;1284:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1270:11:10;:27;;-1:-1:-1;;;;;;1270:27:10;-1:-1:-1;;;;;1270:27:10;;;;;;;;;;1318:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1307:8:10;:25;;-1:-1:-1;;;;;;1307:25:10;-1:-1:-1;;;;;1307:25:10;;;;;;;;;1343:11;;:54;;-1:-1:-1;;;1343:54:10;;;;;7831:51:11;;;;-1:-1:-1;7898:18:11;;;7891:50;1343:11:10;;;;:29;;7804:18:11;;1343:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1407:11:10;;1445:8;;1407:54;;-1:-1:-1;;;1407:54:10;;-1:-1:-1;;;;;1445:8:10;;;1407:54;;;7831:51:11;1407:11:10;7898:18:11;;;7891:50;1407:11:10;;;-1:-1:-1;1407:29:10;;-1:-1:-1;7804:18:11;;1407:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1472:4:10;;1491;;1472:25;;-1:-1:-1;;;1472:25:10;;-1:-1:-1;;;;;1491:4:10;;;1472:25;;;7601:51:11;1472:4:10;;;-1:-1:-1;1472:10:10;;-1:-1:-1;7574:18:11;;1472:25:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1507:11:10;;1545:8;;1507:54;;-1:-1:-1;;;1507:54:10;;-1:-1:-1;;;;;1545:8:10;;;1507:54;;;7831:51:11;1507:11:10;7898:18:11;;;7891:50;1507:11:10;;;-1:-1:-1;1507:29:10;;-1:-1:-1;7804:18:11;;1507:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1571:4:10;;1590;;1571:25;;-1:-1:-1;;;1571:25:10;;-1:-1:-1;;;;;1590:4:10;;;1571:25;;;7601:51:11;1571:4:10;;;-1:-1:-1;1571:10:10;;-1:-1:-1;7574:18:11;;1571:25:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1606:11:10;;1644:8;;1606:54;;-1:-1:-1;;;1606:54:10;;-1:-1:-1;;;;;1644:8:10;;;1606:54;;;7831:51:11;1606:11:10;7898:18:11;;;7891:50;1606:11:10;;;-1:-1:-1;1606:29:10;;-1:-1:-1;7804:18:11;;1606:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1689:11;;;;;;;;;-1:-1:-1;;;;;1689:11:10;-1:-1:-1;;;;;1689:16:10;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1671:15;:36;1735:11;;:18;;;-1:-1:-1;;;1735:18:10;;;;-1:-1:-1;;;;;1735:11:10;;;;:16;;:18;;;;;;;;;;;;;;;:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1717:15;:36;1781:11;;:18;;;-1:-1:-1;;;1781:18:10;;;;-1:-1:-1;;;;;1781:11:10;;;;:16;;:18;;;;;;;;;;;;;;;:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1763:15;:36;1827:11;;:18;;;-1:-1:-1;;;1827:18:10;;;;-1:-1:-1;;;;;1827:11:10;;;;:16;;:18;;;;;;;;;;;;;;;:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1809:15;:36;;;1874:11;;;1856:12;:30;;1874:11;1856:30;;;;;;;;;;;-1:-1:-1;;;;;;1856:30:10;;;-1:-1:-1;;;;;1874:11:10;;;1856:30;;;;1914:11;;1896:30;;;;;;;;;;;;;1914:11;;;1896:30;;;;;;1954:11;;;1936:30;;;;;;;;;;;;;1954:11;;;1936:30;;;;;;1994:11;1976:30;;;;;;;;;;;;;;;;;1994:11;;;;1976:30;;;;2029:15;;2017:6;:28;;;;;;;1874:11;2017:28;;;;;;;;;;;2067:15;;2055:28;;;;;;;;;;2105:15;;2093:28;;;;;;;;;;2143:15;;2131:28;;;;;;;;;;1172:994::o;3109:1138::-;3188:8;;:147;;-1:-1:-1;;;3188:147:10;;3170:15;;-1:-1:-1;;;;;3188:8:10;;:14;;:147;;3216:12;;3242:6;;3262:9;;3188:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3376:8;;:26;;-1:-1:-1;;;3376:26:10;;;;;352:25:11;;;3170:165:10;;-1:-1:-1;3346:27:10;;-1:-1:-1;;;;;3376:8:10;;;;:17;;325:18:11;;3376:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3376:26:10;;;;;;;;;;;;:::i;:::-;3346:56;;3417:9;3412:204;3436:18;;:25;3432:29;;3412:204;;;3482:123;3508:5;:18;;;3527:1;3508:21;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3508:29:10;;3538:5;:14;;;3553:1;3538:17;;;;;;;;:::i;:::-;;;;;;;3508:48;;;;;;;;;;;;;352:25:11;;340:2;325:18;;206:177;3482:123:10;3463:3;;;;:::i;:::-;;;;3412:204;;;-1:-1:-1;3634:19:10;;;;:44;;-1:-1:-1;;;3634:44:10;;3672:4;3634:44;;;7601:51:11;3625:65:10;;-1:-1:-1;;;;;3634:29:10;;;;7574:18:11;;3634:44:10;7455:203:11;3625:65:10;3701:19;;;;3737:8;;3701:65;;-1:-1:-1;;;3701:65:10;;-1:-1:-1;;;;;3737:8:10;;;3701:65;;;8126:51:11;-1:-1:-1;;8193:18:11;;;8186:34;3701:27:10;;;;;8099:18:11;;3701:65:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3776:8:10;;:22;;-1:-1:-1;;;3776:22:10;;;;;352:25:11;;;-1:-1:-1;;;;;3776:8:10;;;;:13;;325:18:11;;3776:22:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3814:9;3809:200;3833:18;;:25;3829:29;;3809:200;;;3879:119;3905:5;:18;;;3924:1;3905:21;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3905:29:10;;3935:5;:14;;;3950:1;3935:17;;;;;;;;:::i;:::-;;;;;;;3905:48;;;;;;;;;;;;;352:25:11;;340:2;325:18;;206:177;3879:119:10;3860:3;;;;:::i;:::-;;;;3809:200;;;-1:-1:-1;4027:19:10;;;;:44;;-1:-1:-1;;;4027:44:10;;4065:4;4027:44;;;7601:51:11;4018:57:10;;-1:-1:-1;;;;;4027:29:10;;;;7574:18:11;;4027:44:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4073:1;4018:8;:57::i;:::-;4094:8;;:26;;-1:-1:-1;;;4094:26:10;;;;;352:25:11;;;-1:-1:-1;;;;;4094:8:10;;;;:17;;325:18:11;;4094:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4094:26:10;;;;;;;;;;;;:::i;:::-;4086:34;;4135:9;4130:111;4154:18;;:25;4150:29;;4130:111;;;4200:30;4209:5;:14;;;4224:1;4209:17;;;;;;;;:::i;:::-;;;;;;;4228:1;4200:8;:30::i;:::-;4181:3;;;;:::i;:::-;;;;4130:111;;;;3160:1087;;3109:1138::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;8126:51:11;;;-1:-1:-1;;;8193:18:11;;;8186:34;2196:43:0;;;;;;;;;8099:18:11;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;3615:277::-;3683:1;-1:-1:-1;;;;;3678:6:0;:1;-1:-1:-1;;;;;3678:6:0;;3674:212;;3705:44;;;;;9812:2:11;9794:21;;;9851:2;9831:18;;;9824:30;9890:34;9885:2;9870:18;;9863:62;-1:-1:-1;;;9956:2:11;9941:18;;9934:35;10001:3;9986:19;;9610:401;3705:44:0;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;:::-;;;;;;;;3869:6;:4;:6::i;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;11304:2:11;11286:21;;;11343:2;11323:18;;;11316:30;11382:34;11377:2;11362:18;;11355:62;-1:-1:-1;;;11448:2:11;11433:18;;11426:32;11490:3;11475:19;;11102:398;5286:41:0;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;12413:51:11;;;-1:-1:-1;;;12480:18:11;;;12473:34;;;;2705:4:0;12523:18:11;;;12516:34;2482:11:0;;1671:64;2579:43;;12386:18:11;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;388:131:11:-;-1:-1:-1;;;;;463:31:11;;453:42;;443:70;;509:1;506;499:12;443:70;388:131;:::o;524:251::-;594:6;647:2;635:9;626:7;622:23;618:32;615:52;;;663:1;660;653:12;615:52;695:9;689:16;714:31;739:5;714:31;:::i;:::-;764:5;524:251;-1:-1:-1;;;524:251:11:o;1426:469::-;1487:3;1525:5;1519:12;1552:6;1547:3;1540:19;1578:4;1607:2;1602:3;1598:12;1591:19;;1629:5;1626:1;1619:16;1671:2;1668:1;1658:16;1692:1;1702:168;1716:6;1713:1;1710:13;1702:168;;;1777:13;;1765:26;;1811:12;;;;1858:1;1846:14;;;;1731:9;1702:168;;;-1:-1:-1;1886:3:11;;1426:469;-1:-1:-1;;;;;1426:469:11:o;2224:1414::-;2712:4;2760:3;2749:9;2745:19;2791:3;2780:9;2773:22;2815:6;2850;2844:13;2881:6;2873;2866:22;2919:3;2908:9;2904:19;2897:26;;2942:6;2939:1;2932:17;2968:4;2958:14;;3008:2;3005:1;2995:16;3029:1;3039:194;3053:6;3050:1;3047:13;3039:194;;;3118:13;;-1:-1:-1;;;;;3114:39:11;3102:52;;3174:12;;;;3150:1;3209:14;;;;3068:9;3039:194;;;3043:3;;;3278:9;3273:3;3269:19;3264:2;3253:9;3249:18;3242:47;3312:49;3357:3;3349:6;3312:49;:::i;:::-;3298:63;;;3397:6;3392:2;3381:9;3377:18;3370:34;3452:9;3444:6;3440:22;3435:2;3424:9;3420:18;3413:50;3486:37;3516:6;1977:2;1965:15;;-1:-1:-1;;;2005:4:11;1996:14;;1989:44;2058:2;2049:12;;1900:167;3486:37;3560:22;;;3554:3;3539:19;;3532:51;2144:1;2132:14;;-1:-1:-1;;;2171:4:11;2162:14;;2155:30;3472:51;-1:-1:-1;2210:2:11;2201:12;;3592:40;2224:1414;-1:-1:-1;;;;;;2224:1414:11:o;3643:184::-;3713:6;3766:2;3754:9;3745:7;3741:23;3737:32;3734:52;;;3782:1;3779;3772:12;3734:52;-1:-1:-1;3805:16:11;;3643:184;-1:-1:-1;3643:184:11:o;3832:127::-;3893:10;3888:3;3884:20;3881:1;3874:31;3924:4;3921:1;3914:15;3948:4;3945:1;3938:15;3964:253;4036:2;4030:9;4078:4;4066:17;;4113:18;4098:34;;4134:22;;;4095:62;4092:88;;;4160:18;;:::i;:::-;4196:2;4189:22;3964:253;:::o;4222:275::-;4293:2;4287:9;4358:2;4339:13;;-1:-1:-1;;4335:27:11;4323:40;;4393:18;4378:34;;4414:22;;;4375:62;4372:88;;;4440:18;;:::i;:::-;4476:2;4469:22;4222:275;;-1:-1:-1;4222:275:11:o;4502:191::-;4570:4;4603:18;4595:6;4592:30;4589:56;;;4625:18;;:::i;:::-;-1:-1:-1;4670:1:11;4666:14;4682:4;4662:25;;4502:191::o;4698:667::-;4763:5;4816:3;4809:4;4801:6;4797:17;4793:27;4783:55;;4834:1;4831;4824:12;4783:55;4863:6;4857:13;4889:4;4913:68;4929:51;4977:2;4929:51;:::i;:::-;4913:68;:::i;:::-;5015:15;;;5101:1;5097:10;;;;5085:23;;5081:32;;;5046:12;;;;5125:15;;;5122:35;;;5153:1;5150;5143:12;5122:35;5189:2;5181:6;5177:15;5201:135;5217:6;5212:3;5209:15;5201:135;;;5283:10;;5271:23;;5314:12;;;;5234;;5201:135;;;-1:-1:-1;5354:5:11;4698:667;-1:-1:-1;;;;;;4698:667:11:o;5370:148::-;5459:13;;5481:31;5459:13;5481:31;:::i;5523:1558::-;5617:6;5648:2;5691;5679:9;5670:7;5666:23;5662:32;5659:52;;;5707:1;5704;5697:12;5659:52;5740:9;5734:16;5769:18;5810:2;5802:6;5799:14;5796:34;;;5826:1;5823;5816:12;5796:34;5849:22;;;;5905:4;5887:16;;;5883:27;5880:47;;;5923:1;5920;5913:12;5880:47;5949:22;;:::i;:::-;6002:2;5996:9;6030:2;6020:8;6017:16;6014:36;;;6046:1;6043;6036:12;6014:36;6069:17;;6117:4;6109:13;;6105:27;-1:-1:-1;6095:55:11;;6146:1;6143;6136:12;6095:55;6175:2;6169:9;6198:68;6214:51;6262:2;6214:51;:::i;6198:68::-;6300:15;;;6382:1;6378:10;;;;6370:19;;6366:28;;;6331:12;;;;6406:19;;;6403:39;;;6438:1;6435;6428:12;6403:39;6462:11;;;;6482:216;6498:6;6493:3;6490:15;6482:216;;;6573:3;6567:10;6590:33;6615:7;6590:33;:::i;:::-;6636:20;;6515:12;;;;6676;;;;6482:216;;;6707:20;;-1:-1:-1;;;6758:11:11;;;6752:18;6782:16;;;6779:36;;;6811:1;6808;6801:12;6779:36;6847:67;6906:7;6895:8;6891:2;6887:17;6847:67;:::i;:::-;6842:2;6835:5;6831:14;6824:91;;6961:2;6957;6953:11;6947:18;6942:2;6935:5;6931:14;6924:42;6998:52;7046:2;7042;7038:11;6998:52;:::i;:::-;6993:2;6982:14;;6975:76;6986:5;5523:1558;-1:-1:-1;;;;;;5523:1558:11:o;7086:127::-;7147:10;7142:3;7138:20;7135:1;7128:31;7178:4;7175:1;7168:15;7202:4;7199:1;7192:15;7218:232;7257:3;-1:-1:-1;;7278:17:11;;7275:140;;;7337:10;7332:3;7328:20;7325:1;7318:31;7372:4;7369:1;7362:15;7400:4;7397:1;7390:15;7275:140;-1:-1:-1;7442:1:11;7431:13;;7218:232::o;8231:277::-;8298:6;8351:2;8339:9;8330:7;8326:23;8322:32;8319:52;;;8367:1;8364;8357:12;8319:52;8399:9;8393:16;8452:5;8445:13;8438:21;8431:5;8428:32;8418:60;;8474:1;8471;8464:12;8792:336;8833:3;8871:5;8865:12;8895:1;8905:128;8919:6;8916:1;8913:13;8905:128;;;9016:4;9001:13;;;8997:24;;8991:31;8978:11;;;8971:52;8934:12;8905:128;;;9051:6;9048:1;9045:13;9042:48;;;9086:1;9077:6;9072:3;9068:16;9061:27;9042:48;-1:-1:-1;9106:16:11;;;;;8792:336;-1:-1:-1;;8792:336:11:o;9133:278::-;-1:-1:-1;;;;;;9318:33:11;;9306:46;;9288:3;9368:37;9402:1;9393:11;;9385:6;9368:37;:::i;:::-;9361:44;9133:278;-1:-1:-1;;;;9133:278:11:o;9416:189::-;9545:3;9570:29;9595:3;9587:6;9570:29;:::i;10180:374::-;10410:2;10399:9;10392:21;10373:4;10430:49;10475:2;10464:9;10460:18;10093:2;10081:15;;-1:-1:-1;;;10121:4:11;10112:14;;10105:36;10166:2;10157:12;;10016:159;10430:49;-1:-1:-1;;;;;10515:32:11;;;;10510:2;10495:18;;;;10488:60;;;;-1:-1:-1;10422:57:11;10180:374::o;10723:::-;10953:2;10942:9;10935:21;10916:4;10973:49;11018:2;11007:9;11003:18;10636:2;10624:15;;-1:-1:-1;;;10664:4:11;10655:14;;10648:36;10709:2;10700:12;;10559:159;11505:348;11735:2;11724:9;11717:21;11698:4;11755:49;11800:2;11789:9;11785:18;10093:2;10081:15;;-1:-1:-1;;;10121:4:11;10112:14;;10105:36;10166:2;10157:12;;10016:159;11755:49;11747:57;;11840:6;11835:2;11824:9;11820:18;11813:34;11505:348;;;;:::o;11858:::-;12088:2;12077:9;12070:21;12051:4;12108:49;12153:2;12142:9;12138:18;10636:2;10624:15;;-1:-1:-1;;;10664:4:11;10655:14;;10648:36;10709:2;10700:12;;10559:159",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/alexander/dev/fractional/contracts/src/test/Fractron.t.sol",
    "exportedSymbols": {
      "DSTest": [
        1786
      ],
      "ERC721": [
        24144
      ],
      "Fractron": [
        24474
      ],
      "FractronTest": [
        25031
      ],
      "NFTShare": [
        24237
      ],
      "TestNFT": [
        24522
      ],
      "User": [
        24488
      ],
      "Vm": [
        3175
      ],
      "stdError": [
        21943
      ]
    },
    "id": 25032,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24476,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:10"
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "id": 24478,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25032,
        "sourceUnit": 3176,
        "src": "58:36:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24477,
              "name": "Vm",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "66:2:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "id": 24480,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25032,
        "sourceUnit": 1787,
        "src": "95:40:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24479,
              "name": "DSTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "103:6:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/forge-std/src/test.sol",
        "file": "forge-std/test.sol",
        "id": 24482,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25032,
        "sourceUnit": 23213,
        "src": "136:44:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24481,
              "name": "stdError",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "144:8:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "id": 24484,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25032,
        "sourceUnit": 24165,
        "src": "181:49:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24483,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "189:6:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/src/Fractron.sol",
        "file": "../Fractron.sol",
        "id": 24487,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25032,
        "sourceUnit": 24475,
        "src": "231:51:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24485,
              "name": "Fractron",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "239:8:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24486,
              "name": "NFTShare",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "249:8:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "User",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24488,
        "linearizedBaseContracts": [
          24488
        ],
        "name": "User",
        "nameLocation": "293:4:10",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 25032,
        "src": "284:16:10",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "54657374204e4654",
                "id": 24490,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "329:10:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_399b3b8e1a607e38a806dbdb386c84217e0a0255dd7cc2a55c6afb0aaffe0822",
                  "typeString": "literal_string \"Test NFT\""
                },
                "value": "Test NFT"
              },
              {
                "hexValue": "54455354",
                "id": 24491,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "341:6:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                  "typeString": "literal_string \"TEST\""
                },
                "value": "TEST"
              }
            ],
            "baseName": {
              "id": 24489,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24144,
              "src": "322:6:10"
            },
            "id": 24492,
            "nodeType": "InheritanceSpecifier",
            "src": "322:26:10"
          }
        ],
        "canonicalName": "TestNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24522,
        "linearizedBaseContracts": [
          24522,
          24144
        ],
        "name": "TestNFT",
        "nameLocation": "311:7:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "17d70f7c",
            "id": 24495,
            "mutability": "mutable",
            "name": "tokenId",
            "nameLocation": "370:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 24522,
            "src": "355:26:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24493,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "355:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 24494,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "380:1:10",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23638
            ],
            "body": {
              "id": 24505,
              "nodeType": "Block",
              "src": "460:30:10",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74657374",
                    "id": 24503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "477:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                      "typeString": "literal_string \"test\""
                    },
                    "value": "test"
                  },
                  "functionReturnParameters": 24502,
                  "id": 24504,
                  "nodeType": "Return",
                  "src": "470:13:10"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 24506,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "397:8:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24499,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "427:8:10"
            },
            "parameters": {
              "id": 24498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24497,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24506,
                  "src": "406:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "405:9:10"
            },
            "returnParameters": {
              "id": 24502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24501,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24506,
                  "src": "445:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24500,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "444:15:10"
            },
            "scope": 24522,
            "src": "388:102:10",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24520,
              "nodeType": "Block",
              "src": "537:70:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24512,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "553:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "553:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24514,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24495,
                        "src": "565:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24511,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24014,
                      "src": "547:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 24515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "547:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24516,
                  "nodeType": "ExpressionStatement",
                  "src": "547:26:10"
                },
                {
                  "expression": {
                    "id": 24518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "591:9:10",
                    "subExpression": {
                      "id": 24517,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24495,
                      "src": "591:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 24510,
                  "id": 24519,
                  "nodeType": "Return",
                  "src": "584:16:10"
                }
              ]
            },
            "functionSelector": "1249c58b",
            "id": 24521,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "505:4:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "509:2:10"
            },
            "returnParameters": {
              "id": 24510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24509,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24521,
                  "src": "528:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "527:9:10"
            },
            "scope": 24522,
            "src": "496:111:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 25032,
        "src": "302:307:10",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24523,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1786,
              "src": "636:6:10"
            },
            "id": 24524,
            "nodeType": "InheritanceSpecifier",
            "src": "636:6:10"
          }
        ],
        "canonicalName": "FractronTest",
        "contractDependencies": [
          24474,
          24488,
          24522
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 25031,
        "linearizedBaseContracts": [
          25031,
          1786
        ],
        "name": "FractronTest",
        "nameLocation": "620:12:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 24526,
            "mutability": "mutable",
            "name": "collection1_id1",
            "nameLocation": "657:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 25031,
            "src": "649:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24525,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "649:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24528,
            "mutability": "mutable",
            "name": "collection1_id2",
            "nameLocation": "686:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 25031,
            "src": "678:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24527,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "678:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24530,
            "mutability": "mutable",
            "name": "collection2_id1",
            "nameLocation": "715:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 25031,
            "src": "707:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24529,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "707:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24532,
            "mutability": "mutable",
            "name": "collection2_id2",
            "nameLocation": "744:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 25031,
            "src": "736:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24531,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "736:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24535,
            "mutability": "mutable",
            "name": "user",
            "nameLocation": "779:4:10",
            "nodeType": "VariableDeclaration",
            "scope": 25031,
            "src": "765:18:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_User_$24488",
              "typeString": "contract User"
            },
            "typeName": {
              "id": 24534,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24533,
                "name": "User",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24488,
                "src": "765:4:10"
              },
              "referencedDeclaration": 24488,
              "src": "765:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_User_$24488",
                "typeString": "contract User"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24538,
            "mutability": "mutable",
            "name": "collection1",
            "nameLocation": "806:11:10",
            "nodeType": "VariableDeclaration",
            "scope": 25031,
            "src": "789:28:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestNFT_$24522",
              "typeString": "contract TestNFT"
            },
            "typeName": {
              "id": 24537,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24536,
                "name": "TestNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24522,
                "src": "789:7:10"
              },
              "referencedDeclaration": 24522,
              "src": "789:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestNFT_$24522",
                "typeString": "contract TestNFT"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24541,
            "mutability": "mutable",
            "name": "collection2",
            "nameLocation": "840:11:10",
            "nodeType": "VariableDeclaration",
            "scope": 25031,
            "src": "823:28:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestNFT_$24522",
              "typeString": "contract TestNFT"
            },
            "typeName": {
              "id": 24540,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24539,
                "name": "TestNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24522,
                "src": "823:7:10"
              },
              "referencedDeclaration": 24522,
              "src": "823:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestNFT_$24522",
                "typeString": "contract TestNFT"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24547,
            "mutability": "mutable",
            "name": "hevm",
            "nameLocation": "869:4:10",
            "nodeType": "VariableDeclaration",
            "scope": 25031,
            "src": "857:35:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$3175",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 24543,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24542,
                "name": "Vm",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3175,
                "src": "857:2:10"
              },
              "referencedDeclaration": 3175,
              "src": "857:2:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$3175",
                "typeString": "contract Vm"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 24545,
                  "name": "HEVM_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 107,
                  "src": "879:12:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 24544,
                "name": "Vm",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3175,
                "src": "876:2:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Vm_$3175_$",
                  "typeString": "type(contract Vm)"
                }
              },
              "id": 24546,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "876:16:10",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$3175",
                "typeString": "contract Vm"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24550,
            "mutability": "mutable",
            "name": "fractron",
            "nameLocation": "916:8:10",
            "nodeType": "VariableDeclaration",
            "scope": 25031,
            "src": "898:26:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Fractron_$24474",
              "typeString": "contract Fractron"
            },
            "typeName": {
              "id": 24549,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24548,
                "name": "Fractron",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24474,
                "src": "898:8:10"
              },
              "referencedDeclaration": 24474,
              "src": "898:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Fractron_$24474",
                "typeString": "contract Fractron"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24554,
            "mutability": "mutable",
            "name": "nftContracts",
            "nameLocation": "949:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 25031,
            "src": "931:30:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
              "typeString": "contract ERC721[]"
            },
            "typeName": {
              "baseType": {
                "id": 24552,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 24551,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24144,
                  "src": "931:6:10"
                },
                "referencedDeclaration": 24144,
                "src": "931:6:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC721_$24144",
                  "typeString": "contract ERC721"
                }
              },
              "id": 24553,
              "nodeType": "ArrayTypeName",
              "src": "931:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr",
                "typeString": "contract ERC721[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24557,
            "mutability": "mutable",
            "name": "nftIds",
            "nameLocation": "986:6:10",
            "nodeType": "VariableDeclaration",
            "scope": 25031,
            "src": "967:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 24555,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "967:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 24556,
              "nodeType": "ArrayTypeName",
              "src": "967:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 24562,
            "name": "VaultCreated",
            "nameLocation": "1005:12:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24560,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1033:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24562,
                  "src": "1018:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                    "typeString": "struct Fractron.Vault"
                  },
                  "typeName": {
                    "id": 24559,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24558,
                      "name": "Fractron.Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24256,
                      "src": "1018:14:10"
                    },
                    "referencedDeclaration": 24256,
                    "src": "1018:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24256_storage_ptr",
                      "typeString": "struct Fractron.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1017:22:10"
            },
            "src": "999:41:10"
          },
          {
            "anonymous": false,
            "id": 24567,
            "name": "VaultDestroyed",
            "nameLocation": "1051:14:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24565,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1081:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24567,
                  "src": "1066:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                    "typeString": "struct Fractron.Vault"
                  },
                  "typeName": {
                    "id": 24564,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24563,
                      "name": "Fractron.Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24256,
                      "src": "1066:14:10"
                    },
                    "referencedDeclaration": 24256,
                    "src": "1066:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24256_storage_ptr",
                      "typeString": "struct Fractron.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1065:22:10"
            },
            "src": "1045:43:10"
          },
          {
            "anonymous": false,
            "id": 24575,
            "name": "Transfer",
            "nameLocation": "1099:8:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24569,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1124:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24575,
                  "src": "1108:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24571,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1146:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24575,
                  "src": "1130:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1130:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24573,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1158:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24575,
                  "src": "1150:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1150:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1107:58:10"
            },
            "src": "1093:73:10"
          },
          {
            "body": {
              "id": 24736,
              "nodeType": "Block",
              "src": "1196:970:10",
              "statements": [
                {
                  "expression": {
                    "id": 24583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24578,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24535,
                      "src": "1206:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$24488",
                        "typeString": "contract User"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1213:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_User_$24488_$",
                          "typeString": "function () returns (contract User)"
                        },
                        "typeName": {
                          "id": 24580,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24579,
                            "name": "User",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24488,
                            "src": "1217:4:10"
                          },
                          "referencedDeclaration": 24488,
                          "src": "1217:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_User_$24488",
                            "typeString": "contract User"
                          }
                        }
                      },
                      "id": 24582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1213:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$24488",
                        "typeString": "contract User"
                      }
                    },
                    "src": "1206:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$24488",
                      "typeString": "contract User"
                    }
                  },
                  "id": 24584,
                  "nodeType": "ExpressionStatement",
                  "src": "1206:17:10"
                },
                {
                  "expression": {
                    "id": 24590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24585,
                      "name": "collection1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24538,
                      "src": "1233:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestNFT_$24522",
                        "typeString": "contract TestNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1247:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestNFT_$24522_$",
                          "typeString": "function () returns (contract TestNFT)"
                        },
                        "typeName": {
                          "id": 24587,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24586,
                            "name": "TestNFT",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24522,
                            "src": "1251:7:10"
                          },
                          "referencedDeclaration": 24522,
                          "src": "1251:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestNFT_$24522",
                            "typeString": "contract TestNFT"
                          }
                        }
                      },
                      "id": 24589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1247:13:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestNFT_$24522",
                        "typeString": "contract TestNFT"
                      }
                    },
                    "src": "1233:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestNFT_$24522",
                      "typeString": "contract TestNFT"
                    }
                  },
                  "id": 24591,
                  "nodeType": "ExpressionStatement",
                  "src": "1233:27:10"
                },
                {
                  "expression": {
                    "id": 24597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24592,
                      "name": "collection2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24541,
                      "src": "1270:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestNFT_$24522",
                        "typeString": "contract TestNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1284:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestNFT_$24522_$",
                          "typeString": "function () returns (contract TestNFT)"
                        },
                        "typeName": {
                          "id": 24594,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24593,
                            "name": "TestNFT",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24522,
                            "src": "1288:7:10"
                          },
                          "referencedDeclaration": 24522,
                          "src": "1288:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestNFT_$24522",
                            "typeString": "contract TestNFT"
                          }
                        }
                      },
                      "id": 24596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1284:13:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestNFT_$24522",
                        "typeString": "contract TestNFT"
                      }
                    },
                    "src": "1270:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestNFT_$24522",
                      "typeString": "contract TestNFT"
                    }
                  },
                  "id": 24598,
                  "nodeType": "ExpressionStatement",
                  "src": "1270:27:10"
                },
                {
                  "expression": {
                    "id": 24604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24599,
                      "name": "fractron",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24550,
                      "src": "1307:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Fractron_$24474",
                        "typeString": "contract Fractron"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1318:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Fractron_$24474_$",
                          "typeString": "function () returns (contract Fractron)"
                        },
                        "typeName": {
                          "id": 24601,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24600,
                            "name": "Fractron",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24474,
                            "src": "1322:8:10"
                          },
                          "referencedDeclaration": 24474,
                          "src": "1322:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Fractron_$24474",
                            "typeString": "contract Fractron"
                          }
                        }
                      },
                      "id": 24603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1318:14:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Fractron_$24474",
                        "typeString": "contract Fractron"
                      }
                    },
                    "src": "1307:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Fractron_$24474",
                      "typeString": "contract Fractron"
                    }
                  },
                  "id": 24605,
                  "nodeType": "ExpressionStatement",
                  "src": "1307:25:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24611,
                            "name": "fractron",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24550,
                            "src": "1381:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fractron_$24474",
                              "typeString": "contract Fractron"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Fractron_$24474",
                              "typeString": "contract Fractron"
                            }
                          ],
                          "id": 24610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1373:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24609,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1373:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1373:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1392:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 24606,
                        "name": "collection1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24538,
                        "src": "1343:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24522",
                          "typeString": "contract TestNFT"
                        }
                      },
                      "id": 24608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23782,
                      "src": "1343:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 24614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1343:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24615,
                  "nodeType": "ExpressionStatement",
                  "src": "1343:54:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24621,
                            "name": "fractron",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24550,
                            "src": "1445:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fractron_$24474",
                              "typeString": "contract Fractron"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Fractron_$24474",
                              "typeString": "contract Fractron"
                            }
                          ],
                          "id": 24620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1437:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24619,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1437:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1437:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1456:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 24616,
                        "name": "collection2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24541,
                        "src": "1407:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24522",
                          "typeString": "contract TestNFT"
                        }
                      },
                      "id": 24618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23782,
                      "src": "1407:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 24624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1407:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24625,
                  "nodeType": "ExpressionStatement",
                  "src": "1407:54:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24631,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24535,
                            "src": "1491:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_User_$24488",
                              "typeString": "contract User"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_User_$24488",
                              "typeString": "contract User"
                            }
                          ],
                          "id": 24630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1483:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24629,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1483:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1483:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24626,
                        "name": "hevm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24547,
                        "src": "1472:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3175",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2634,
                      "src": "1472:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1472:25:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24634,
                  "nodeType": "ExpressionStatement",
                  "src": "1472:25:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24640,
                            "name": "fractron",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24550,
                            "src": "1545:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fractron_$24474",
                              "typeString": "contract Fractron"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Fractron_$24474",
                              "typeString": "contract Fractron"
                            }
                          ],
                          "id": 24639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1537:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24638,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1537:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1537:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1556:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 24635,
                        "name": "collection1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24538,
                        "src": "1507:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24522",
                          "typeString": "contract TestNFT"
                        }
                      },
                      "id": 24637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23782,
                      "src": "1507:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 24643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24644,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:54:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24650,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24535,
                            "src": "1590:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_User_$24488",
                              "typeString": "contract User"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_User_$24488",
                              "typeString": "contract User"
                            }
                          ],
                          "id": 24649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1582:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24648,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1582:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1582:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24645,
                        "name": "hevm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24547,
                        "src": "1571:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3175",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2634,
                      "src": "1571:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1571:25:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24653,
                  "nodeType": "ExpressionStatement",
                  "src": "1571:25:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24659,
                            "name": "fractron",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24550,
                            "src": "1644:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fractron_$24474",
                              "typeString": "contract Fractron"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Fractron_$24474",
                              "typeString": "contract Fractron"
                            }
                          ],
                          "id": 24658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1636:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24657,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1636:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1636:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1655:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 24654,
                        "name": "collection2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24541,
                        "src": "1606:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24522",
                          "typeString": "contract TestNFT"
                        }
                      },
                      "id": 24656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23782,
                      "src": "1606:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 24662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1606:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24663,
                  "nodeType": "ExpressionStatement",
                  "src": "1606:54:10"
                },
                {
                  "expression": {
                    "id": 24668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24664,
                      "name": "collection1_id1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24526,
                      "src": "1671:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 24665,
                          "name": "collection1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24538,
                          "src": "1689:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestNFT_$24522",
                            "typeString": "contract TestNFT"
                          }
                        },
                        "id": 24666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24521,
                        "src": "1689:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 24667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1689:18:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1671:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24669,
                  "nodeType": "ExpressionStatement",
                  "src": "1671:36:10"
                },
                {
                  "expression": {
                    "id": 24674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24670,
                      "name": "collection1_id2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24528,
                      "src": "1717:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 24671,
                          "name": "collection1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24538,
                          "src": "1735:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestNFT_$24522",
                            "typeString": "contract TestNFT"
                          }
                        },
                        "id": 24672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24521,
                        "src": "1735:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 24673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1735:18:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1717:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24675,
                  "nodeType": "ExpressionStatement",
                  "src": "1717:36:10"
                },
                {
                  "expression": {
                    "id": 24680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24676,
                      "name": "collection2_id1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24530,
                      "src": "1763:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 24677,
                          "name": "collection2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24541,
                          "src": "1781:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestNFT_$24522",
                            "typeString": "contract TestNFT"
                          }
                        },
                        "id": 24678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24521,
                        "src": "1781:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 24679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1781:18:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1763:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24681,
                  "nodeType": "ExpressionStatement",
                  "src": "1763:36:10"
                },
                {
                  "expression": {
                    "id": 24686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24682,
                      "name": "collection2_id2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24532,
                      "src": "1809:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 24683,
                          "name": "collection2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24541,
                          "src": "1827:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestNFT_$24522",
                            "typeString": "contract TestNFT"
                          }
                        },
                        "id": 24684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24521,
                        "src": "1827:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 24685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1827:18:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1809:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24687,
                  "nodeType": "ExpressionStatement",
                  "src": "1809:36:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24691,
                        "name": "collection1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24538,
                        "src": "1874:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24522",
                          "typeString": "contract TestNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestNFT_$24522",
                          "typeString": "contract TestNFT"
                        }
                      ],
                      "expression": {
                        "id": 24688,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24554,
                        "src": "1856:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      "id": 24690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1856:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$_t_contract$_ERC721_$24144_$returns$__$bound_to$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$",
                        "typeString": "function (contract ERC721[] storage pointer,contract ERC721)"
                      }
                    },
                    "id": 24692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1856:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24693,
                  "nodeType": "ExpressionStatement",
                  "src": "1856:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24697,
                        "name": "collection1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24538,
                        "src": "1914:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24522",
                          "typeString": "contract TestNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestNFT_$24522",
                          "typeString": "contract TestNFT"
                        }
                      ],
                      "expression": {
                        "id": 24694,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24554,
                        "src": "1896:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      "id": 24696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1896:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$_t_contract$_ERC721_$24144_$returns$__$bound_to$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$",
                        "typeString": "function (contract ERC721[] storage pointer,contract ERC721)"
                      }
                    },
                    "id": 24698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24699,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24703,
                        "name": "collection2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24541,
                        "src": "1954:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24522",
                          "typeString": "contract TestNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestNFT_$24522",
                          "typeString": "contract TestNFT"
                        }
                      ],
                      "expression": {
                        "id": 24700,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24554,
                        "src": "1936:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      "id": 24702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1936:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$_t_contract$_ERC721_$24144_$returns$__$bound_to$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$",
                        "typeString": "function (contract ERC721[] storage pointer,contract ERC721)"
                      }
                    },
                    "id": 24704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1936:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24705,
                  "nodeType": "ExpressionStatement",
                  "src": "1936:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24709,
                        "name": "collection2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24541,
                        "src": "1994:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24522",
                          "typeString": "contract TestNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestNFT_$24522",
                          "typeString": "contract TestNFT"
                        }
                      ],
                      "expression": {
                        "id": 24706,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24554,
                        "src": "1976:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      "id": 24708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1976:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$_t_contract$_ERC721_$24144_$returns$__$bound_to$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$",
                        "typeString": "function (contract ERC721[] storage pointer,contract ERC721)"
                      }
                    },
                    "id": 24710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1976:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24711,
                  "nodeType": "ExpressionStatement",
                  "src": "1976:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24715,
                        "name": "collection1_id1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24526,
                        "src": "2029:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24712,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24557,
                        "src": "2017:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 24714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2017:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 24716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2017:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24717,
                  "nodeType": "ExpressionStatement",
                  "src": "2017:28:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24721,
                        "name": "collection1_id2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24528,
                        "src": "2067:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24718,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24557,
                        "src": "2055:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 24720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2055:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 24722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2055:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24723,
                  "nodeType": "ExpressionStatement",
                  "src": "2055:28:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24727,
                        "name": "collection2_id1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24530,
                        "src": "2105:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24724,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24557,
                        "src": "2093:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 24726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2093:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 24728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2093:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24729,
                  "nodeType": "ExpressionStatement",
                  "src": "2093:28:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24733,
                        "name": "collection2_id2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24532,
                        "src": "2143:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24730,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24557,
                        "src": "2131:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 24732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2131:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 24734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2131:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24735,
                  "nodeType": "ExpressionStatement",
                  "src": "2131:28:10"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 24737,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1181:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:2:10"
            },
            "returnParameters": {
              "id": 24577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1196:0:10"
            },
            "scope": 25031,
            "src": "1172:994:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24867,
              "nodeType": "Block",
              "src": "2208:895:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24743,
                            "name": "collection1_id1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24526,
                            "src": "2247:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 24741,
                            "name": "collection1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24538,
                            "src": "2227:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestNFT_$24522",
                              "typeString": "contract TestNFT"
                            }
                          },
                          "id": 24742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23669,
                          "src": "2227:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 24744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2227:36:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 24747,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2273:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractronTest_$25031",
                              "typeString": "contract FractronTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractronTest_$25031",
                              "typeString": "contract FractronTest"
                            }
                          ],
                          "id": 24746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2265:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24745,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2265:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2265:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24740,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "2218:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 24749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2218:61:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24750,
                  "nodeType": "ExpressionStatement",
                  "src": "2218:61:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 24754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2306:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2312:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 24756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2318:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2325:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 24751,
                        "name": "hevm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24547,
                        "src": "2290:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3175",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2708,
                      "src": "2290:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 24758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2290:40:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24759,
                  "nodeType": "ExpressionStatement",
                  "src": "2290:40:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 24763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2362:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 24762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2354:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24761,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2354:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2354:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 24767,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2374:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractronTest_$25031",
                              "typeString": "contract FractronTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractronTest_$25031",
                              "typeString": "contract FractronTest"
                            }
                          ],
                          "id": 24766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2366:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24765,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2366:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2366:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 24769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2381:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 24760,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24575,
                      "src": "2345:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 24770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2345:46:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24771,
                  "nodeType": "EmitStatement",
                  "src": "2340:51:10"
                },
                {
                  "assignments": [
                    24773
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24773,
                      "mutability": "mutable",
                      "name": "vaultId",
                      "nameLocation": "2410:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 24867,
                      "src": "2402:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24772,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2402:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24782,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24776,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24554,
                        "src": "2448:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      {
                        "id": 24777,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24557,
                        "src": "2474:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 24778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2494:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "4672616374696f6e616c69736564204e4654",
                        "id": 24779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2517:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        "value": "Fractionalised NFT"
                      },
                      {
                        "hexValue": "46524143",
                        "id": 24780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2551:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        },
                        "value": "FRAC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        }
                      ],
                      "expression": {
                        "id": 24774,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24550,
                        "src": "2420:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24474",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 24775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "split",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24366,
                      "src": "2420:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC721[] memory,uint256[] memory,uint256,string memory,string memory) payable external returns (uint256)"
                      }
                    },
                    "id": 24781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2420:147:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2402:165:10"
                },
                {
                  "assignments": [
                    24787
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24787,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "2600:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 24867,
                      "src": "2578:27:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                        "typeString": "struct Fractron.Vault"
                      },
                      "typeName": {
                        "id": 24786,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24785,
                          "name": "Fractron.Vault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24256,
                          "src": "2578:14:10"
                        },
                        "referencedDeclaration": 24256,
                        "src": "2578:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$24256_storage_ptr",
                          "typeString": "struct Fractron.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24792,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24790,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24773,
                        "src": "2626:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24788,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24550,
                        "src": "2608:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24474",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 24789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24454,
                      "src": "2608:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Vault_$24256_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct Fractron.Vault memory)"
                      }
                    },
                    "id": 24791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2608:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                      "typeString": "struct Fractron.Vault memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2578:56:10"
                },
                {
                  "body": {
                    "id": 24847,
                    "nodeType": "Block",
                    "src": "2701:272:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 24811,
                                    "name": "nftIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24557,
                                    "src": "2771:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 24813,
                                  "indexExpression": {
                                    "id": 24812,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24794,
                                    "src": "2778:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2771:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 24806,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24787,
                                      "src": "2741:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 24807,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftContracts",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24247,
                                    "src": "2741:18:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                                      "typeString": "contract ERC721[] memory"
                                    }
                                  },
                                  "id": 24809,
                                  "indexExpression": {
                                    "id": 24808,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24794,
                                    "src": "2760:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2741:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                },
                                "id": 24810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23669,
                                "src": "2741:29:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 24814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2741:40:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 24817,
                                  "name": "fractron",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24550,
                                  "src": "2807:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Fractron_$24474",
                                    "typeString": "contract Fractron"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Fractron_$24474",
                                    "typeString": "contract Fractron"
                                  }
                                ],
                                "id": 24816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2799:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24815,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2799:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2799:17:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 24805,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 320,
                            "src": "2715:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 24819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2715:115:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24820,
                        "nodeType": "ExpressionStatement",
                        "src": "2715:115:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 24824,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24787,
                                      "src": "2861:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 24825,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftContracts",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24247,
                                    "src": "2861:18:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                                      "typeString": "contract ERC721[] memory"
                                    }
                                  },
                                  "id": 24827,
                                  "indexExpression": {
                                    "id": 24826,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24794,
                                    "src": "2880:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2861:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                ],
                                "id": 24823,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2853:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24822,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2853:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24828,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2853:30:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 24831,
                                    "name": "nftContracts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24554,
                                    "src": "2893:12:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                                      "typeString": "contract ERC721[] storage ref"
                                    }
                                  },
                                  "id": 24833,
                                  "indexExpression": {
                                    "id": 24832,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24794,
                                    "src": "2906:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2893:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                ],
                                "id": 24830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2885:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24829,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2885:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2885:24:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 24821,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 320,
                            "src": "2844:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 24835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2844:66:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24836,
                        "nodeType": "ExpressionStatement",
                        "src": "2844:66:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 24838,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24787,
                                  "src": "2933:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                    "typeString": "struct Fractron.Vault memory"
                                  }
                                },
                                "id": 24839,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenIds",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24250,
                                "src": "2933:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 24841,
                              "indexExpression": {
                                "id": 24840,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24794,
                                "src": "2948:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2933:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 24842,
                                "name": "nftIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24557,
                                "src": "2952:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 24844,
                              "indexExpression": {
                                "id": 24843,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24794,
                                "src": "2959:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2952:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 24837,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 514,
                            "src": "2924:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 24845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2924:38:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24846,
                        "nodeType": "ExpressionStatement",
                        "src": "2924:38:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24797,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24794,
                      "src": "2665:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 24798,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24787,
                          "src": "2669:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24799,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftContracts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24247,
                        "src": "2669:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                          "typeString": "contract ERC721[] memory"
                        }
                      },
                      "id": 24800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2669:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2665:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24848,
                  "initializationExpression": {
                    "assignments": [
                      24794
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24794,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2658:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 24848,
                        "src": "2650:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24793,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2650:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24796,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2662:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2650:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2696:3:10",
                      "subExpression": {
                        "id": 24802,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24794,
                        "src": "2696:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24804,
                    "nodeType": "ExpressionStatement",
                    "src": "2696:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "2645:328:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24850,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24787,
                          "src": "2992:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24851,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24252,
                        "src": "2992:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 24852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3011:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 24849,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2983:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2983:38:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24854,
                  "nodeType": "ExpressionStatement",
                  "src": "2983:38:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 24861,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3078:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FractronTest_$25031",
                                  "typeString": "contract FractronTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FractronTest_$25031",
                                  "typeString": "contract FractronTest"
                                }
                              ],
                              "id": 24860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3070:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24859,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3070:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3070:13:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 24856,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24787,
                              "src": "3040:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                "typeString": "struct Fractron.Vault memory"
                              }
                            },
                            "id": 24857,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24255,
                            "src": "3040:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTShare_$24237",
                              "typeString": "contract NFTShare"
                            }
                          },
                          "id": 24858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23243,
                          "src": "3040:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 24863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3040:44:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 24864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3086:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 24855,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3031:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3031:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24866,
                  "nodeType": "ExpressionStatement",
                  "src": "3031:65:10"
                }
              ]
            },
            "functionSelector": "085d70ea",
            "id": 24868,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCanSplitToken",
            "nameLocation": "2181:17:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2198:2:10"
            },
            "returnParameters": {
              "id": 24739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2208:0:10"
            },
            "scope": 25031,
            "src": "2172:931:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25029,
              "nodeType": "Block",
              "src": "3160:1087:10",
              "statements": [
                {
                  "assignments": [
                    24872
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24872,
                      "mutability": "mutable",
                      "name": "vaultId",
                      "nameLocation": "3178:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 25029,
                      "src": "3170:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24871,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3170:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24881,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24875,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24554,
                        "src": "3216:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      {
                        "id": 24876,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24557,
                        "src": "3242:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 24877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3262:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "4672616374696f6e616c69736564204e4654",
                        "id": 24878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3285:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        "value": "Fractionalised NFT"
                      },
                      {
                        "hexValue": "46524143",
                        "id": 24879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3319:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        },
                        "value": "FRAC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        }
                      ],
                      "expression": {
                        "id": 24873,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24550,
                        "src": "3188:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24474",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 24874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "split",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24366,
                      "src": "3188:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC721[] memory,uint256[] memory,uint256,string memory,string memory) payable external returns (uint256)"
                      }
                    },
                    "id": 24880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3188:147:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3170:165:10"
                },
                {
                  "assignments": [
                    24886
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24886,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "3368:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 25029,
                      "src": "3346:27:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                        "typeString": "struct Fractron.Vault"
                      },
                      "typeName": {
                        "id": 24885,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24884,
                          "name": "Fractron.Vault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24256,
                          "src": "3346:14:10"
                        },
                        "referencedDeclaration": 24256,
                        "src": "3346:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$24256_storage_ptr",
                          "typeString": "struct Fractron.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24891,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24889,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24872,
                        "src": "3394:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24887,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24550,
                        "src": "3376:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24474",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 24888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24454,
                      "src": "3376:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Vault_$24256_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct Fractron.Vault memory)"
                      }
                    },
                    "id": 24890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3376:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                      "typeString": "struct Fractron.Vault memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3346:56:10"
                },
                {
                  "body": {
                    "id": 24921,
                    "nodeType": "Block",
                    "src": "3468:148:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 24910,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24886,
                                      "src": "3538:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 24911,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenIds",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24250,
                                    "src": "3538:14:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 24913,
                                  "indexExpression": {
                                    "id": 24912,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24893,
                                    "src": "3553:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3538:17:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 24905,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24886,
                                      "src": "3508:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 24906,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftContracts",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24247,
                                    "src": "3508:18:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                                      "typeString": "contract ERC721[] memory"
                                    }
                                  },
                                  "id": 24908,
                                  "indexExpression": {
                                    "id": 24907,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24893,
                                    "src": "3527:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3508:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                },
                                "id": 24909,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23669,
                                "src": "3508:29:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 24914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3508:48:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 24917,
                                  "name": "fractron",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24550,
                                  "src": "3582:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Fractron_$24474",
                                    "typeString": "contract Fractron"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Fractron_$24474",
                                    "typeString": "contract Fractron"
                                  }
                                ],
                                "id": 24916,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3574:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24915,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3574:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24918,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3574:17:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 24904,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 320,
                            "src": "3482:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 24919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3482:123:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24920,
                        "nodeType": "ExpressionStatement",
                        "src": "3482:123:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24896,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24893,
                      "src": "3432:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 24897,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24886,
                          "src": "3436:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24898,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftContracts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24247,
                        "src": "3436:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                          "typeString": "contract ERC721[] memory"
                        }
                      },
                      "id": 24899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3436:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3432:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24922,
                  "initializationExpression": {
                    "assignments": [
                      24893
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24893,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3425:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 24922,
                        "src": "3417:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24892,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3417:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24895,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3429:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3417:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3463:3:10",
                      "subExpression": {
                        "id": 24901,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24893,
                        "src": "3463:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24903,
                    "nodeType": "ExpressionStatement",
                    "src": "3463:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "3412:204:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 24929,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3672:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FractronTest_$25031",
                                  "typeString": "contract FractronTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FractronTest_$25031",
                                  "typeString": "contract FractronTest"
                                }
                              ],
                              "id": 24928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3664:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24927,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3664:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3664:13:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 24924,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24886,
                              "src": "3634:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                "typeString": "struct Fractron.Vault memory"
                              }
                            },
                            "id": 24925,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24255,
                            "src": "3634:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTShare_$24237",
                              "typeString": "contract NFTShare"
                            }
                          },
                          "id": 24926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23243,
                          "src": "3634:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 24931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3634:44:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 24932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3680:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 24923,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3625:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3625:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24934,
                  "nodeType": "ExpressionStatement",
                  "src": "3625:65:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24942,
                            "name": "fractron",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24550,
                            "src": "3737:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fractron_$24474",
                              "typeString": "contract Fractron"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Fractron_$24474",
                              "typeString": "contract Fractron"
                            }
                          ],
                          "id": 24941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3729:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24940,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3729:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3729:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 24946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3753:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 24945,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3753:7:10",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 24944,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3748:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3748:13:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 24948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "3748:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 24935,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24886,
                          "src": "3701:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24938,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24255,
                        "src": "3701:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24237",
                          "typeString": "contract NFTShare"
                        }
                      },
                      "id": 24939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23317,
                      "src": "3701:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 24949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3701:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24950,
                  "nodeType": "ExpressionStatement",
                  "src": "3701:65:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24954,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24872,
                        "src": "3790:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24951,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24550,
                        "src": "3776:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24474",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 24953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "join",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24441,
                      "src": "3776:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 24955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3776:22:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24956,
                  "nodeType": "ExpressionStatement",
                  "src": "3776:22:10"
                },
                {
                  "body": {
                    "id": 24986,
                    "nodeType": "Block",
                    "src": "3865:144:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 24975,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24886,
                                      "src": "3935:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 24976,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenIds",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24250,
                                    "src": "3935:14:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 24978,
                                  "indexExpression": {
                                    "id": 24977,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24958,
                                    "src": "3950:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3935:17:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 24970,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24886,
                                      "src": "3905:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 24971,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftContracts",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24247,
                                    "src": "3905:18:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                                      "typeString": "contract ERC721[] memory"
                                    }
                                  },
                                  "id": 24973,
                                  "indexExpression": {
                                    "id": 24972,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24958,
                                    "src": "3924:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3905:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                },
                                "id": 24974,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23669,
                                "src": "3905:29:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 24979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3905:48:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 24982,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3979:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FractronTest_$25031",
                                    "typeString": "contract FractronTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_FractronTest_$25031",
                                    "typeString": "contract FractronTest"
                                  }
                                ],
                                "id": 24981,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3971:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24980,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3971:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3971:13:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 24969,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 320,
                            "src": "3879:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 24984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3879:119:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24985,
                        "nodeType": "ExpressionStatement",
                        "src": "3879:119:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24961,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24958,
                      "src": "3829:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 24962,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24886,
                          "src": "3833:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24963,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftContracts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24247,
                        "src": "3833:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                          "typeString": "contract ERC721[] memory"
                        }
                      },
                      "id": 24964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3833:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3829:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24987,
                  "initializationExpression": {
                    "assignments": [
                      24958
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24958,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3822:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 24987,
                        "src": "3814:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24957,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3814:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24960,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3826:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3814:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3860:3:10",
                      "subExpression": {
                        "id": 24966,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24958,
                        "src": "3860:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24968,
                    "nodeType": "ExpressionStatement",
                    "src": "3860:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "3809:200:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 24994,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4065:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FractronTest_$25031",
                                  "typeString": "contract FractronTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FractronTest_$25031",
                                  "typeString": "contract FractronTest"
                                }
                              ],
                              "id": 24993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4057:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24992,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4057:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4057:13:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 24989,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24886,
                              "src": "4027:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                "typeString": "struct Fractron.Vault memory"
                              }
                            },
                            "id": 24990,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24255,
                            "src": "4027:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTShare_$24237",
                              "typeString": "contract NFTShare"
                            }
                          },
                          "id": 24991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23243,
                          "src": "4027:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 24996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4027:44:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 24997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4073:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 24988,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4018:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4018:57:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24999,
                  "nodeType": "ExpressionStatement",
                  "src": "4018:57:10"
                },
                {
                  "expression": {
                    "id": 25005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25000,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24886,
                      "src": "4086:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                        "typeString": "struct Fractron.Vault memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25003,
                          "name": "vaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24872,
                          "src": "4112:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 25001,
                          "name": "fractron",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24550,
                          "src": "4094:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Fractron_$24474",
                            "typeString": "contract Fractron"
                          }
                        },
                        "id": 25002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getVault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24454,
                        "src": "4094:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Vault_$24256_memory_ptr_$",
                          "typeString": "function (uint256) view external returns (struct Fractron.Vault memory)"
                        }
                      },
                      "id": 25004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4094:26:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                        "typeString": "struct Fractron.Vault memory"
                      }
                    },
                    "src": "4086:34:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                      "typeString": "struct Fractron.Vault memory"
                    }
                  },
                  "id": 25006,
                  "nodeType": "ExpressionStatement",
                  "src": "4086:34:10"
                },
                {
                  "body": {
                    "id": 25027,
                    "nodeType": "Block",
                    "src": "4186:55:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 25020,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24886,
                                  "src": "4209:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                    "typeString": "struct Fractron.Vault memory"
                                  }
                                },
                                "id": 25021,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenIds",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24250,
                                "src": "4209:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 25023,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 25022,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4224:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4209:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 25024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4228:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25019,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 514,
                            "src": "4200:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 25025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4200:30:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25026,
                        "nodeType": "ExpressionStatement",
                        "src": "4200:30:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25011,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25008,
                      "src": "4150:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 25012,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24886,
                          "src": "4154:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 25013,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftContracts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24247,
                        "src": "4154:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                          "typeString": "contract ERC721[] memory"
                        }
                      },
                      "id": 25014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4154:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4150:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25028,
                  "initializationExpression": {
                    "assignments": [
                      25008
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 25008,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4143:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 25028,
                        "src": "4135:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25007,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4135:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 25010,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 25009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4147:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4135:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 25017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4181:3:10",
                      "subExpression": {
                        "id": 25016,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25008,
                        "src": "4181:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25018,
                    "nodeType": "ExpressionStatement",
                    "src": "4181:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "4130:111:10"
                }
              ]
            },
            "functionSelector": "5ddea6a8",
            "id": 25030,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTotalSupplyOwnerCanJoinToken",
            "nameLocation": "3118:32:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3150:2:10"
            },
            "returnParameters": {
              "id": 24870,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3160:0:10"
            },
            "scope": 25031,
            "src": "3109:1138:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 25032,
        "src": "611:3638:10",
        "usedErrors": []
      }
    ],
    "src": "32:4218:10"
  }
}