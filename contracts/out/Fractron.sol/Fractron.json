{
  "abi": [
    {
      "inputs": [],
      "name": "InvalidVault",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VaultNotFound",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721[]",
              "name": "nftContracts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct Fractron.Vault",
          "name": "vault",
          "type": "tuple"
        }
      ],
      "name": "VaultCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721[]",
              "name": "nftContracts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct Fractron.Vault",
          "name": "vault",
          "type": "tuple"
        }
      ],
      "name": "VaultDestroyed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getAllVaults",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721[]",
              "name": "nftContracts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            }
          ],
          "internalType": "struct Fractron.Vault[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "getVault",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721[]",
              "name": "nftContracts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            }
          ],
          "internalType": "struct Fractron.Vault",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "join",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC721[]",
          "name": "nftContracts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "split",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vaultById",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenSupply",
          "type": "uint256"
        },
        {
          "internalType": "contract NFTShare",
          "name": "tokenContract",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805534801561001457600080fd5b506120cb806100246000396000f3fe6080604052600436106200005c5760003560e01c8063049878f31462000061578063150b7a02146200007a57806332f19a5c14620000b95780639403b634146200011b57806397331bf9146200014f5780639e9153c21462000176575b600080fd5b620000786200007236600462000ada565b6200019c565b005b6200009b6200008b36600462000b9d565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b348015620000c657600080fd5b50620000fd620000d836600462000ada565b600160205260009081526040902060028101546003909101546001600160a01b031682565b604080519283526001600160a01b03909116602083015201620000b0565b3480156200012857600080fd5b50620001406200013a36600462000ada565b6200044c565b604051620000b0919062000cdf565b3480156200015c57600080fd5b506200016762000574565b604051620000b0919062000cfb565b6200018d6200018736600462000dd3565b62000739565b604051908152602001620000b0565b60008181526001602090815260408083208151815460a094810282018501909352608081018381529093919284928491908401828280156200020857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620001e9575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156200026257602002820191906000526020600020905b8154815260200190600101908083116200024d575b5050509183525050600282015460208201526003909101546001600160a01b03908116604090920191909152606082015191925016620002b55760405163dee790fb60e01b815260040160405180910390fd5b600082815260016020526040812090620002d08282620009ea565b620002e0600183016000620009ea565b506000600282015560030180546001600160a01b03191690556060810151604080830151905163079cc67960e41b815233600482015260248101919091526001600160a01b03909116906379cc679090604401600060405180830381600087803b1580156200034e57600080fd5b505af115801562000363573d6000803e3d6000fd5b5050505060005b815151811015620004475781518051829081106200038c576200038c62000ea2565b60200260200101516001600160a01b03166323b872dd303385602001518581518110620003bd57620003bd62000ea2565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156200041857600080fd5b505af11580156200042d573d6000803e3d6000fd5b5050505080806200043e9062000eb8565b9150506200036a565b505050565b62000481604051806080016040528060608152602001606081526020016000815260200160006001600160a01b031681525090565b6000828152600160209081526040918290208251815460a093810282018401909452608081018481529093919284928491840182828015620004ed57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620004ce575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156200054757602002820191906000526020600020905b81548152602001906001019080831162000532575b5050509183525050600282015460208201526003909101546001600160a01b031660409091015292915050565b60606000805467ffffffffffffffff81111562000595576200059562000b0a565b604051908082528060200260200182016040528015620005fd57816020015b620005e9604051806080016040528060608152602001606081526020016000815260200160006001600160a01b031681525090565b815260200190600190039081620005b45790505b50905060005b60005481101562000733576000818152600160209081526040918290208251815460a0938102820184019094526080810184815290939192849284918401828280156200067a57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200065b575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015620006d457602002820191906000526020600020905b815481526020019060010190808311620006bf575b5050509183525050600282015460208201526003909101546001600160a01b0316604090910152825183908390811062000712576200071262000ea2565b602002602001018190525080806200072a9062000eb8565b91505062000603565b50919050565b60008685146200075c57604051630681d31960e51b815260040160405180910390fd5b600083838633604051620007709062000a0d565b6200077f949392919062000f32565b604051809103906000f0801580156200079c573d6000803e3d6000fd5b509050600060405180608001604052808b8b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505050908252506040805160208b810282810182019093528b82529283019290918c918c918291850190849080828437600092019190915250505090825250602081018890526001600160a01b038416604091820152519091507f9771680f0d49e7017f26213172cb8ed1e02f4d767ed3edf9cbeb20ce901284ac906200086490839062000cdf565b60405180910390a16000805481526001602090815260409091208251805184936200089492849291019062000a1b565b506020828101518051620008af926001850192019062000a85565b5060408201516002820155606090910151600390910180546001600160a01b0319166001600160a01b0390921691909117905560005b89811015620009c6578a8a8281811062000903576200090362000ea2565b90506020020160208101906200091a919062000f7d565b6001600160a01b03166323b872dd33308c8c868181106200093f576200093f62000ea2565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b1580156200099757600080fd5b505af1158015620009ac573d6000803e3d6000fd5b505050508080620009bd9062000eb8565b915050620008e5565b50600080549080620009d88362000eb8565b909155509a9950505050505050505050565b508054600082559060005260206000209081019062000a0a919062000ac3565b50565b6110f88062000f9e83390190565b82805482825590600052602060002090810192821562000a73579160200282015b8281111562000a7357825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000a3c565b5062000a8192915062000ac3565b5090565b82805482825590600052602060002090810192821562000a73579160200282015b8281111562000a7357825182559160200191906001019062000aa6565b5b8082111562000a81576000815560010162000ac4565b60006020828403121562000aed57600080fd5b5035919050565b6001600160a01b038116811462000a0a57600080fd5b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111562000b3e5762000b3e62000b0a565b604051601f8501601f19908116603f0116810190828211818310171562000b695762000b6962000b0a565b8160405280935085815286868601111562000b8357600080fd5b858560208301376000602087830101525050509392505050565b6000806000806080858703121562000bb457600080fd5b843562000bc18162000af4565b9350602085013562000bd38162000af4565b925060408501359150606085013567ffffffffffffffff81111562000bf757600080fd5b8501601f8101871362000c0957600080fd5b62000c1a8782356020840162000b20565b91505092959194509250565b8051608080845281519084018190526000916020919082019060a0860190845b8181101562000c6d5783516001600160a01b03168352928401929184019160010162000c46565b50508483015186820387850152805180835290840192506000918401905b8083101562000cad578351825292840192600192909201919084019062000c8b565b50604086015160408801526060860151935062000cd560608801856001600160a01b03169052565b9695505050505050565b60208152600062000cf4602083018462000c26565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000d5457603f1988860301845262000d4185835162000c26565b9450928501929085019060010162000d22565b5092979650505050505050565b60008083601f84011262000d7457600080fd5b50813567ffffffffffffffff81111562000d8d57600080fd5b6020830191508360208260051b850101111562000da957600080fd5b9250929050565b600082601f83011262000dc257600080fd5b62000cf48383356020850162000b20565b600080600080600080600060a0888a03121562000def57600080fd5b873567ffffffffffffffff8082111562000e0857600080fd5b62000e168b838c0162000d61565b909950975060208a013591508082111562000e3057600080fd5b62000e3e8b838c0162000d61565b909750955060408a0135945060608a013591508082111562000e5f57600080fd5b62000e6d8b838c0162000db0565b935060808a013591508082111562000e8457600080fd5b5062000e938a828b0162000db0565b91505092959891949750929550565b634e487b7160e01b600052603260045260246000fd5b600060001982141562000edb57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000815180845260005b8181101562000f0a5760208185018101518683018201520162000eec565b8181111562000f1d576000602083870101525b50601f01601f19169290920160200192915050565b60808152600062000f47608083018762000ee2565b828103602084015262000f5b818762000ee2565b604084019590955250506001600160a01b039190911660609091015292915050565b60006020828403121562000f9057600080fd5b813562000cf48162000af456fe60e0604052604051620010f8380380620010f8833981016040819052620000269162000308565b8383601282600090805190602001906200004292919062000195565b5081516200005890600190602085019062000195565b5060ff81166080524660a0526200006e6200008c565b60c052506200008291508290508362000128565b50505050620004a5565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000c09190620003da565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546200013c91906200047e565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b828054620001a3906200039d565b90600052602060002090601f016020900481019282620001c7576000855562000212565b82601f10620001e257805160ff191683800117855562000212565b8280016001018555821562000212579182015b8281111562000212578251825591602001919060010190620001f5565b506200022092915062000224565b5090565b5b8082111562000220576000815560010162000225565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200026357600080fd5b81516001600160401b03808211156200028057620002806200023b565b604051601f8301601f19908116603f01168101908282118183101715620002ab57620002ab6200023b565b81604052838152602092508683858801011115620002c857600080fd5b600091505b83821015620002ec5785820183015181830184015290820190620002cd565b83821115620002fe5760008385830101525b9695505050505050565b600080600080608085870312156200031f57600080fd5b84516001600160401b03808211156200033757600080fd5b620003458883890162000251565b955060208701519150808211156200035c57600080fd5b506200036b8782880162000251565b60408701516060880151919550935090506001600160a01b03811681146200039257600080fd5b939692955090935050565b600181811c90821680620003b257607f821691505b60208210811415620003d457634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c915080831680620003f757607f831692505b60208084108214156200041857634e487b7160e01b86526022600452602486fd5b8180156200042f5760018114620004415762000470565b60ff1986168952848901965062000470565b60008a81526020902060005b86811015620004685781548b8201529085019083016200044d565b505084890196505b509498975050505050505050565b60008219821115620004a057634e487b7160e01b600052601160045260246000fd5b500190565b60805160a05160c051610c23620004d560003960006104e2015260006104ad015260006101780152610c236000f3fe6080604052600436106100c25760003560e01c806370a082311161007f57806395d89b411161005957806395d89b4114610230578063a9059cbb14610245578063d505accf14610265578063dd62ed3e1461028557600080fd5b806370a08231146101c157806379cc6790146101ee5780637ecebe001461020357600080fd5b806306fdde03146100c7578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610146578063313ce567146101665780633644e515146101ac575b600080fd5b3480156100d357600080fd5b506100dc6102bd565b6040516100e99190610952565b60405180910390f35b3480156100fe57600080fd5b5061011261010d3660046109c3565b61034b565b60405190151581526020016100e9565b34801561012e57600080fd5b5061013860025481565b6040519081526020016100e9565b34801561015257600080fd5b506101126101613660046109ed565b6103b7565b34801561017257600080fd5b5061019a7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100e9565b3480156101b857600080fd5b506101386104a9565b3480156101cd57600080fd5b506101386101dc366004610a29565b60036020526000908152604090205481565b6102016101fc3660046109c3565b610504565b005b34801561020f57600080fd5b5061013861021e366004610a29565b60056020526000908152604090205481565b34801561023c57600080fd5b506100dc61056f565b34801561025157600080fd5b506101126102603660046109c3565b61057c565b34801561027157600080fd5b50610201610280366004610a4b565b6105f4565b34801561029157600080fd5b506101386102a0366004610abe565b600460209081526000928352604080842090915290825290205481565b600080546102ca90610af1565b80601f01602080910402602001604051908101604052809291908181526020018280546102f690610af1565b80156103435780601f1061031857610100808354040283529160200191610343565b820191906000526020600020905b81548152906001019060200180831161032657829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103a69086815260200190565b60405180910390a350600192915050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610413576103ee8382610b2c565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b0385166000908152600360205260408120805485929061043b908490610b2c565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104969087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104df576104da61083d565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b038216600090815260046020908152604080832033845290915290205460001981146105605761053b8282610b2c565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b61056a83836108d7565b505050565b600180546102ca90610af1565b3360009081526003602052604081208054839190839061059d908490610b2c565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103a69086815260200190565b428410156106495760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b600060016106556104a9565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610761573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906107975750876001600160a01b0316816001600160a01b0316145b6107d45760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610640565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161086f9190610b51565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b038216600090815260036020526040812080548392906108ff908490610b2c565b90915550506002805482900390556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b8181101561097f57858101830151858201604001528201610963565b81811115610991576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146109be57600080fd5b919050565b600080604083850312156109d657600080fd5b6109df836109a7565b946020939093013593505050565b600080600060608486031215610a0257600080fd5b610a0b846109a7565b9250610a19602085016109a7565b9150604084013590509250925092565b600060208284031215610a3b57600080fd5b610a44826109a7565b9392505050565b600080600080600080600060e0888a031215610a6657600080fd5b610a6f886109a7565b9650610a7d602089016109a7565b95506040880135945060608801359350608088013560ff81168114610aa157600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610ad157600080fd5b610ada836109a7565b9150610ae8602084016109a7565b90509250929050565b600181811c90821680610b0557607f821691505b60208210811415610b2657634e487b7160e01b600052602260045260246000fd5b50919050565b600082821015610b4c57634e487b7160e01b600052601160045260246000fd5b500390565b600080835481600182811c915080831680610b6d57607f831692505b6020808410821415610b8d57634e487b7160e01b86526022600452602486fd5b818015610ba15760018114610bb257610bdf565b60ff19861689528489019650610bdf565b60008a81526020902060005b86811015610bd75781548b820152908501908301610bbe565b505084890196505b50949897505050505050505056fea264697066735822122012feec7b83646784b3c9ae5eab6c6e321ef45e427fd605c26c2470450b9bfcce64736f6c634300080a0033a264697066735822122056c43dc72d6cf80d32f0f3918d02a16f9b46df3edcd28524964e3415fc06ec6064736f6c634300080a0033",
    "sourceMap": "879:2945:9:-:0;;;1688:1;1654:35;;879:2945;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106200005c5760003560e01c8063049878f31462000061578063150b7a02146200007a57806332f19a5c14620000b95780639403b634146200011b57806397331bf9146200014f5780639e9153c21462000176575b600080fd5b620000786200007236600462000ada565b6200019c565b005b6200009b6200008b36600462000b9d565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b348015620000c657600080fd5b50620000fd620000d836600462000ada565b600160205260009081526040902060028101546003909101546001600160a01b031682565b604080519283526001600160a01b03909116602083015201620000b0565b3480156200012857600080fd5b50620001406200013a36600462000ada565b6200044c565b604051620000b0919062000cdf565b3480156200015c57600080fd5b506200016762000574565b604051620000b0919062000cfb565b6200018d6200018736600462000dd3565b62000739565b604051908152602001620000b0565b60008181526001602090815260408083208151815460a094810282018501909352608081018381529093919284928491908401828280156200020857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620001e9575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156200026257602002820191906000526020600020905b8154815260200190600101908083116200024d575b5050509183525050600282015460208201526003909101546001600160a01b03908116604090920191909152606082015191925016620002b55760405163dee790fb60e01b815260040160405180910390fd5b600082815260016020526040812090620002d08282620009ea565b620002e0600183016000620009ea565b506000600282015560030180546001600160a01b03191690556060810151604080830151905163079cc67960e41b815233600482015260248101919091526001600160a01b03909116906379cc679090604401600060405180830381600087803b1580156200034e57600080fd5b505af115801562000363573d6000803e3d6000fd5b5050505060005b815151811015620004475781518051829081106200038c576200038c62000ea2565b60200260200101516001600160a01b03166323b872dd303385602001518581518110620003bd57620003bd62000ea2565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156200041857600080fd5b505af11580156200042d573d6000803e3d6000fd5b5050505080806200043e9062000eb8565b9150506200036a565b505050565b62000481604051806080016040528060608152602001606081526020016000815260200160006001600160a01b031681525090565b6000828152600160209081526040918290208251815460a093810282018401909452608081018481529093919284928491840182828015620004ed57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620004ce575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156200054757602002820191906000526020600020905b81548152602001906001019080831162000532575b5050509183525050600282015460208201526003909101546001600160a01b031660409091015292915050565b60606000805467ffffffffffffffff81111562000595576200059562000b0a565b604051908082528060200260200182016040528015620005fd57816020015b620005e9604051806080016040528060608152602001606081526020016000815260200160006001600160a01b031681525090565b815260200190600190039081620005b45790505b50905060005b60005481101562000733576000818152600160209081526040918290208251815460a0938102820184019094526080810184815290939192849284918401828280156200067a57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200065b575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015620006d457602002820191906000526020600020905b815481526020019060010190808311620006bf575b5050509183525050600282015460208201526003909101546001600160a01b0316604090910152825183908390811062000712576200071262000ea2565b602002602001018190525080806200072a9062000eb8565b91505062000603565b50919050565b60008685146200075c57604051630681d31960e51b815260040160405180910390fd5b600083838633604051620007709062000a0d565b6200077f949392919062000f32565b604051809103906000f0801580156200079c573d6000803e3d6000fd5b509050600060405180608001604052808b8b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505050908252506040805160208b810282810182019093528b82529283019290918c918c918291850190849080828437600092019190915250505090825250602081018890526001600160a01b038416604091820152519091507f9771680f0d49e7017f26213172cb8ed1e02f4d767ed3edf9cbeb20ce901284ac906200086490839062000cdf565b60405180910390a16000805481526001602090815260409091208251805184936200089492849291019062000a1b565b506020828101518051620008af926001850192019062000a85565b5060408201516002820155606090910151600390910180546001600160a01b0319166001600160a01b0390921691909117905560005b89811015620009c6578a8a8281811062000903576200090362000ea2565b90506020020160208101906200091a919062000f7d565b6001600160a01b03166323b872dd33308c8c868181106200093f576200093f62000ea2565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b1580156200099757600080fd5b505af1158015620009ac573d6000803e3d6000fd5b505050508080620009bd9062000eb8565b915050620008e5565b50600080549080620009d88362000eb8565b909155509a9950505050505050505050565b508054600082559060005260206000209081019062000a0a919062000ac3565b50565b6110f88062000f9e83390190565b82805482825590600052602060002090810192821562000a73579160200282015b8281111562000a7357825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000a3c565b5062000a8192915062000ac3565b5090565b82805482825590600052602060002090810192821562000a73579160200282015b8281111562000a7357825182559160200191906001019062000aa6565b5b8082111562000a81576000815560010162000ac4565b60006020828403121562000aed57600080fd5b5035919050565b6001600160a01b038116811462000a0a57600080fd5b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111562000b3e5762000b3e62000b0a565b604051601f8501601f19908116603f0116810190828211818310171562000b695762000b6962000b0a565b8160405280935085815286868601111562000b8357600080fd5b858560208301376000602087830101525050509392505050565b6000806000806080858703121562000bb457600080fd5b843562000bc18162000af4565b9350602085013562000bd38162000af4565b925060408501359150606085013567ffffffffffffffff81111562000bf757600080fd5b8501601f8101871362000c0957600080fd5b62000c1a8782356020840162000b20565b91505092959194509250565b8051608080845281519084018190526000916020919082019060a0860190845b8181101562000c6d5783516001600160a01b03168352928401929184019160010162000c46565b50508483015186820387850152805180835290840192506000918401905b8083101562000cad578351825292840192600192909201919084019062000c8b565b50604086015160408801526060860151935062000cd560608801856001600160a01b03169052565b9695505050505050565b60208152600062000cf4602083018462000c26565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562000d5457603f1988860301845262000d4185835162000c26565b9450928501929085019060010162000d22565b5092979650505050505050565b60008083601f84011262000d7457600080fd5b50813567ffffffffffffffff81111562000d8d57600080fd5b6020830191508360208260051b850101111562000da957600080fd5b9250929050565b600082601f83011262000dc257600080fd5b62000cf48383356020850162000b20565b600080600080600080600060a0888a03121562000def57600080fd5b873567ffffffffffffffff8082111562000e0857600080fd5b62000e168b838c0162000d61565b909950975060208a013591508082111562000e3057600080fd5b62000e3e8b838c0162000d61565b909750955060408a0135945060608a013591508082111562000e5f57600080fd5b62000e6d8b838c0162000db0565b935060808a013591508082111562000e8457600080fd5b5062000e938a828b0162000db0565b91505092959891949750929550565b634e487b7160e01b600052603260045260246000fd5b600060001982141562000edb57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000815180845260005b8181101562000f0a5760208185018101518683018201520162000eec565b8181111562000f1d576000602083870101525b50601f01601f19169290920160200192915050565b60808152600062000f47608083018762000ee2565b828103602084015262000f5b818762000ee2565b604084019590955250506001600160a01b039190911660609091015292915050565b60006020828403121562000f9057600080fd5b813562000cf48162000af456fe60e0604052604051620010f8380380620010f8833981016040819052620000269162000308565b8383601282600090805190602001906200004292919062000195565b5081516200005890600190602085019062000195565b5060ff81166080524660a0526200006e6200008c565b60c052506200008291508290508362000128565b50505050620004a5565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000c09190620003da565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546200013c91906200047e565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b828054620001a3906200039d565b90600052602060002090601f016020900481019282620001c7576000855562000212565b82601f10620001e257805160ff191683800117855562000212565b8280016001018555821562000212579182015b8281111562000212578251825591602001919060010190620001f5565b506200022092915062000224565b5090565b5b8082111562000220576000815560010162000225565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200026357600080fd5b81516001600160401b03808211156200028057620002806200023b565b604051601f8301601f19908116603f01168101908282118183101715620002ab57620002ab6200023b565b81604052838152602092508683858801011115620002c857600080fd5b600091505b83821015620002ec5785820183015181830184015290820190620002cd565b83821115620002fe5760008385830101525b9695505050505050565b600080600080608085870312156200031f57600080fd5b84516001600160401b03808211156200033757600080fd5b620003458883890162000251565b955060208701519150808211156200035c57600080fd5b506200036b8782880162000251565b60408701516060880151919550935090506001600160a01b03811681146200039257600080fd5b939692955090935050565b600181811c90821680620003b257607f821691505b60208210811415620003d457634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c915080831680620003f757607f831692505b60208084108214156200041857634e487b7160e01b86526022600452602486fd5b8180156200042f5760018114620004415762000470565b60ff1986168952848901965062000470565b60008a81526020902060005b86811015620004685781548b8201529085019083016200044d565b505084890196505b509498975050505050505050565b60008219821115620004a057634e487b7160e01b600052601160045260246000fd5b500190565b60805160a05160c051610c23620004d560003960006104e2015260006104ad015260006101780152610c236000f3fe6080604052600436106100c25760003560e01c806370a082311161007f57806395d89b411161005957806395d89b4114610230578063a9059cbb14610245578063d505accf14610265578063dd62ed3e1461028557600080fd5b806370a08231146101c157806379cc6790146101ee5780637ecebe001461020357600080fd5b806306fdde03146100c7578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610146578063313ce567146101665780633644e515146101ac575b600080fd5b3480156100d357600080fd5b506100dc6102bd565b6040516100e99190610952565b60405180910390f35b3480156100fe57600080fd5b5061011261010d3660046109c3565b61034b565b60405190151581526020016100e9565b34801561012e57600080fd5b5061013860025481565b6040519081526020016100e9565b34801561015257600080fd5b506101126101613660046109ed565b6103b7565b34801561017257600080fd5b5061019a7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100e9565b3480156101b857600080fd5b506101386104a9565b3480156101cd57600080fd5b506101386101dc366004610a29565b60036020526000908152604090205481565b6102016101fc3660046109c3565b610504565b005b34801561020f57600080fd5b5061013861021e366004610a29565b60056020526000908152604090205481565b34801561023c57600080fd5b506100dc61056f565b34801561025157600080fd5b506101126102603660046109c3565b61057c565b34801561027157600080fd5b50610201610280366004610a4b565b6105f4565b34801561029157600080fd5b506101386102a0366004610abe565b600460209081526000928352604080842090915290825290205481565b600080546102ca90610af1565b80601f01602080910402602001604051908101604052809291908181526020018280546102f690610af1565b80156103435780601f1061031857610100808354040283529160200191610343565b820191906000526020600020905b81548152906001019060200180831161032657829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103a69086815260200190565b60405180910390a350600192915050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610413576103ee8382610b2c565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b0385166000908152600360205260408120805485929061043b908490610b2c565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104969087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104df576104da61083d565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b038216600090815260046020908152604080832033845290915290205460001981146105605761053b8282610b2c565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b61056a83836108d7565b505050565b600180546102ca90610af1565b3360009081526003602052604081208054839190839061059d908490610b2c565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103a69086815260200190565b428410156106495760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b600060016106556104a9565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610761573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906107975750876001600160a01b0316816001600160a01b0316145b6107d45760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610640565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161086f9190610b51565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b038216600090815260036020526040812080548392906108ff908490610b2c565b90915550506002805482900390556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b8181101561097f57858101830151858201604001528201610963565b81811115610991576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146109be57600080fd5b919050565b600080604083850312156109d657600080fd5b6109df836109a7565b946020939093013593505050565b600080600060608486031215610a0257600080fd5b610a0b846109a7565b9250610a19602085016109a7565b9150604084013590509250925092565b600060208284031215610a3b57600080fd5b610a44826109a7565b9392505050565b600080600080600080600060e0888a031215610a6657600080fd5b610a6f886109a7565b9650610a7d602089016109a7565b95506040880135945060608801359350608088013560ff81168114610aa157600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610ad157600080fd5b610ada836109a7565b9150610ae8602084016109a7565b90509250929050565b600181811c90821680610b0557607f821691505b60208210811415610b2657634e487b7160e01b600052602260045260246000fd5b50919050565b600082821015610b4c57634e487b7160e01b600052601160045260246000fd5b500390565b600080835481600182811c915080831680610b6d57607f831692505b6020808410821415610b8d57634e487b7160e01b86526022600452602486fd5b818015610ba15760018114610bb257610bdf565b60ff19861689528489019650610bdf565b60008a81526020902060005b86811015610bd75781548b820152908501908301610bbe565b505084890196505b50949897505050505050505056fea264697066735822122012feec7b83646784b3c9ae5eab6c6e321ef45e427fd605c26c2470450b9bfcce64736f6c634300080a0033a264697066735822122056c43dc72d6cf80d32f0f3918d02a16f9b46df3edcd28524964e3415fc06ec6064736f6c634300080a0033",
    "sourceMap": "879:2945:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2650:521;;;;;;:::i;:::-;;:::i;:::-;;3631:191;;;;;;:::i;:::-;-1:-1:-1;;;3631:191:9;;;;;;;;;;-1:-1:-1;;;;;;2064:33:11;;;2046:52;;2034:2;2019:18;3631:191:9;;;;;;;;1695:42;;;;;;;;;;-1:-1:-1;1695:42:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1695:42:9;;;;;;;2420:25:11;;;-1:-1:-1;;;;;2481:32:11;;;2476:2;2461:18;;2454:60;2393:18;1695:42:9;2228:292:11;3177:112:9;;;;;;;;;;-1:-1:-1;3177:112:9;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3295:255::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1744:900::-;;;;;;:::i;:::-;;:::i;:::-;;;6954:25:11;;;6942:2;6927:18;1744:900:9;6808:177:11;2650:521:9;2706:18;2727;;;:9;:18;;;;;;;;2706:39;;;;;;;;;;;;;;;;;;;;;;;2727:18;;2706:39;;2727:18;;2706:39;;;2727:18;2706:39;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2706:39:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2706:39:9;;;-1:-1:-1;;2706:39:9;;;;;;;;;;;;;-1:-1:-1;;;;;2706:39:9;;;;;;;;;;;2768:19;;;;2706:39;;-1:-1:-1;2760:42:9;2756:70;;2811:15;;-1:-1:-1;;;2811:15:9;;;;;;;;;;;2756:70;2844:18;;;;:9;:18;;;;;;2837:25;2844:18;;2837:25;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;2837:25:9;;;;;;;;;-1:-1:-1;;;;;;2837:25:9;;;2873:19;;;;2914:17;;;;;2873:59;;-1:-1:-1;;;2873:59:9;;2902:10;2873:59;;;7164:51:11;7231:18;;;7224:34;;;;-1:-1:-1;;;;;2873:28:9;;;;;;7137:18:11;;2873:59:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2947:9;2942:223;2966:18;;:25;2962:29;;2942:223;;;3012:18;;:21;;3031:1;;3012:21;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3012:34:9;;3072:4;3095:10;3123:5;:14;;;3138:1;3123:17;;;;;;;;:::i;:::-;;;;;;;;;;;3012:142;;-1:-1:-1;;;;;;3012:142:9;;;;;;;-1:-1:-1;;;;;7659:15:11;;;3012:142:9;;;7641:34:11;7711:15;;;;7691:18;;;7684:43;7743:18;;;7736:34;7576:18;;3012:142:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2993:3;;;;;:::i;:::-;;;;2942:223;;;;2696:475;2650:521;:::o;3177:112::-;3233:12;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3233:12:9;3264:18;;;;:9;:18;;;;;;;;;3257:25;;;;;;;;;;;;;;;;;;;;;;;3264:18;;3257:25;;3264:18;;3257:25;;3264:18;3257:25;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3257:25:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3257:25:9;;;-1:-1:-1;;3257:25:9;;;;;;;;;;;;;-1:-1:-1;;;;;3257:25:9;;;;;;;3177:112;-1:-1:-1;;3177:112:9:o;3295:255::-;3340:14;3366:21;3402:14;;3390:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3390:27:9;;;;;;;;;;;;;;;;;3366:51;;3432:9;3427:94;3451:14;;3447:1;:18;3427:94;;;3498:12;;;;:9;:12;;;;;;;;;3486:24;;;;;;;;;;;;;;;;;;;;;;;3498:12;;3486:24;;3498:12;;3486:24;;3498:12;3486:24;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3486:24:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3486:24:9;;;-1:-1:-1;;3486:24:9;;;;;;;;;;;;;-1:-1:-1;;;;;3486:24:9;;;;;;:9;;:6;;3493:1;;3486:9;;;;;;:::i;:::-;;;;;;:24;;;;3467:3;;;;;:::i;:::-;;;;3427:94;;;-1:-1:-1;3537:6:9;3295:255;-1:-1:-1;3295:255:9:o;1744:900::-;1948:7;1971:38;;;1967:65;;2018:14;;-1:-1:-1;;;2018:14:9;;;;;;;;;;;1967:65;2042:22;2080:4;2086:6;2094;2102:10;2067:46;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2042:71;;2124:18;2145:164;;;;;;;;2179:12;;2145:164;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2145:164:9;;;-1:-1:-1;2145:164:9;;;;;;;;;;;;;;;;;;;;;;;;2215:8;;;;;;2145:164;;;2215:8;;2145:164;2215:8;2145:164;;;;;;;;;-1:-1:-1;;;2145:164:9;;;-1:-1:-1;2145:164:9;;;;;;-1:-1:-1;;;;;2145:164:9;;;;;;;2325:19;2124:185;;-1:-1:-1;2325:19:9;;;;2124:185;;2325:19;:::i;:::-;;;;;;;;2355:25;2365:14;;2355:25;;:9;:25;;;;;;;;:33;;;;2383:5;;2355:33;;:25;;:33;;;;:::i;:::-;-1:-1:-1;2355:33:9;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2355:33:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2355:33:9;-1:-1:-1;;;;;2355:33:9;;;;;;;;;-1:-1:-1;2399:205:9;2419:23;;;2399:205;;;2463:12;;2476:1;2463:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2463:28:9;;2509:10;2545:4;2568:8;;2577:1;2568:11;;;;;;;:::i;:::-;2463:130;;-1:-1:-1;;;;;;2463:130:9;;;;;;;-1:-1:-1;;;;;7659:15:11;;;2463:130:9;;;7641:34:11;7711:15;;;;7691:18;;;7684:43;-1:-1:-1;2568:11:9;;;;;;7743:18:11;;;7736:34;7576:18;;2463:130:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2444:3;;;;;:::i;:::-;;;;2399:205;;;-1:-1:-1;2621:14:9;:16;;;:14;:16;;;:::i;:::-;;;;-1:-1:-1;2614:23:9;1744:900;-1:-1:-1;;;;;;;;;;1744:900:9:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:11;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:11;;14:180;-1:-1:-1;14:180:11:o;199:131::-;-1:-1:-1;;;;;274:31:11;;264:42;;254:70;;320:1;317;310:12;335:127;396:10;391:3;387:20;384:1;377:31;427:4;424:1;417:15;451:4;448:1;441:15;467:631;531:5;561:18;602:2;594:6;591:14;588:40;;;608:18;;:::i;:::-;683:2;677:9;651:2;737:15;;-1:-1:-1;;733:24:11;;;759:2;729:33;725:42;713:55;;;783:18;;;803:22;;;780:46;777:72;;;829:18;;:::i;:::-;869:10;865:2;858:22;898:6;889:15;;928:6;920;913:22;968:3;959:6;954:3;950:16;947:25;944:45;;;985:1;982;975:12;944:45;1035:6;1030:3;1023:4;1015:6;1011:17;998:44;1090:1;1083:4;1074:6;1066;1062:19;1058:30;1051:41;;;;467:631;;;;;:::o;1103:794::-;1198:6;1206;1214;1222;1275:3;1263:9;1254:7;1250:23;1246:33;1243:53;;;1292:1;1289;1282:12;1243:53;1331:9;1318:23;1350:31;1375:5;1350:31;:::i;:::-;1400:5;-1:-1:-1;1457:2:11;1442:18;;1429:32;1470:33;1429:32;1470:33;:::i;:::-;1522:7;-1:-1:-1;1576:2:11;1561:18;;1548:32;;-1:-1:-1;1631:2:11;1616:18;;1603:32;1658:18;1647:30;;1644:50;;;1690:1;1687;1680:12;1644:50;1713:22;;1766:4;1758:13;;1754:27;-1:-1:-1;1744:55:11;;1795:1;1792;1785:12;1744:55;1818:73;1883:7;1878:2;1865:16;1860:2;1856;1852:11;1818:73;:::i;:::-;1808:83;;;1103:794;;;;;;;:::o;2525:1291::-;2646:12;;2612:4;2667:17;;;2733:19;;2603:14;;;2761:20;;;2573:3;;2831:4;;2858:21;;;;2808:3;2799:13;;;2573:3;2907:201;2921:6;2918:1;2915:13;2907:201;;;2988:13;;-1:-1:-1;;;;;2984:39:11;2970:54;;3083:15;;;;3046:14;;;;3020:1;2936:9;2907:201;;;-1:-1:-1;;3145:14:11;;;3139:21;3190:15;;;3176:12;;;3169:37;3258:21;;3288:23;;;3368;;;;-1:-1:-1;3411:1:11;;3329:14;;;3421:189;3437:8;3432:3;3429:17;3421:189;;;3506:15;;3492:30;;3583:17;;;;3465:1;3456:11;;;;;3544:14;;;;3421:189;;;3425:3;3659:4;3652:5;3648:16;3642:23;3635:4;3630:3;3626:14;3619:47;3714:4;3707:5;3703:16;3697:23;3675:45;;3729:60;3783:4;3778:3;3774:14;3758;-1:-1:-1;;;;;2185:31:11;2173:44;;2109:114;3729:60;3805:5;2525:1291;-1:-1:-1;;;;;;2525:1291:11:o;3821:254::-;3998:2;3987:9;3980:21;3961:4;4018:51;4065:2;4054:9;4050:18;4042:6;4018:51;:::i;:::-;4010:59;3821:254;-1:-1:-1;;;3821:254:11:o;4080:837::-;4270:4;4299:2;4339;4328:9;4324:18;4369:2;4358:9;4351:21;4392:6;4427;4421:13;4458:6;4450;4443:22;4496:2;4485:9;4481:18;4474:25;;4558:2;4548:6;4545:1;4541:14;4530:9;4526:30;4522:39;4508:53;;4596:2;4588:6;4584:15;4617:1;4627:261;4641:6;4638:1;4635:13;4627:261;;;4734:2;4730:7;4718:9;4710:6;4706:22;4702:36;4697:3;4690:49;4762:46;4801:6;4792;4786:13;4762:46;:::i;:::-;4752:56;-1:-1:-1;4866:12:11;;;;4831:15;;;;4663:1;4656:9;4627:261;;;-1:-1:-1;4905:6:11;;4080:837;-1:-1:-1;;;;;;;4080:837:11:o;4922:375::-;4993:8;5003:6;5057:3;5050:4;5042:6;5038:17;5034:27;5024:55;;5075:1;5072;5065:12;5024:55;-1:-1:-1;5098:20:11;;5141:18;5130:30;;5127:50;;;5173:1;5170;5163:12;5127:50;5210:4;5202:6;5198:17;5186:29;;5270:3;5263:4;5253:6;5250:1;5246:14;5238:6;5234:27;5230:38;5227:47;5224:67;;;5287:1;5284;5277:12;5224:67;4922:375;;;;;:::o;5302:221::-;5345:5;5398:3;5391:4;5383:6;5379:17;5375:27;5365:55;;5416:1;5413;5406:12;5365:55;5438:79;5513:3;5504:6;5491:20;5484:4;5476:6;5472:17;5438:79;:::i;5528:1275::-;5713:6;5721;5729;5737;5745;5753;5761;5814:3;5802:9;5793:7;5789:23;5785:33;5782:53;;;5831:1;5828;5821:12;5782:53;5871:9;5858:23;5900:18;5941:2;5933:6;5930:14;5927:34;;;5957:1;5954;5947:12;5927:34;5996:78;6066:7;6057:6;6046:9;6042:22;5996:78;:::i;:::-;6093:8;;-1:-1:-1;5970:104:11;-1:-1:-1;6181:2:11;6166:18;;6153:32;;-1:-1:-1;6197:16:11;;;6194:36;;;6226:1;6223;6216:12;6194:36;6265:80;6337:7;6326:8;6315:9;6311:24;6265:80;:::i;:::-;6364:8;;-1:-1:-1;6239:106:11;-1:-1:-1;6446:2:11;6431:18;;6418:32;;-1:-1:-1;6503:2:11;6488:18;;6475:32;;-1:-1:-1;6519:16:11;;;6516:36;;;6548:1;6545;6538:12;6516:36;6571:52;6615:7;6604:8;6593:9;6589:24;6571:52;:::i;:::-;6561:62;;6676:3;6665:9;6661:19;6648:33;6632:49;;6706:2;6696:8;6693:16;6690:36;;;6722:1;6719;6712:12;6690:36;;6745:52;6789:7;6778:8;6767:9;6763:24;6745:52;:::i;:::-;6735:62;;;5528:1275;;;;;;;;;;:::o;7269:127::-;7330:10;7325:3;7321:20;7318:1;7311:31;7361:4;7358:1;7351:15;7385:4;7382:1;7375:15;7781:232;7820:3;-1:-1:-1;;7841:17:11;;7838:140;;;7900:10;7895:3;7891:20;7888:1;7881:31;7935:4;7932:1;7925:15;7963:4;7960:1;7953:15;7838:140;-1:-1:-1;8005:1:11;7994:13;;7781:232::o;8018:472::-;8060:3;8098:5;8092:12;8125:6;8120:3;8113:19;8150:1;8160:162;8174:6;8171:1;8168:13;8160:162;;;8236:4;8292:13;;;8288:22;;8282:29;8264:11;;;8260:20;;8253:59;8189:12;8160:162;;;8340:6;8337:1;8334:13;8331:87;;;8406:1;8399:4;8390:6;8385:3;8381:16;8377:27;8370:38;8331:87;-1:-1:-1;8472:2:11;8451:15;-1:-1:-1;;8447:29:11;8438:39;;;;8479:4;8434:50;;8018:472;-1:-1:-1;;8018:472:11:o;8495:553::-;8748:3;8737:9;8730:22;8711:4;8775:46;8816:3;8805:9;8801:19;8793:6;8775:46;:::i;:::-;8869:9;8861:6;8857:22;8852:2;8841:9;8837:18;8830:50;8897:33;8923:6;8915;8897:33;:::i;:::-;8961:2;8946:18;;8939:34;;;;-1:-1:-1;;;;;;;9009:32:11;;;;9004:2;8989:18;;;8982:60;8889:41;8495:553;-1:-1:-1;;8495:553:11:o;9053:263::-;9128:6;9181:2;9169:9;9160:7;9156:23;9152:32;9149:52;;;9197:1;9194;9187:12;9149:52;9236:9;9223:23;9255:31;9280:5;9255:31;:::i",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/alexander/dev/fractional/contracts/src/Fractron.sol",
    "exportedSymbols": {
      "ERC20": [
        23600
      ],
      "ERC721": [
        24144
      ],
      "Fractron": [
        24516
      ],
      "NFTShare": [
        24237
      ]
    },
    "id": 24517,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24166,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:9"
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "id": 24168,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24517,
        "sourceUnit": 23601,
        "src": "58:47:9",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24167,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "66:5:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "id": 24170,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24517,
        "sourceUnit": 24165,
        "src": "106:49:9",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24169,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "114:6:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24171,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23600,
              "src": "178:5:9"
            },
            "id": 24172,
            "nodeType": "InheritanceSpecifier",
            "src": "178:5:9"
          }
        ],
        "canonicalName": "NFTShare",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24237,
        "linearizedBaseContracts": [
          24237,
          23600
        ],
        "name": "NFTShare",
        "nameLocation": "166:8:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 24193,
              "nodeType": "Block",
              "src": "350:42:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24189,
                        "name": "mintTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24180,
                        "src": "366:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24190,
                        "name": "mintSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24178,
                        "src": "374:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24188,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23571,
                      "src": "360:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 24191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "360:25:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24192,
                  "nodeType": "ExpressionStatement",
                  "src": "360:25:9"
                }
              ]
            },
            "id": 24194,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 24183,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24174,
                    "src": "332:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 24184,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24176,
                    "src": "338:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "hexValue": "3138",
                    "id": 24185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "346:2:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 24186,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 24182,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23600,
                  "src": "326:5:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "326:23:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24174,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "225:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24194,
                  "src": "211:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24173,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "211:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24176,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "253:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24194,
                  "src": "239:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24175,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "239:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24178,
                  "mutability": "mutable",
                  "name": "mintSupply",
                  "nameLocation": "277:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24194,
                  "src": "269:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24180,
                  "mutability": "mutable",
                  "name": "mintTo",
                  "nameLocation": "305:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24194,
                  "src": "297:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "201:116:9"
            },
            "returnParameters": {
              "id": 24187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "350:0:9"
            },
            "scope": 24237,
            "src": "190:202:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24235,
              "nodeType": "Block",
              "src": "644:231:9",
              "statements": [
                {
                  "assignments": [
                    24203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24203,
                      "mutability": "mutable",
                      "name": "allowed",
                      "nameLocation": "662:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 24235,
                      "src": "654:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24202,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "654:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24210,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 24204,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23249,
                        "src": "672:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 24206,
                      "indexExpression": {
                        "id": 24205,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24197,
                        "src": "682:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "672:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 24209,
                    "indexExpression": {
                      "expression": {
                        "id": 24207,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "688:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 24208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "688:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "672:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "654:45:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24211,
                      "name": "allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24203,
                      "src": "750:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 24214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "766:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 24213,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "766:7:9",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 24212,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "761:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 24215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "761:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 24216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "761:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "750:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24229,
                  "nodeType": "IfStatement",
                  "src": "746:92:9",
                  "trueBody": {
                    "expression": {
                      "id": 24227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 24218,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23249,
                            "src": "792:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 24222,
                          "indexExpression": {
                            "id": 24219,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24197,
                            "src": "802:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "792:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 24223,
                        "indexExpression": {
                          "expression": {
                            "id": 24220,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "808:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 24221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "808:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "792:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24224,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24203,
                          "src": "822:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 24225,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24199,
                          "src": "832:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "822:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "792:46:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24228,
                    "nodeType": "ExpressionStatement",
                    "src": "792:46:9"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24231,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24197,
                        "src": "855:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24232,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24199,
                        "src": "861:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24230,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23599,
                      "src": "849:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 24233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "849:19:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24234,
                  "nodeType": "ExpressionStatement",
                  "src": "849:19:9"
                }
              ]
            },
            "documentation": {
              "id": 24195,
              "nodeType": "StructuredDocumentation",
              "src": "398:178:9",
              "text": "@dev The allowance check happens when substracting the amount from the allowed amount. This operation will underflow (and revert) if the caller doesn't have enough allowance."
            },
            "functionSelector": "79cc6790",
            "id": 24236,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "590:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24197,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "607:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24236,
                  "src": "599:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24199,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "621:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24236,
                  "src": "613:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "598:30:9"
            },
            "returnParameters": {
              "id": 24201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "644:0:9"
            },
            "scope": 24237,
            "src": "581:294:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 24517,
        "src": "157:720:9",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Fractron",
        "contractDependencies": [
          24237
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24516,
        "linearizedBaseContracts": [
          24516
        ],
        "name": "Fractron",
        "nameLocation": "888:8:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 24238,
              "nodeType": "StructuredDocumentation",
              "src": "903:80:9",
              "text": "@notice Thrown when trying to rejoin a token from a vault that doesn't exist"
            },
            "id": 24240,
            "name": "VaultNotFound",
            "nameLocation": "994:13:9",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 24239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1007:2:9"
            },
            "src": "988:22:9"
          },
          {
            "documentation": {
              "id": 24241,
              "nodeType": "StructuredDocumentation",
              "src": "1015:63:9",
              "text": "@notice Thrown when trying to create vault that can't exist"
            },
            "id": 24243,
            "name": "InvalidVault",
            "nameLocation": "1089:12:9",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 24242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1101:2:9"
            },
            "src": "1083:21:9"
          },
          {
            "canonicalName": "Fractron.Vault",
            "id": 24256,
            "members": [
              {
                "constant": false,
                "id": 24247,
                "mutability": "mutable",
                "name": "nftContracts",
                "nameLocation": "1463:12:9",
                "nodeType": "VariableDeclaration",
                "scope": 24256,
                "src": "1454:21:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr",
                  "typeString": "contract ERC721[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 24245,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24244,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24144,
                      "src": "1454:6:9"
                    },
                    "referencedDeclaration": 24144,
                    "src": "1454:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$24144",
                      "typeString": "contract ERC721"
                    }
                  },
                  "id": 24246,
                  "nodeType": "ArrayTypeName",
                  "src": "1454:8:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr",
                    "typeString": "contract ERC721[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24250,
                "mutability": "mutable",
                "name": "tokenIds",
                "nameLocation": "1495:8:9",
                "nodeType": "VariableDeclaration",
                "scope": 24256,
                "src": "1485:18:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 24248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1485:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24249,
                  "nodeType": "ArrayTypeName",
                  "src": "1485:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24252,
                "mutability": "mutable",
                "name": "tokenSupply",
                "nameLocation": "1521:11:9",
                "nodeType": "VariableDeclaration",
                "scope": 24256,
                "src": "1513:19:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24251,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1513:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24255,
                "mutability": "mutable",
                "name": "tokenContract",
                "nameLocation": "1551:13:9",
                "nodeType": "VariableDeclaration",
                "scope": 24256,
                "src": "1542:22:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_NFTShare_$24237",
                  "typeString": "contract NFTShare"
                },
                "typeName": {
                  "id": 24254,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 24253,
                    "name": "NFTShare",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 24237,
                    "src": "1542:8:9"
                  },
                  "referencedDeclaration": 24237,
                  "src": "1542:8:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTShare_$24237",
                    "typeString": "contract NFTShare"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Vault",
            "nameLocation": "1438:5:9",
            "nodeType": "StructDefinition",
            "scope": 24516,
            "src": "1431:140:9",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 24261,
            "name": "VaultCreated",
            "nameLocation": "1583:12:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24259,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1602:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24261,
                  "src": "1596:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                    "typeString": "struct Fractron.Vault"
                  },
                  "typeName": {
                    "id": 24258,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24257,
                      "name": "Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24256,
                      "src": "1596:5:9"
                    },
                    "referencedDeclaration": 24256,
                    "src": "1596:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24256_storage_ptr",
                      "typeString": "struct Fractron.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1595:13:9"
            },
            "src": "1577:32:9"
          },
          {
            "anonymous": false,
            "id": 24266,
            "name": "VaultDestroyed",
            "nameLocation": "1620:14:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24264,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1641:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24266,
                  "src": "1635:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                    "typeString": "struct Fractron.Vault"
                  },
                  "typeName": {
                    "id": 24263,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24262,
                      "name": "Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24256,
                      "src": "1635:5:9"
                    },
                    "referencedDeclaration": 24256,
                    "src": "1635:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24256_storage_ptr",
                      "typeString": "struct Fractron.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1634:13:9"
            },
            "src": "1614:34:9"
          },
          {
            "constant": false,
            "id": 24269,
            "mutability": "mutable",
            "name": "currentVaultId",
            "nameLocation": "1671:14:9",
            "nodeType": "VariableDeclaration",
            "scope": 24516,
            "src": "1654:35:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24267,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1654:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 24268,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1688:1:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "32f19a5c",
            "id": 24274,
            "mutability": "mutable",
            "name": "vaultById",
            "nameLocation": "1728:9:9",
            "nodeType": "VariableDeclaration",
            "scope": 24516,
            "src": "1695:42:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24256_storage_$",
              "typeString": "mapping(uint256 => struct Fractron.Vault)"
            },
            "typeName": {
              "id": 24273,
              "keyType": {
                "id": 24270,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1703:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1695:25:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24256_storage_$",
                "typeString": "mapping(uint256 => struct Fractron.Vault)"
              },
              "valueType": {
                "id": 24272,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 24271,
                  "name": "Vault",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24256,
                  "src": "1714:5:9"
                },
                "referencedDeclaration": 24256,
                "src": "1714:5:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Vault_$24256_storage_ptr",
                  "typeString": "struct Fractron.Vault"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 24365,
              "nodeType": "Block",
              "src": "1957:687:9",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 24292,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24278,
                        "src": "1971:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_calldata_ptr",
                          "typeString": "contract ERC721[] calldata"
                        }
                      },
                      "id": 24293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1971:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 24294,
                        "name": "tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24281,
                        "src": "1994:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 24295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1994:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1971:38:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24300,
                  "nodeType": "IfStatement",
                  "src": "1967:65:9",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24297,
                        "name": "InvalidVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24243,
                        "src": "2018:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 24298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2018:14:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 24299,
                    "nodeType": "RevertStatement",
                    "src": "2011:21:9"
                  }
                },
                {
                  "assignments": [
                    24303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24303,
                      "mutability": "mutable",
                      "name": "tokenContract",
                      "nameLocation": "2051:13:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 24365,
                      "src": "2042:22:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTShare_$24237",
                        "typeString": "contract NFTShare"
                      },
                      "typeName": {
                        "id": 24302,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24301,
                          "name": "NFTShare",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24237,
                          "src": "2042:8:9"
                        },
                        "referencedDeclaration": 24237,
                        "src": "2042:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24237",
                          "typeString": "contract NFTShare"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24313,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24307,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24285,
                        "src": "2080:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 24308,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24287,
                        "src": "2086:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 24309,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24283,
                        "src": "2094:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 24310,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2102:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2102:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2067:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_NFTShare_$24237_$",
                        "typeString": "function (string memory,string memory,uint256,address) payable returns (contract NFTShare)"
                      },
                      "typeName": {
                        "id": 24305,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24304,
                          "name": "NFTShare",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24237,
                          "src": "2071:8:9"
                        },
                        "referencedDeclaration": 24237,
                        "src": "2071:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24237",
                          "typeString": "contract NFTShare"
                        }
                      }
                    },
                    "id": 24312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2067:46:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTShare_$24237",
                      "typeString": "contract NFTShare"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2042:71:9"
                },
                {
                  "assignments": [
                    24316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24316,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "2137:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 24365,
                      "src": "2124:18:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                        "typeString": "struct Fractron.Vault"
                      },
                      "typeName": {
                        "id": 24315,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24314,
                          "name": "Vault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24256,
                          "src": "2124:5:9"
                        },
                        "referencedDeclaration": 24256,
                        "src": "2124:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$24256_storage_ptr",
                          "typeString": "struct Fractron.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24323,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24318,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24278,
                        "src": "2179:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_calldata_ptr",
                          "typeString": "contract ERC721[] calldata"
                        }
                      },
                      {
                        "id": 24319,
                        "name": "tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24281,
                        "src": "2215:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 24320,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24283,
                        "src": "2250:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24321,
                        "name": "tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24303,
                        "src": "2285:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24237",
                          "typeString": "contract NFTShare"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_calldata_ptr",
                          "typeString": "contract ERC721[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_NFTShare_$24237",
                          "typeString": "contract NFTShare"
                        }
                      ],
                      "id": 24317,
                      "name": "Vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24256,
                      "src": "2145:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Vault_$24256_storage_ptr_$",
                        "typeString": "type(struct Fractron.Vault storage pointer)"
                      }
                    },
                    "id": 24322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "nftContracts",
                      "tokenIds",
                      "tokenSupply",
                      "tokenContract"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2145:164:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                      "typeString": "struct Fractron.Vault memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2124:185:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 24325,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24316,
                        "src": "2338:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                          "typeString": "struct Fractron.Vault memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                          "typeString": "struct Fractron.Vault memory"
                        }
                      ],
                      "id": 24324,
                      "name": "VaultCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24261,
                      "src": "2325:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Vault_$24256_memory_ptr_$returns$__$",
                        "typeString": "function (struct Fractron.Vault memory)"
                      }
                    },
                    "id": 24326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2325:19:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24327,
                  "nodeType": "EmitStatement",
                  "src": "2320:24:9"
                },
                {
                  "expression": {
                    "id": 24332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 24328,
                        "name": "vaultById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24274,
                        "src": "2355:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24256_storage_$",
                          "typeString": "mapping(uint256 => struct Fractron.Vault storage ref)"
                        }
                      },
                      "id": 24330,
                      "indexExpression": {
                        "id": 24329,
                        "name": "currentVaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24269,
                        "src": "2365:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2355:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24256_storage",
                        "typeString": "struct Fractron.Vault storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24331,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24316,
                      "src": "2383:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                        "typeString": "struct Fractron.Vault memory"
                      }
                    },
                    "src": "2355:33:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24256_storage",
                      "typeString": "struct Fractron.Vault storage ref"
                    }
                  },
                  "id": 24333,
                  "nodeType": "ExpressionStatement",
                  "src": "2355:33:9"
                },
                {
                  "body": {
                    "id": 24360,
                    "nodeType": "Block",
                    "src": "2449:155:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 24349,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2509:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 24350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2509:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 24353,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2545:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Fractron_$24516",
                                    "typeString": "contract Fractron"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Fractron_$24516",
                                    "typeString": "contract Fractron"
                                  }
                                ],
                                "id": 24352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2537:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24351,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2537:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2537:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 24355,
                                "name": "tokenIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24281,
                                "src": "2568:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 24357,
                              "indexExpression": {
                                "id": 24356,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24335,
                                "src": "2577:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2568:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 24345,
                                "name": "nftContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24278,
                                "src": "2463:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_calldata_ptr",
                                  "typeString": "contract ERC721[] calldata"
                                }
                              },
                              "id": 24347,
                              "indexExpression": {
                                "id": 24346,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24335,
                                "src": "2476:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2463:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$24144",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 24348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23861,
                            "src": "2463:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 24358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2463:130:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24359,
                        "nodeType": "ExpressionStatement",
                        "src": "2463:130:9"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24338,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24335,
                      "src": "2419:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 24339,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24278,
                        "src": "2423:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_calldata_ptr",
                          "typeString": "contract ERC721[] calldata"
                        }
                      },
                      "id": 24340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2423:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2419:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24361,
                  "initializationExpression": {
                    "assignments": [
                      24335
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24335,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2412:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 24361,
                        "src": "2404:9:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24334,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2404:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24337,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2416:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2404:13:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2444:3:9",
                      "subExpression": {
                        "id": 24342,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24335,
                        "src": "2444:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24344,
                    "nodeType": "ExpressionStatement",
                    "src": "2444:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "2399:205:9"
                },
                {
                  "expression": {
                    "id": 24363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2621:16:9",
                    "subExpression": {
                      "id": 24362,
                      "name": "currentVaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24269,
                      "src": "2621:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 24291,
                  "id": 24364,
                  "nodeType": "Return",
                  "src": "2614:23:9"
                }
              ]
            },
            "functionSelector": "9e9153c2",
            "id": 24366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "split",
            "nameLocation": "1753:5:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24278,
                  "mutability": "mutable",
                  "name": "nftContracts",
                  "nameLocation": "1786:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24366,
                  "src": "1768:30:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_calldata_ptr",
                    "typeString": "contract ERC721[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24276,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 24275,
                        "name": "ERC721",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 24144,
                        "src": "1768:6:9"
                      },
                      "referencedDeclaration": 24144,
                      "src": "1768:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$24144",
                        "typeString": "contract ERC721"
                      }
                    },
                    "id": 24277,
                    "nodeType": "ArrayTypeName",
                    "src": "1768:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr",
                      "typeString": "contract ERC721[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24281,
                  "mutability": "mutable",
                  "name": "tokenIds",
                  "nameLocation": "1827:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24366,
                  "src": "1808:27:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24279,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1808:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24280,
                    "nodeType": "ArrayTypeName",
                    "src": "1808:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24283,
                  "mutability": "mutable",
                  "name": "supply",
                  "nameLocation": "1853:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24366,
                  "src": "1845:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1845:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24285,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1883:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24366,
                  "src": "1869:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24284,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1869:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24287,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1911:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24366,
                  "src": "1897:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24286,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1897:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1758:165:9"
            },
            "returnParameters": {
              "id": 24291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24366,
                  "src": "1948:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:9:9"
            },
            "scope": 24516,
            "src": "1744:900:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24440,
              "nodeType": "Block",
              "src": "2696:475:9",
              "statements": [
                {
                  "assignments": [
                    24373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24373,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "2719:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 24440,
                      "src": "2706:18:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                        "typeString": "struct Fractron.Vault"
                      },
                      "typeName": {
                        "id": 24372,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24371,
                          "name": "Vault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24256,
                          "src": "2706:5:9"
                        },
                        "referencedDeclaration": 24256,
                        "src": "2706:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$24256_storage_ptr",
                          "typeString": "struct Fractron.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24377,
                  "initialValue": {
                    "baseExpression": {
                      "id": 24374,
                      "name": "vaultById",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24274,
                      "src": "2727:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24256_storage_$",
                        "typeString": "mapping(uint256 => struct Fractron.Vault storage ref)"
                      }
                    },
                    "id": 24376,
                    "indexExpression": {
                      "id": 24375,
                      "name": "vaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24368,
                      "src": "2737:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2727:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24256_storage",
                      "typeString": "struct Fractron.Vault storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2706:39:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 24387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 24380,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24373,
                            "src": "2768:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                              "typeString": "struct Fractron.Vault memory"
                            }
                          },
                          "id": 24381,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24255,
                          "src": "2768:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTShare_$24237",
                            "typeString": "contract NFTShare"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_NFTShare_$24237",
                            "typeString": "contract NFTShare"
                          }
                        ],
                        "id": 24379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2760:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24378,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2760:7:9",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2760:28:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 24385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2800:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 24384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2792:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2792:7:9",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2792:10:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2760:42:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24391,
                  "nodeType": "IfStatement",
                  "src": "2756:70:9",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24388,
                        "name": "VaultNotFound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24240,
                        "src": "2811:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 24389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2811:15:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 24390,
                    "nodeType": "RevertStatement",
                    "src": "2804:22:9"
                  }
                },
                {
                  "expression": {
                    "id": 24395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2837:25:9",
                    "subExpression": {
                      "baseExpression": {
                        "id": 24392,
                        "name": "vaultById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24274,
                        "src": "2844:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24256_storage_$",
                          "typeString": "mapping(uint256 => struct Fractron.Vault storage ref)"
                        }
                      },
                      "id": 24394,
                      "indexExpression": {
                        "id": 24393,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24368,
                        "src": "2854:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2844:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24256_storage",
                        "typeString": "struct Fractron.Vault storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24396,
                  "nodeType": "ExpressionStatement",
                  "src": "2837:25:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24402,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2902:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2902:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 24404,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24373,
                          "src": "2914:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24405,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24252,
                        "src": "2914:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 24397,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24373,
                          "src": "2873:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24400,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24255,
                        "src": "2873:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24237",
                          "typeString": "contract NFTShare"
                        }
                      },
                      "id": 24401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24236,
                      "src": "2873:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 24406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2873:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24407,
                  "nodeType": "ExpressionStatement",
                  "src": "2873:59:9"
                },
                {
                  "body": {
                    "id": 24438,
                    "nodeType": "Block",
                    "src": "2998:167:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 24428,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3072:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Fractron_$24516",
                                    "typeString": "contract Fractron"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Fractron_$24516",
                                    "typeString": "contract Fractron"
                                  }
                                ],
                                "id": 24427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3064:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24426,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3064:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3064:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 24430,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3095:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 24431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3095:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 24432,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24373,
                                  "src": "3123:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                    "typeString": "struct Fractron.Vault memory"
                                  }
                                },
                                "id": 24433,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenIds",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24250,
                                "src": "3123:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 24435,
                              "indexExpression": {
                                "id": 24434,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24409,
                                "src": "3138:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3123:17:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 24420,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24373,
                                  "src": "3012:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                                    "typeString": "struct Fractron.Vault memory"
                                  }
                                },
                                "id": 24423,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftContracts",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24247,
                                "src": "3012:18:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                                  "typeString": "contract ERC721[] memory"
                                }
                              },
                              "id": 24424,
                              "indexExpression": {
                                "id": 24422,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24409,
                                "src": "3031:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3012:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$24144",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 24425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23861,
                            "src": "3012:34:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 24436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3012:142:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24437,
                        "nodeType": "ExpressionStatement",
                        "src": "3012:142:9"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24412,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24409,
                      "src": "2962:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 24413,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24373,
                          "src": "2966:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24414,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftContracts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24247,
                        "src": "2966:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                          "typeString": "contract ERC721[] memory"
                        }
                      },
                      "id": 24415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2966:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2962:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24439,
                  "initializationExpression": {
                    "assignments": [
                      24409
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24409,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2955:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 24439,
                        "src": "2947:9:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24408,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2947:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24411,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2959:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2947:13:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2993:3:9",
                      "subExpression": {
                        "id": 24417,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24409,
                        "src": "2993:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24419,
                    "nodeType": "ExpressionStatement",
                    "src": "2993:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "2942:223:9"
                }
              ]
            },
            "functionSelector": "049878f3",
            "id": 24441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "join",
            "nameLocation": "2659:4:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24368,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "2672:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24441,
                  "src": "2664:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2664:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2663:17:9"
            },
            "returnParameters": {
              "id": 24370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2696:0:9"
            },
            "scope": 24516,
            "src": "2650:521:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24453,
              "nodeType": "Block",
              "src": "3247:42:9",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 24449,
                      "name": "vaultById",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24274,
                      "src": "3264:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24256_storage_$",
                        "typeString": "mapping(uint256 => struct Fractron.Vault storage ref)"
                      }
                    },
                    "id": 24451,
                    "indexExpression": {
                      "id": 24450,
                      "name": "vaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24443,
                      "src": "3274:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3264:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24256_storage",
                      "typeString": "struct Fractron.Vault storage ref"
                    }
                  },
                  "functionReturnParameters": 24448,
                  "id": 24452,
                  "nodeType": "Return",
                  "src": "3257:25:9"
                }
              ]
            },
            "functionSelector": "9403b634",
            "id": 24454,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVault",
            "nameLocation": "3186:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24443,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "3203:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24454,
                  "src": "3195:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3195:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3194:17:9"
            },
            "returnParameters": {
              "id": 24448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24447,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24454,
                  "src": "3233:12:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                    "typeString": "struct Fractron.Vault"
                  },
                  "typeName": {
                    "id": 24446,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24445,
                      "name": "Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24256,
                      "src": "3233:5:9"
                    },
                    "referencedDeclaration": 24256,
                    "src": "3233:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24256_storage_ptr",
                      "typeString": "struct Fractron.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3232:14:9"
            },
            "scope": 24516,
            "src": "3177:112:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24495,
              "nodeType": "Block",
              "src": "3356:194:9",
              "statements": [
                {
                  "assignments": [
                    24465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24465,
                      "mutability": "mutable",
                      "name": "vaults",
                      "nameLocation": "3381:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 24495,
                      "src": "3366:21:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Vault_$24256_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Fractron.Vault[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 24463,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24462,
                            "name": "Vault",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24256,
                            "src": "3366:5:9"
                          },
                          "referencedDeclaration": 24256,
                          "src": "3366:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_storage_ptr",
                            "typeString": "struct Fractron.Vault"
                          }
                        },
                        "id": 24464,
                        "nodeType": "ArrayTypeName",
                        "src": "3366:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vault_$24256_storage_$dyn_storage_ptr",
                          "typeString": "struct Fractron.Vault[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24472,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24470,
                        "name": "currentVaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24269,
                        "src": "3402:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3390:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Vault_$24256_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Fractron.Vault memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 24467,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24466,
                            "name": "Vault",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24256,
                            "src": "3394:5:9"
                          },
                          "referencedDeclaration": 24256,
                          "src": "3394:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_storage_ptr",
                            "typeString": "struct Fractron.Vault"
                          }
                        },
                        "id": 24468,
                        "nodeType": "ArrayTypeName",
                        "src": "3394:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vault_$24256_storage_$dyn_storage_ptr",
                          "typeString": "struct Fractron.Vault[]"
                        }
                      }
                    },
                    "id": 24471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3390:27:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Vault_$24256_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Fractron.Vault memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3366:51:9"
                },
                {
                  "body": {
                    "id": 24491,
                    "nodeType": "Block",
                    "src": "3472:49:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 24489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 24483,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24465,
                              "src": "3486:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Vault_$24256_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Fractron.Vault memory[] memory"
                              }
                            },
                            "id": 24485,
                            "indexExpression": {
                              "id": 24484,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24474,
                              "src": "3493:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3486:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                              "typeString": "struct Fractron.Vault memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 24486,
                              "name": "vaultById",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24274,
                              "src": "3498:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24256_storage_$",
                                "typeString": "mapping(uint256 => struct Fractron.Vault storage ref)"
                              }
                            },
                            "id": 24488,
                            "indexExpression": {
                              "id": 24487,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24474,
                              "src": "3508:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3498:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$24256_storage",
                              "typeString": "struct Fractron.Vault storage ref"
                            }
                          },
                          "src": "3486:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24256_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24490,
                        "nodeType": "ExpressionStatement",
                        "src": "3486:24:9"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24477,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24474,
                      "src": "3447:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 24478,
                      "name": "currentVaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24269,
                      "src": "3451:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3447:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24492,
                  "initializationExpression": {
                    "assignments": [
                      24474
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24474,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3440:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 24492,
                        "src": "3432:9:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24473,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3432:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24476,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3444:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3432:13:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3467:3:9",
                      "subExpression": {
                        "id": 24480,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24474,
                        "src": "3467:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24482,
                    "nodeType": "ExpressionStatement",
                    "src": "3467:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "3427:94:9"
                },
                {
                  "expression": {
                    "id": 24493,
                    "name": "vaults",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24465,
                    "src": "3537:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Vault_$24256_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Fractron.Vault memory[] memory"
                    }
                  },
                  "functionReturnParameters": 24460,
                  "id": 24494,
                  "nodeType": "Return",
                  "src": "3530:13:9"
                }
              ]
            },
            "functionSelector": "97331bf9",
            "id": 24496,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllVaults",
            "nameLocation": "3304:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3316:2:9"
            },
            "returnParameters": {
              "id": 24460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24459,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24496,
                  "src": "3340:14:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Vault_$24256_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Fractron.Vault[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24457,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 24456,
                        "name": "Vault",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 24256,
                        "src": "3340:5:9"
                      },
                      "referencedDeclaration": 24256,
                      "src": "3340:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24256_storage_ptr",
                        "typeString": "struct Fractron.Vault"
                      }
                    },
                    "id": 24458,
                    "nodeType": "ArrayTypeName",
                    "src": "3340:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Vault_$24256_storage_$dyn_storage_ptr",
                      "typeString": "struct Fractron.Vault[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3339:16:9"
            },
            "scope": 24516,
            "src": "3295:255:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24514,
              "nodeType": "Block",
              "src": "3768:54:9",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 24510,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "3785:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24516",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 24511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24515,
                      "src": "3785:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) payable external returns (bytes4)"
                      }
                    },
                    "id": 24512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "3785:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 24509,
                  "id": 24513,
                  "nodeType": "Return",
                  "src": "3778:37:9"
                }
              ]
            },
            "documentation": {
              "id": 24497,
              "nodeType": "StructuredDocumentation",
              "src": "3556:70:9",
              "text": "@dev This function ensures this contract can receive ERC721 tokens"
            },
            "functionSelector": "150b7a02",
            "id": 24515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "3640:16:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24499,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24515,
                  "src": "3666:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3666:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24501,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24515,
                  "src": "3683:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3683:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24503,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24515,
                  "src": "3700:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3700:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24505,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24515,
                  "src": "3717:12:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24504,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3717:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3656:79:9"
            },
            "returnParameters": {
              "id": 24509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24508,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24515,
                  "src": "3760:6:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 24507,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3760:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3759:8:9"
            },
            "scope": 24516,
            "src": "3631:191:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 24517,
        "src": "879:2945:9",
        "usedErrors": [
          24240,
          24243
        ]
      }
    ],
    "src": "32:3793:9"
  }
}