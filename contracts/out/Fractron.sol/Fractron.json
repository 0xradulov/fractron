{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721[]",
              "name": "nftContracts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct Fractron.Vault",
          "name": "vault",
          "type": "tuple"
        }
      ],
      "name": "VaultCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721[]",
              "name": "nftContracts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct Fractron.Vault",
          "name": "vault",
          "type": "tuple"
        }
      ],
      "name": "VaultDestroyed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "currentVaultId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllVaults",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721[]",
              "name": "nftContracts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "internalType": "struct Fractron.Vault[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "getVault",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721[]",
              "name": "nftContracts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "internalType": "struct Fractron.Vault",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "join",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC721[]",
          "name": "nftContracts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "split",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vaultById",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenSupply",
          "type": "uint256"
        },
        {
          "internalType": "contract NFTShare",
          "name": "tokenContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "878:2678:9:-:0;;;1203:1;1171:33;;878:2678;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "878:2678:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2299:604;;;;;;:::i;:::-;;:::i;:::-;;3363:191;;;;;;:::i;:::-;-1:-1:-1;;;3363:191:9;;;;;;;;;;-1:-1:-1;;;;;;2064:33:11;;;2046:52;;2034:2;2019:18;3363:191:9;;;;;;;;1210:42;;;;;;;;;;-1:-1:-1;1210:42:9;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;2909:112::-;;;;;;;;;;-1:-1:-1;2909:112:9;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3027:255::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1259:1034::-;;;;;;:::i;:::-;;:::i;:::-;;;8020:25:11;;;8008:2;7993:18;1259:1034:9;7874:177:11;1171:33:9;;;;;;;;;;;;;;;;2299:604;2355:18;2376;;;:9;:18;;;;;;;;2355:39;;;;;;;;;;;;;;;;;;;;;;;2376:18;;2355:39;;2376:18;;2355:39;;;2376:18;2355:39;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2355:39:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2355:39:9;;;-1:-1:-1;;2355:39:9;;;;;;;;;;;;-1:-1:-1;;;;;2355:39:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2355:39:9;;;;-1:-1:-1;;;2504:19:9;;;;2355:39;;-1:-1:-1;;;;;;2496:42:9;2488:70;;;;-1:-1:-1;;;2488:70:9;;8643:2:11;2488:70:9;;;8625:21:11;8682:2;8662:18;;;8655:30;-1:-1:-1;;;8701:18:11;;;8694:45;8756:18;;2488:70:9;;;;;;;;;2576:18;;;;:9;:18;;;;;;2569:25;2576:18;;2569:25;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;2569:25:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2605:19:9;;;;2646:17;;;;;2605:59;;-1:-1:-1;;;2605:59:9;;2634:10;2605:59;;;8959:51:11;9026:18;;;9019:34;;;;-1:-1:-1;;;;;2605:28:9;;;;;;8932:18:11;;2605:59:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2679:9;2674:223;2698:18;;:25;2694:29;;2674:223;;;2744:18;;:21;;2763:1;;2744:21;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2744:34:9;;2804:4;2827:10;2855:5;:14;;;2870:1;2855:17;;;;;;;;:::i;:::-;;;;;;;;;;;2744:142;;-1:-1:-1;;;;;;2744:142:9;;;;;;;-1:-1:-1;;;;;9454:15:11;;;2744:142:9;;;9436:34:11;9506:15;;;;9486:18;;;9479:43;9538:18;;;9531:34;9371:18;;2744:142:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2725:3;;;;;:::i;:::-;;;;2674:223;;;;2345:558;2299:604;:::o;1210:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1210:42:9;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2909:112::-;2965:12;;:::i;:::-;2996:18;;;;:9;:18;;;;;;;;;2989:25;;;;;;;;;;;;;;;;;;;;;;;2996:18;;2989:25;;2996:18;;2989:25;;2996:18;2989:25;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2989:25:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2989:25:9;;;-1:-1:-1;;2989:25:9;;;;;;;;;;;;-1:-1:-1;;;;;2989:25:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2909:112;;;:::o;3027:255::-;3072:14;3098:21;3134:14;;3122:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3098:51;;3164:9;3159:94;3183:14;;3179:1;:18;3159:94;;;3230:12;;;;:9;:12;;;;;;;;;3218:24;;;;;;;;;;;;;;;;;;;;;;;3230:12;;3218:24;;3230:12;;3218:24;;3230:12;3218:24;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3218:24:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3218:24:9;;;-1:-1:-1;;3218:24:9;;;;;;;;;;;;-1:-1:-1;;;;;3218:24:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:6;3225:1;3218:9;;;;;;;;:::i;:::-;;;;;;:24;;;;3199:3;;;;;:::i;:::-;;;;3159:94;;;-1:-1:-1;3269:6:9;3027:255;-1:-1:-1;3027:255:9:o;1259:1034::-;1463:7;1568:38;;;1560:64;;;;-1:-1:-1;;;1560:64:9;;10015:2:11;1560:64:9;;;9997:21:11;10054:2;10034:18;;;10027:30;-1:-1:-1;;;10073:18:11;;;10066:43;10126:18;;1560:64:9;9813:337:11;1560:64:9;1634:22;1672:4;1678:6;1686;1694:10;1659:46;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1634:71;;1716:18;1737:221;;;;;;;;1771:12;;1737:221;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1737:221:9;;;-1:-1:-1;1737:221:9;;;;;;;;;;;;;;;;;;;;;;;;1807:8;;;;;;1737:221;;;1807:8;;1737:221;1807:8;1737:221;;;;;;;;;-1:-1:-1;;;1737:221:9;;;-1:-1:-1;1737:221:9;;;;;;-1:-1:-1;;;;;1737:221:9;;;;;;;;;;1913:10;1737:221;;;;;;;;;;;1974:19;1716:242;;-1:-1:-1;1974:19:9;;;;1716:242;;1974:19;:::i;:::-;;;;;;;;2004:25;2014:14;;2004:25;;:9;:25;;;;;;;;:33;;;;2032:5;;2004:33;;:25;;:33;;;;:::i;:::-;-1:-1:-1;2004:33:9;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2004:33:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2004:33:9;;;-1:-1:-1;;;;;;2004:33:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2053:9;2048:205;2068:23;;;2048:205;;;2112:12;;2125:1;2112:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2112:28:9;;2158:10;2194:4;2217:8;;2226:1;2217:11;;;;;;;:::i;:::-;2112:130;;-1:-1:-1;;;;;;2112:130:9;;;;;;;-1:-1:-1;;;;;9454:15:11;;;2112:130:9;;;9436:34:11;9506:15;;;;9486:18;;;9479:43;-1:-1:-1;2217:11:9;;;;;;9538:18:11;;;9531:34;9371:18;;2112:130:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2093:3;;;;;:::i;:::-;;;;2048:205;;;-1:-1:-1;2270:14:9;:16;;;:14;:16;;;:::i;:::-;;;;-1:-1:-1;2263:23:9;1259:1034;-1:-1:-1;;;;;;;;;;1259:1034:9:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:180:11;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:11;;14:180;-1:-1:-1;14:180:11:o;199:131::-;-1:-1:-1;;;;;274:31:11;;264:42;;254:70;;320:1;317;310:12;335:127;396:10;391:3;387:20;384:1;377:31;427:4;424:1;417:15;451:4;448:1;441:15;467:631;531:5;561:18;602:2;594:6;591:14;588:40;;;608:18;;:::i;:::-;683:2;677:9;651:2;737:15;;-1:-1:-1;;733:24:11;;;759:2;729:33;725:42;713:55;;;783:18;;;803:22;;;780:46;777:72;;;829:18;;:::i;:::-;869:10;865:2;858:22;898:6;889:15;;928:6;920;913:22;968:3;959:6;954:3;950:16;947:25;944:45;;;985:1;982;975:12;944:45;1035:6;1030:3;1023:4;1015:6;1011:17;998:44;1090:1;1083:4;1074:6;1066;1062:19;1058:30;1051:41;;;;467:631;;;;;:::o;1103:794::-;1198:6;1206;1214;1222;1275:3;1263:9;1254:7;1250:23;1246:33;1243:53;;;1292:1;1289;1282:12;1243:53;1331:9;1318:23;1350:31;1375:5;1350:31;:::i;:::-;1400:5;-1:-1:-1;1457:2:11;1442:18;;1429:32;1470:33;1429:32;1470:33;:::i;:::-;1522:7;-1:-1:-1;1576:2:11;1561:18;;1548:32;;-1:-1:-1;1631:2:11;1616:18;;1603:32;1658:18;1647:30;;1644:50;;;1690:1;1687;1680:12;1644:50;1713:22;;1766:4;1758:13;;1754:27;-1:-1:-1;1744:55:11;;1795:1;1792;1785:12;1744:55;1818:73;1883:7;1878:2;1865:16;1860:2;1856;1852:11;1818:73;:::i;:::-;1808:83;;;1103:794;;;;;;;:::o;2228:472::-;2270:3;2308:5;2302:12;2335:6;2330:3;2323:19;2360:1;2370:162;2384:6;2381:1;2378:13;2370:162;;;2446:4;2502:13;;;2498:22;;2492:29;2474:11;;;2470:20;;2463:59;2399:12;2370:162;;;2550:6;2547:1;2544:13;2541:87;;;2616:1;2609:4;2600:6;2595:3;2591:16;2587:27;2580:38;2541:87;-1:-1:-1;2682:2:11;2661:15;-1:-1:-1;;2657:29:11;2648:39;;;;2689:4;2644:50;;2228:472;-1:-1:-1;;2228:472:11:o;2705:509::-;2938:25;;;-1:-1:-1;;;;;3037:15:11;;;3032:2;3017:18;;3010:43;3089:15;;3084:2;3069:18;;3062:43;3141:3;3136:2;3121:18;;3114:31;;;2919:4;;3162:46;;3188:19;;3180:6;3162:46;:::i;:::-;3154:54;2705:509;-1:-1:-1;;;;;;2705:509:11:o;3219:435::-;3272:3;3310:5;3304:12;3337:6;3332:3;3325:19;3363:4;3392:2;3387:3;3383:12;3376:19;;3429:2;3422:5;3418:14;3450:1;3460:169;3474:6;3471:1;3468:13;3460:169;;;3535:13;;3523:26;;3569:12;;;;3604:15;;;;3496:1;3489:9;3460:169;;;-1:-1:-1;3645:3:11;;3219:435;-1:-1:-1;;;;;3219:435:11:o;3659:1223::-;3780:12;;3746:4;3801:17;;;3867:19;;3737:14;;;3895:20;;;3707:3;;3965:4;;3992:21;;;;3942:3;3933:13;;;3707:3;4041:201;4055:6;4052:1;4049:13;4041:201;;;4122:13;;-1:-1:-1;;;;;4118:39:11;4104:54;;4217:15;;;;4180:14;;;;4154:1;4070:9;4041:201;;;4045:3;;4290:2;4283:5;4279:14;4273:21;4251:43;;4335:3;4328:5;4324:15;4319:2;4314:3;4310:12;4303:37;4363:51;4408:5;4392:14;4363:51;:::i;:::-;4349:65;;;;4463:4;4456:5;4452:16;4446:23;4439:4;4434:3;4430:14;4423:47;4518:4;4511:5;4507:16;4501:23;4533:60;4587:4;4582:3;4578:14;4562;-1:-1:-1;;;;;2185:31:11;2173:44;;2109:114;4533:60;;4641:4;4634:5;4630:16;4624:23;4656:60;4710:4;4705:3;4701:14;4685;-1:-1:-1;;;;;2185:31:11;2173:44;;2109:114;4656:60;;4764:4;4757:5;4753:16;4747:23;4814:3;4806:6;4802:16;4795:4;4790:3;4786:14;4779:40;4835:41;4869:6;4853:14;4835:41;:::i;:::-;4828:48;3659:1223;-1:-1:-1;;;;;3659:1223:11:o;4887:254::-;5064:2;5053:9;5046:21;5027:4;5084:51;5131:2;5120:9;5116:18;5108:6;5084:51;:::i;:::-;5076:59;4887:254;-1:-1:-1;;;4887:254:11:o;5146:837::-;5336:4;5365:2;5405;5394:9;5390:18;5435:2;5424:9;5417:21;5458:6;5493;5487:13;5524:6;5516;5509:22;5562:2;5551:9;5547:18;5540:25;;5624:2;5614:6;5611:1;5607:14;5596:9;5592:30;5588:39;5574:53;;5662:2;5654:6;5650:15;5683:1;5693:261;5707:6;5704:1;5701:13;5693:261;;;5800:2;5796:7;5784:9;5776:6;5772:22;5768:36;5763:3;5756:49;5828:46;5867:6;5858;5852:13;5828:46;:::i;:::-;5818:56;-1:-1:-1;5932:12:11;;;;5897:15;;;;5729:1;5722:9;5693:261;;;-1:-1:-1;5971:6:11;;5146:837;-1:-1:-1;;;;;;;5146:837:11:o;5988:375::-;6059:8;6069:6;6123:3;6116:4;6108:6;6104:17;6100:27;6090:55;;6141:1;6138;6131:12;6090:55;-1:-1:-1;6164:20:11;;6207:18;6196:30;;6193:50;;;6239:1;6236;6229:12;6193:50;6276:4;6268:6;6264:17;6252:29;;6336:3;6329:4;6319:6;6316:1;6312:14;6304:6;6300:27;6296:38;6293:47;6290:67;;;6353:1;6350;6343:12;6290:67;5988:375;;;;;:::o;6368:221::-;6411:5;6464:3;6457:4;6449:6;6445:17;6441:27;6431:55;;6482:1;6479;6472:12;6431:55;6504:79;6579:3;6570:6;6557:20;6550:4;6542:6;6538:17;6504:79;:::i;6594:1275::-;6779:6;6787;6795;6803;6811;6819;6827;6880:3;6868:9;6859:7;6855:23;6851:33;6848:53;;;6897:1;6894;6887:12;6848:53;6937:9;6924:23;6966:18;7007:2;6999:6;6996:14;6993:34;;;7023:1;7020;7013:12;6993:34;7062:78;7132:7;7123:6;7112:9;7108:22;7062:78;:::i;:::-;7159:8;;-1:-1:-1;7036:104:11;-1:-1:-1;7247:2:11;7232:18;;7219:32;;-1:-1:-1;7263:16:11;;;7260:36;;;7292:1;7289;7282:12;7260:36;7331:80;7403:7;7392:8;7381:9;7377:24;7331:80;:::i;:::-;7430:8;;-1:-1:-1;7305:106:11;-1:-1:-1;7512:2:11;7497:18;;7484:32;;-1:-1:-1;7569:2:11;7554:18;;7541:32;;-1:-1:-1;7585:16:11;;;7582:36;;;7614:1;7611;7604:12;7582:36;7637:52;7681:7;7670:8;7659:9;7655:24;7637:52;:::i;:::-;7627:62;;7742:3;7731:9;7727:19;7714:33;7698:49;;7772:2;7762:8;7759:16;7756:36;;;7788:1;7785;7778:12;7756:36;;7811:52;7855:7;7844:8;7833:9;7829:24;7811:52;:::i;:::-;7801:62;;;6594:1275;;;;;;;;;;:::o;8056:380::-;8135:1;8131:12;;;;8178;;;8199:61;;8253:4;8245:6;8241:17;8231:27;;8199:61;8306:2;8298:6;8295:14;8275:18;8272:38;8269:161;;;8352:10;8347:3;8343:20;8340:1;8333:31;8387:4;8384:1;8377:15;8415:4;8412:1;8405:15;9064:127;9125:10;9120:3;9116:20;9113:1;9106:31;9156:4;9153:1;9146:15;9180:4;9177:1;9170:15;9576:232;9615:3;-1:-1:-1;;9636:17:11;;9633:140;;;9695:10;9690:3;9686:20;9683:1;9676:31;9730:4;9727:1;9720:15;9758:4;9755:1;9748:15;9633:140;-1:-1:-1;9800:1:11;9789:13;;9576:232::o;10155:553::-;10408:3;10397:9;10390:22;10371:4;10435:46;10476:3;10465:9;10461:19;10453:6;10435:46;:::i;:::-;10529:9;10521:6;10517:22;10512:2;10501:9;10497:18;10490:50;10557:33;10583:6;10575;10557:33;:::i;:::-;10621:2;10606:18;;10599:34;;;;-1:-1:-1;;;;;;;10669:32:11;;;;10664:2;10649:18;;;10642:60;10549:41;10155:553;-1:-1:-1;;10155:553:11:o;10713:263::-;10788:6;10841:2;10829:9;10820:7;10816:23;10812:32;10809:52;;;10857:1;10854;10847:12;10809:52;10896:9;10883:23;10915:31;10940:5;10915:31;:::i",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/alexander/dev/fractional/contracts/src/Fractron.sol",
    "exportedSymbols": {
      "ERC20": [
        23600
      ],
      "ERC721": [
        24144
      ],
      "Fractron": [
        24517
      ],
      "NFTShare": [
        24237
      ]
    },
    "id": 24518,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24166,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:9"
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "id": 24168,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24518,
        "sourceUnit": 23601,
        "src": "57:47:9",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24167,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "65:5:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "id": 24170,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24518,
        "sourceUnit": 24165,
        "src": "105:49:9",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24169,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "113:6:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24171,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23600,
              "src": "177:5:9"
            },
            "id": 24172,
            "nodeType": "InheritanceSpecifier",
            "src": "177:5:9"
          }
        ],
        "canonicalName": "NFTShare",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24237,
        "linearizedBaseContracts": [
          24237,
          23600
        ],
        "name": "NFTShare",
        "nameLocation": "165:8:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 24193,
              "nodeType": "Block",
              "src": "349:42:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24189,
                        "name": "mintTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24180,
                        "src": "365:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24190,
                        "name": "mintSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24178,
                        "src": "373:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24188,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23571,
                      "src": "359:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 24191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "359:25:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24192,
                  "nodeType": "ExpressionStatement",
                  "src": "359:25:9"
                }
              ]
            },
            "id": 24194,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 24183,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24174,
                    "src": "331:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 24184,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24176,
                    "src": "337:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "hexValue": "3138",
                    "id": 24185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "345:2:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 24186,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 24182,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23600,
                  "src": "325:5:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "325:23:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24174,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "224:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24194,
                  "src": "210:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24173,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "210:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24176,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "252:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24194,
                  "src": "238:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24175,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24178,
                  "mutability": "mutable",
                  "name": "mintSupply",
                  "nameLocation": "276:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24194,
                  "src": "268:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "268:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24180,
                  "mutability": "mutable",
                  "name": "mintTo",
                  "nameLocation": "304:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24194,
                  "src": "296:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "200:116:9"
            },
            "returnParameters": {
              "id": 24187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "349:0:9"
            },
            "scope": 24237,
            "src": "189:202:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24235,
              "nodeType": "Block",
              "src": "643:231:9",
              "statements": [
                {
                  "assignments": [
                    24203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24203,
                      "mutability": "mutable",
                      "name": "allowed",
                      "nameLocation": "661:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 24235,
                      "src": "653:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24202,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "653:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24210,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 24204,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23249,
                        "src": "671:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 24206,
                      "indexExpression": {
                        "id": 24205,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24197,
                        "src": "681:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "671:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 24209,
                    "indexExpression": {
                      "expression": {
                        "id": 24207,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "687:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 24208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "687:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "671:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "653:45:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24211,
                      "name": "allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24203,
                      "src": "749:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 24214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "765:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 24213,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "765:7:9",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 24212,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "760:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 24215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "760:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 24216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "760:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "749:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24229,
                  "nodeType": "IfStatement",
                  "src": "745:92:9",
                  "trueBody": {
                    "expression": {
                      "id": 24227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 24218,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23249,
                            "src": "791:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 24222,
                          "indexExpression": {
                            "id": 24219,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24197,
                            "src": "801:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "791:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 24223,
                        "indexExpression": {
                          "expression": {
                            "id": 24220,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "807:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 24221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "807:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "791:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24224,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24203,
                          "src": "821:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 24225,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24199,
                          "src": "831:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "821:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "791:46:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24228,
                    "nodeType": "ExpressionStatement",
                    "src": "791:46:9"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24231,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24197,
                        "src": "854:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24232,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24199,
                        "src": "860:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24230,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23599,
                      "src": "848:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 24233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "848:19:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24234,
                  "nodeType": "ExpressionStatement",
                  "src": "848:19:9"
                }
              ]
            },
            "documentation": {
              "id": 24195,
              "nodeType": "StructuredDocumentation",
              "src": "397:178:9",
              "text": "@dev The allowance check happens when substracting the amount from the allowed amount. This operation will underflow (and revert) if the caller doesn't have enough allowance."
            },
            "functionSelector": "79cc6790",
            "id": 24236,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "589:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24197,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "606:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24236,
                  "src": "598:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24199,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "620:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24236,
                  "src": "612:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "597:30:9"
            },
            "returnParameters": {
              "id": 24201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "643:0:9"
            },
            "scope": 24237,
            "src": "580:294:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 24518,
        "src": "156:720:9",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Fractron",
        "contractDependencies": [
          24237
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24517,
        "linearizedBaseContracts": [
          24517
        ],
        "name": "Fractron",
        "nameLocation": "887:8:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Fractron.Vault",
            "id": 24254,
            "members": [
              {
                "constant": false,
                "id": 24241,
                "mutability": "mutable",
                "name": "nftContracts",
                "nameLocation": "934:12:9",
                "nodeType": "VariableDeclaration",
                "scope": 24254,
                "src": "925:21:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr",
                  "typeString": "contract ERC721[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 24239,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24238,
                      "name": "ERC721",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24144,
                      "src": "925:6:9"
                    },
                    "referencedDeclaration": 24144,
                    "src": "925:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$24144",
                      "typeString": "contract ERC721"
                    }
                  },
                  "id": 24240,
                  "nodeType": "ArrayTypeName",
                  "src": "925:8:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr",
                    "typeString": "contract ERC721[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24244,
                "mutability": "mutable",
                "name": "tokenIds",
                "nameLocation": "966:8:9",
                "nodeType": "VariableDeclaration",
                "scope": 24254,
                "src": "956:18:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 24242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "956:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24243,
                  "nodeType": "ArrayTypeName",
                  "src": "956:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24246,
                "mutability": "mutable",
                "name": "tokenSupply",
                "nameLocation": "992:11:9",
                "nodeType": "VariableDeclaration",
                "scope": 24254,
                "src": "984:19:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24245,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "984:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24249,
                "mutability": "mutable",
                "name": "tokenContract",
                "nameLocation": "1022:13:9",
                "nodeType": "VariableDeclaration",
                "scope": 24254,
                "src": "1013:22:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_NFTShare_$24237",
                  "typeString": "contract NFTShare"
                },
                "typeName": {
                  "id": 24248,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 24247,
                    "name": "NFTShare",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 24237,
                    "src": "1013:8:9"
                  },
                  "referencedDeclaration": 24237,
                  "src": "1013:8:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFTShare_$24237",
                    "typeString": "contract NFTShare"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24251,
                "mutability": "mutable",
                "name": "creator",
                "nameLocation": "1053:7:9",
                "nodeType": "VariableDeclaration",
                "scope": 24254,
                "src": "1045:15:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 24250,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1045:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24253,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "1077:4:9",
                "nodeType": "VariableDeclaration",
                "scope": 24254,
                "src": "1070:11:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 24252,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1070:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Vault",
            "nameLocation": "909:5:9",
            "nodeType": "StructDefinition",
            "scope": 24517,
            "src": "902:186:9",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 24259,
            "name": "VaultCreated",
            "nameLocation": "1100:12:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24257,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1119:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24259,
                  "src": "1113:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                    "typeString": "struct Fractron.Vault"
                  },
                  "typeName": {
                    "id": 24256,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24255,
                      "name": "Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24254,
                      "src": "1113:5:9"
                    },
                    "referencedDeclaration": 24254,
                    "src": "1113:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24254_storage_ptr",
                      "typeString": "struct Fractron.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1112:13:9"
            },
            "src": "1094:32:9"
          },
          {
            "anonymous": false,
            "id": 24264,
            "name": "VaultDestroyed",
            "nameLocation": "1137:14:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24262,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1158:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24264,
                  "src": "1152:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                    "typeString": "struct Fractron.Vault"
                  },
                  "typeName": {
                    "id": 24261,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24260,
                      "name": "Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24254,
                      "src": "1152:5:9"
                    },
                    "referencedDeclaration": 24254,
                    "src": "1152:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24254_storage_ptr",
                      "typeString": "struct Fractron.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1151:13:9"
            },
            "src": "1131:34:9"
          },
          {
            "constant": false,
            "functionSelector": "d6df9e5d",
            "id": 24267,
            "mutability": "mutable",
            "name": "currentVaultId",
            "nameLocation": "1186:14:9",
            "nodeType": "VariableDeclaration",
            "scope": 24517,
            "src": "1171:33:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24265,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1171:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 24266,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1203:1:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "32f19a5c",
            "id": 24272,
            "mutability": "mutable",
            "name": "vaultById",
            "nameLocation": "1243:9:9",
            "nodeType": "VariableDeclaration",
            "scope": 24517,
            "src": "1210:42:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24254_storage_$",
              "typeString": "mapping(uint256 => struct Fractron.Vault)"
            },
            "typeName": {
              "id": 24271,
              "keyType": {
                "id": 24268,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1218:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1210:25:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24254_storage_$",
                "typeString": "mapping(uint256 => struct Fractron.Vault)"
              },
              "valueType": {
                "id": 24270,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 24269,
                  "name": "Vault",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24254,
                  "src": "1229:5:9"
                },
                "referencedDeclaration": 24254,
                "src": "1229:5:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Vault_$24254_storage_ptr",
                  "typeString": "struct Fractron.Vault"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 24366,
              "nodeType": "Block",
              "src": "1472:821:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 24291,
                            "name": "nftContracts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24276,
                            "src": "1568:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_calldata_ptr",
                              "typeString": "contract ERC721[] calldata"
                            }
                          },
                          "id": 24292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1568:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 24293,
                            "name": "tokenIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24279,
                            "src": "1591:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 24294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1591:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1568:38:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964207661756c74",
                        "id": 24296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1608:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5665e01d410d24e9e02cac3caa7e0fb9268a0e971cc5a8ef80a1c751e8f1ffc7",
                          "typeString": "literal_string \"invalid vault\""
                        },
                        "value": "invalid vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5665e01d410d24e9e02cac3caa7e0fb9268a0e971cc5a8ef80a1c751e8f1ffc7",
                          "typeString": "literal_string \"invalid vault\""
                        }
                      ],
                      "id": 24290,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1560:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1560:64:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24298,
                  "nodeType": "ExpressionStatement",
                  "src": "1560:64:9"
                },
                {
                  "assignments": [
                    24301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24301,
                      "mutability": "mutable",
                      "name": "tokenContract",
                      "nameLocation": "1643:13:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 24366,
                      "src": "1634:22:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTShare_$24237",
                        "typeString": "contract NFTShare"
                      },
                      "typeName": {
                        "id": 24300,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24299,
                          "name": "NFTShare",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24237,
                          "src": "1634:8:9"
                        },
                        "referencedDeclaration": 24237,
                        "src": "1634:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24237",
                          "typeString": "contract NFTShare"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24311,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24305,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24283,
                        "src": "1672:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 24306,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24285,
                        "src": "1678:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 24307,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24281,
                        "src": "1686:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 24308,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1694:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1694:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1659:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_NFTShare_$24237_$",
                        "typeString": "function (string memory,string memory,uint256,address) payable returns (contract NFTShare)"
                      },
                      "typeName": {
                        "id": 24303,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24302,
                          "name": "NFTShare",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24237,
                          "src": "1663:8:9"
                        },
                        "referencedDeclaration": 24237,
                        "src": "1663:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24237",
                          "typeString": "contract NFTShare"
                        }
                      }
                    },
                    "id": 24310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1659:46:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTShare_$24237",
                      "typeString": "contract NFTShare"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1634:71:9"
                },
                {
                  "assignments": [
                    24314
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24314,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "1729:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 24366,
                      "src": "1716:18:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                        "typeString": "struct Fractron.Vault"
                      },
                      "typeName": {
                        "id": 24313,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24312,
                          "name": "Vault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24254,
                          "src": "1716:5:9"
                        },
                        "referencedDeclaration": 24254,
                        "src": "1716:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$24254_storage_ptr",
                          "typeString": "struct Fractron.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24324,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24316,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24276,
                        "src": "1771:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_calldata_ptr",
                          "typeString": "contract ERC721[] calldata"
                        }
                      },
                      {
                        "id": 24317,
                        "name": "tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24279,
                        "src": "1807:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 24318,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24281,
                        "src": "1842:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24319,
                        "name": "tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24301,
                        "src": "1877:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24237",
                          "typeString": "contract NFTShare"
                        }
                      },
                      {
                        "expression": {
                          "id": 24320,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1913:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1913:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24322,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24283,
                        "src": "1943:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_calldata_ptr",
                          "typeString": "contract ERC721[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_NFTShare_$24237",
                          "typeString": "contract NFTShare"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 24315,
                      "name": "Vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24254,
                      "src": "1737:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Vault_$24254_storage_ptr_$",
                        "typeString": "type(struct Fractron.Vault storage pointer)"
                      }
                    },
                    "id": 24323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "nftContracts",
                      "tokenIds",
                      "tokenSupply",
                      "tokenContract",
                      "creator",
                      "name"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1737:221:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                      "typeString": "struct Fractron.Vault memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1716:242:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 24326,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24314,
                        "src": "1987:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                          "typeString": "struct Fractron.Vault memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                          "typeString": "struct Fractron.Vault memory"
                        }
                      ],
                      "id": 24325,
                      "name": "VaultCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24259,
                      "src": "1974:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_struct$_Vault_$24254_memory_ptr_$returns$__$",
                        "typeString": "function (struct Fractron.Vault memory)"
                      }
                    },
                    "id": 24327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1974:19:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24328,
                  "nodeType": "EmitStatement",
                  "src": "1969:24:9"
                },
                {
                  "expression": {
                    "id": 24333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 24329,
                        "name": "vaultById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24272,
                        "src": "2004:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24254_storage_$",
                          "typeString": "mapping(uint256 => struct Fractron.Vault storage ref)"
                        }
                      },
                      "id": 24331,
                      "indexExpression": {
                        "id": 24330,
                        "name": "currentVaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24267,
                        "src": "2014:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2004:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24254_storage",
                        "typeString": "struct Fractron.Vault storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24332,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24314,
                      "src": "2032:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                        "typeString": "struct Fractron.Vault memory"
                      }
                    },
                    "src": "2004:33:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24254_storage",
                      "typeString": "struct Fractron.Vault storage ref"
                    }
                  },
                  "id": 24334,
                  "nodeType": "ExpressionStatement",
                  "src": "2004:33:9"
                },
                {
                  "body": {
                    "id": 24361,
                    "nodeType": "Block",
                    "src": "2098:155:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 24350,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2158:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 24351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2158:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 24354,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2194:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Fractron_$24517",
                                    "typeString": "contract Fractron"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Fractron_$24517",
                                    "typeString": "contract Fractron"
                                  }
                                ],
                                "id": 24353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2186:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24352,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2186:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2186:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 24356,
                                "name": "tokenIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24279,
                                "src": "2217:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 24358,
                              "indexExpression": {
                                "id": 24357,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24336,
                                "src": "2226:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2217:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 24346,
                                "name": "nftContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24276,
                                "src": "2112:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_calldata_ptr",
                                  "typeString": "contract ERC721[] calldata"
                                }
                              },
                              "id": 24348,
                              "indexExpression": {
                                "id": 24347,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24336,
                                "src": "2125:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2112:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$24144",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 24349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23861,
                            "src": "2112:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 24359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2112:130:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24360,
                        "nodeType": "ExpressionStatement",
                        "src": "2112:130:9"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24339,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24336,
                      "src": "2068:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 24340,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24276,
                        "src": "2072:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_calldata_ptr",
                          "typeString": "contract ERC721[] calldata"
                        }
                      },
                      "id": 24341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2072:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2068:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24362,
                  "initializationExpression": {
                    "assignments": [
                      24336
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24336,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2061:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 24362,
                        "src": "2053:9:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24335,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2053:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24338,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2065:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2053:13:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2093:3:9",
                      "subExpression": {
                        "id": 24343,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24336,
                        "src": "2093:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24345,
                    "nodeType": "ExpressionStatement",
                    "src": "2093:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "2048:205:9"
                },
                {
                  "expression": {
                    "id": 24364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2270:16:9",
                    "subExpression": {
                      "id": 24363,
                      "name": "currentVaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24267,
                      "src": "2270:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 24289,
                  "id": 24365,
                  "nodeType": "Return",
                  "src": "2263:23:9"
                }
              ]
            },
            "functionSelector": "9e9153c2",
            "id": 24367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "split",
            "nameLocation": "1268:5:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24276,
                  "mutability": "mutable",
                  "name": "nftContracts",
                  "nameLocation": "1301:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24367,
                  "src": "1283:30:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_calldata_ptr",
                    "typeString": "contract ERC721[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24274,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 24273,
                        "name": "ERC721",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 24144,
                        "src": "1283:6:9"
                      },
                      "referencedDeclaration": 24144,
                      "src": "1283:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC721_$24144",
                        "typeString": "contract ERC721"
                      }
                    },
                    "id": 24275,
                    "nodeType": "ArrayTypeName",
                    "src": "1283:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr",
                      "typeString": "contract ERC721[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24279,
                  "mutability": "mutable",
                  "name": "tokenIds",
                  "nameLocation": "1342:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24367,
                  "src": "1323:27:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24277,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1323:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24278,
                    "nodeType": "ArrayTypeName",
                    "src": "1323:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24281,
                  "mutability": "mutable",
                  "name": "supply",
                  "nameLocation": "1368:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24367,
                  "src": "1360:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24283,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1398:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24367,
                  "src": "1384:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24282,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1384:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24285,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1426:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24367,
                  "src": "1412:20:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24284,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1412:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1273:165:9"
            },
            "returnParameters": {
              "id": 24289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24288,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24367,
                  "src": "1463:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1463:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1462:9:9"
            },
            "scope": 24517,
            "src": "1259:1034:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24441,
              "nodeType": "Block",
              "src": "2345:558:9",
              "statements": [
                {
                  "assignments": [
                    24374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24374,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "2368:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 24441,
                      "src": "2355:18:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                        "typeString": "struct Fractron.Vault"
                      },
                      "typeName": {
                        "id": 24373,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24372,
                          "name": "Vault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24254,
                          "src": "2355:5:9"
                        },
                        "referencedDeclaration": 24254,
                        "src": "2355:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$24254_storage_ptr",
                          "typeString": "struct Fractron.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24378,
                  "initialValue": {
                    "baseExpression": {
                      "id": 24375,
                      "name": "vaultById",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24272,
                      "src": "2376:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24254_storage_$",
                        "typeString": "mapping(uint256 => struct Fractron.Vault storage ref)"
                      }
                    },
                    "id": 24377,
                    "indexExpression": {
                      "id": 24376,
                      "name": "vaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24369,
                      "src": "2386:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2376:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24254_storage",
                      "typeString": "struct Fractron.Vault storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2355:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 24382,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24374,
                                "src": "2504:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                                  "typeString": "struct Fractron.Vault memory"
                                }
                              },
                              "id": 24383,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenContract",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24249,
                              "src": "2504:19:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFTShare_$24237",
                                "typeString": "contract NFTShare"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NFTShare_$24237",
                                "typeString": "contract NFTShare"
                              }
                            ],
                            "id": 24381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2496:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24380,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2496:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2496:28:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 24387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2536:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 24386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2528:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24385,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2528:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2528:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2496:42:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7661756c74206e6f7420666f756e64",
                        "id": 24390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2540:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c71b96f7c95eb866717c6b5014123bf7fbb993b6466ab79d5adafc3e0894f4af",
                          "typeString": "literal_string \"vault not found\""
                        },
                        "value": "vault not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c71b96f7c95eb866717c6b5014123bf7fbb993b6466ab79d5adafc3e0894f4af",
                          "typeString": "literal_string \"vault not found\""
                        }
                      ],
                      "id": 24379,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2488:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2488:70:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24392,
                  "nodeType": "ExpressionStatement",
                  "src": "2488:70:9"
                },
                {
                  "expression": {
                    "id": 24396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2569:25:9",
                    "subExpression": {
                      "baseExpression": {
                        "id": 24393,
                        "name": "vaultById",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24272,
                        "src": "2576:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24254_storage_$",
                          "typeString": "mapping(uint256 => struct Fractron.Vault storage ref)"
                        }
                      },
                      "id": 24395,
                      "indexExpression": {
                        "id": 24394,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24369,
                        "src": "2586:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2576:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24254_storage",
                        "typeString": "struct Fractron.Vault storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24397,
                  "nodeType": "ExpressionStatement",
                  "src": "2569:25:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24403,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2634:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2634:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 24405,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24374,
                          "src": "2646:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24406,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24246,
                        "src": "2646:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 24398,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24374,
                          "src": "2605:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24401,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24249,
                        "src": "2605:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24237",
                          "typeString": "contract NFTShare"
                        }
                      },
                      "id": 24402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24236,
                      "src": "2605:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 24407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2605:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24408,
                  "nodeType": "ExpressionStatement",
                  "src": "2605:59:9"
                },
                {
                  "body": {
                    "id": 24439,
                    "nodeType": "Block",
                    "src": "2730:167:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 24429,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2804:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Fractron_$24517",
                                    "typeString": "contract Fractron"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Fractron_$24517",
                                    "typeString": "contract Fractron"
                                  }
                                ],
                                "id": 24428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2796:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24427,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2796:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2796:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 24431,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2827:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 24432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2827:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 24433,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24374,
                                  "src": "2855:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                                    "typeString": "struct Fractron.Vault memory"
                                  }
                                },
                                "id": 24434,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenIds",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24244,
                                "src": "2855:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 24436,
                              "indexExpression": {
                                "id": 24435,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24410,
                                "src": "2870:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2855:17:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 24421,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24374,
                                  "src": "2744:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                                    "typeString": "struct Fractron.Vault memory"
                                  }
                                },
                                "id": 24424,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "nftContracts",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24241,
                                "src": "2744:18:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                                  "typeString": "contract ERC721[] memory"
                                }
                              },
                              "id": 24425,
                              "indexExpression": {
                                "id": 24423,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24410,
                                "src": "2763:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2744:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$24144",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 24426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23861,
                            "src": "2744:34:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 24437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2744:142:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24438,
                        "nodeType": "ExpressionStatement",
                        "src": "2744:142:9"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24413,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24410,
                      "src": "2694:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 24414,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24374,
                          "src": "2698:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24415,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftContracts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24241,
                        "src": "2698:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                          "typeString": "contract ERC721[] memory"
                        }
                      },
                      "id": 24416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2698:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2694:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24440,
                  "initializationExpression": {
                    "assignments": [
                      24410
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24410,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2687:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 24440,
                        "src": "2679:9:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24409,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2679:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24412,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2691:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2679:13:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2725:3:9",
                      "subExpression": {
                        "id": 24418,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24410,
                        "src": "2725:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24420,
                    "nodeType": "ExpressionStatement",
                    "src": "2725:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "2674:223:9"
                }
              ]
            },
            "functionSelector": "049878f3",
            "id": 24442,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "join",
            "nameLocation": "2308:4:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24369,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "2321:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24442,
                  "src": "2313:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2313:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2312:17:9"
            },
            "returnParameters": {
              "id": 24371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2345:0:9"
            },
            "scope": 24517,
            "src": "2299:604:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24454,
              "nodeType": "Block",
              "src": "2979:42:9",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 24450,
                      "name": "vaultById",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24272,
                      "src": "2996:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24254_storage_$",
                        "typeString": "mapping(uint256 => struct Fractron.Vault storage ref)"
                      }
                    },
                    "id": 24452,
                    "indexExpression": {
                      "id": 24451,
                      "name": "vaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24444,
                      "src": "3006:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2996:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24254_storage",
                      "typeString": "struct Fractron.Vault storage ref"
                    }
                  },
                  "functionReturnParameters": 24449,
                  "id": 24453,
                  "nodeType": "Return",
                  "src": "2989:25:9"
                }
              ]
            },
            "functionSelector": "9403b634",
            "id": 24455,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVault",
            "nameLocation": "2918:8:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24444,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "2935:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 24455,
                  "src": "2927:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2927:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2926:17:9"
            },
            "returnParameters": {
              "id": 24449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24448,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24455,
                  "src": "2965:12:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                    "typeString": "struct Fractron.Vault"
                  },
                  "typeName": {
                    "id": 24447,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24446,
                      "name": "Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24254,
                      "src": "2965:5:9"
                    },
                    "referencedDeclaration": 24254,
                    "src": "2965:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24254_storage_ptr",
                      "typeString": "struct Fractron.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2964:14:9"
            },
            "scope": 24517,
            "src": "2909:112:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24496,
              "nodeType": "Block",
              "src": "3088:194:9",
              "statements": [
                {
                  "assignments": [
                    24466
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24466,
                      "mutability": "mutable",
                      "name": "vaults",
                      "nameLocation": "3113:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 24496,
                      "src": "3098:21:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Vault_$24254_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Fractron.Vault[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 24464,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24463,
                            "name": "Vault",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24254,
                            "src": "3098:5:9"
                          },
                          "referencedDeclaration": 24254,
                          "src": "3098:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24254_storage_ptr",
                            "typeString": "struct Fractron.Vault"
                          }
                        },
                        "id": 24465,
                        "nodeType": "ArrayTypeName",
                        "src": "3098:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vault_$24254_storage_$dyn_storage_ptr",
                          "typeString": "struct Fractron.Vault[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24473,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24471,
                        "name": "currentVaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24267,
                        "src": "3134:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3122:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Vault_$24254_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Fractron.Vault memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 24468,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24467,
                            "name": "Vault",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24254,
                            "src": "3126:5:9"
                          },
                          "referencedDeclaration": 24254,
                          "src": "3126:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24254_storage_ptr",
                            "typeString": "struct Fractron.Vault"
                          }
                        },
                        "id": 24469,
                        "nodeType": "ArrayTypeName",
                        "src": "3126:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vault_$24254_storage_$dyn_storage_ptr",
                          "typeString": "struct Fractron.Vault[]"
                        }
                      }
                    },
                    "id": 24472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3122:27:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Vault_$24254_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Fractron.Vault memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3098:51:9"
                },
                {
                  "body": {
                    "id": 24492,
                    "nodeType": "Block",
                    "src": "3204:49:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 24490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 24484,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24466,
                              "src": "3218:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Vault_$24254_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Fractron.Vault memory[] memory"
                              }
                            },
                            "id": 24486,
                            "indexExpression": {
                              "id": 24485,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24475,
                              "src": "3225:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3218:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                              "typeString": "struct Fractron.Vault memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 24487,
                              "name": "vaultById",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24272,
                              "src": "3230:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Vault_$24254_storage_$",
                                "typeString": "mapping(uint256 => struct Fractron.Vault storage ref)"
                              }
                            },
                            "id": 24489,
                            "indexExpression": {
                              "id": 24488,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24475,
                              "src": "3240:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3230:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$24254_storage",
                              "typeString": "struct Fractron.Vault storage ref"
                            }
                          },
                          "src": "3218:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24491,
                        "nodeType": "ExpressionStatement",
                        "src": "3218:24:9"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24478,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24475,
                      "src": "3179:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 24479,
                      "name": "currentVaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24267,
                      "src": "3183:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3179:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24493,
                  "initializationExpression": {
                    "assignments": [
                      24475
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24475,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3172:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 24493,
                        "src": "3164:9:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24474,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3164:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24477,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3176:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3164:13:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3199:3:9",
                      "subExpression": {
                        "id": 24481,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24475,
                        "src": "3199:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24483,
                    "nodeType": "ExpressionStatement",
                    "src": "3199:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "3159:94:9"
                },
                {
                  "expression": {
                    "id": 24494,
                    "name": "vaults",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24466,
                    "src": "3269:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Vault_$24254_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Fractron.Vault memory[] memory"
                    }
                  },
                  "functionReturnParameters": 24461,
                  "id": 24495,
                  "nodeType": "Return",
                  "src": "3262:13:9"
                }
              ]
            },
            "functionSelector": "97331bf9",
            "id": 24497,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllVaults",
            "nameLocation": "3036:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3048:2:9"
            },
            "returnParameters": {
              "id": 24461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24460,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24497,
                  "src": "3072:14:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Vault_$24254_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Fractron.Vault[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24458,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 24457,
                        "name": "Vault",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 24254,
                        "src": "3072:5:9"
                      },
                      "referencedDeclaration": 24254,
                      "src": "3072:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24254_storage_ptr",
                        "typeString": "struct Fractron.Vault"
                      }
                    },
                    "id": 24459,
                    "nodeType": "ArrayTypeName",
                    "src": "3072:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Vault_$24254_storage_$dyn_storage_ptr",
                      "typeString": "struct Fractron.Vault[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3071:16:9"
            },
            "scope": 24517,
            "src": "3027:255:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24515,
              "nodeType": "Block",
              "src": "3500:54:9",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 24511,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "3517:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24517",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 24512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24516,
                      "src": "3517:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) payable external returns (bytes4)"
                      }
                    },
                    "id": 24513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "3517:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 24510,
                  "id": 24514,
                  "nodeType": "Return",
                  "src": "3510:37:9"
                }
              ]
            },
            "documentation": {
              "id": 24498,
              "nodeType": "StructuredDocumentation",
              "src": "3288:70:9",
              "text": "@dev This function ensures this contract can receive ERC721 tokens"
            },
            "functionSelector": "150b7a02",
            "id": 24516,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "3372:16:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24500,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24516,
                  "src": "3398:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3398:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24502,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24516,
                  "src": "3415:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24501,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3415:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24504,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24516,
                  "src": "3432:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3432:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24506,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24516,
                  "src": "3449:12:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24505,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3449:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3388:79:9"
            },
            "returnParameters": {
              "id": 24510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24509,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24516,
                  "src": "3492:6:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 24508,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3492:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3491:8:9"
            },
            "scope": 24517,
            "src": "3363:191:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 24518,
        "src": "878:2678:9",
        "usedErrors": []
      }
    ],
    "src": "32:3525:9"
  }
}