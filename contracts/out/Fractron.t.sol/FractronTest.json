{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721[]",
              "name": "nftContracts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct Fractron.Vault",
          "name": "vault",
          "type": "tuple"
        }
      ],
      "name": "VaultCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract ERC721[]",
              "name": "nftContracts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "tokenSupply",
              "type": "uint256"
            },
            {
              "internalType": "contract NFTShare",
              "name": "tokenContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct Fractron.Vault",
          "name": "vault",
          "type": "tuple"
        }
      ],
      "name": "VaultDestroyed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCanGetAllVaults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCanSplitToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTotalSupplyOwnerCanJoinToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff19166001179055600880546001600160a01b031916737109709ecfa91a80626ff3989d68f67f5b1dd12d17905534801561004357600080fd5b506153b2806100536000396000f3fe60806040523480156200001157600080fd5b50600436106200006a5760003560e01c8063085d70ea146200006f5780630a9254e4146200007b5780635ddea6a81462000085578063ba414fa6146200008f578063f678193714620000ad578063fa7626d414620000b7575b600080fd5b62000079620000c5565b005b620000796200052f565b6200007962000be9565b6200009962001079565b604051901515815260200160405180910390f35b62000079620011ae565b600054620000999060ff1681565b6006546001546040516331a9108f60e11b8152600481019190915262000144916001600160a01b031690636352211e906024015b602060405180830381865afa15801562000117573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013d919062001762565b3062001397565b60085460405163248e63e160e11b8152600160048201819052602482018190526000604483015260648201526001600160a01b039091169063491cc7c290608401600060405180830381600087803b158015620001a057600080fd5b505af1158015620001b5573d6000803e3d6000fd5b505060405168056bc75e2d631000008152309250600091507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3600954604051634f48a9e160e11b81526000916001600160a01b031690639e9153c2906200023c90600a90600c9068056bc75e2d6310000090600401620017cb565b6020604051808303816000875af11580156200025c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000282919062001891565b600954604051632500ed8d60e21b8152600481018390529192506000916001600160a01b0390911690639403b63490602401600060405180830381865afa158015620002d2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620002fc919081019062001ba0565b905060005b8151518110156200048c57620003d58260000151828151811062000329576200032962001bd9565b60200260200101516001600160a01b0316636352211e600c848154811062000355576200035562001bd9565b90600052602060002001546040518263ffffffff1660e01b81526004016200037f91815260200190565b602060405180830381865afa1580156200039d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003c3919062001762565b6009546001600160a01b031662001397565b6200042b82600001518281518110620003f257620003f262001bd9565b6020026020010151600a838154811062000410576200041062001bd9565b6000918252602090912001546001600160a01b031662001397565b620004778260200151828151811062000448576200044862001bd9565b6020026020010151600c838154811062000466576200046662001bd9565b9060005260206000200154620014a3565b80620004838162001bef565b91505062000301565b50620004a6816040015168056bc75e2d63100000620014a3565b60608101516040516370a0823160e01b81523060048201526200052b916001600160a01b0316906370a08231906024015b602060405180830381865afa158015620004f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200051b919062001891565b68056bc75e2d63100000620014a3565b5050565b6040516200053d9062001716565b604051809103906000f0801580156200055a573d6000803e3d6000fd5b50600580546001600160a01b0319166001600160a01b0392909216919091179055604051620005899062001723565b604051809103906000f080158015620005a6573d6000803e3d6000fd5b50600680546001600160a01b0319166001600160a01b0392909216919091179055604051620005d59062001723565b604051809103906000f080158015620005f2573d6000803e3d6000fd5b50600780546001600160a01b0319166001600160a01b0392909216919091179055604051620006219062001731565b604051809103906000f0801580156200063e573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392831690811790915560065460405163a22cb46560e01b81526004810192909252600160248301529091169063a22cb46590604401600060405180830381600087803b158015620006a557600080fd5b505af1158015620006ba573d6000803e3d6000fd5b505060075460095460405163a22cb46560e01b81526001600160a01b039182166004820152600160248201529116925063a22cb4659150604401600060405180830381600087803b1580156200070f57600080fd5b505af115801562000724573d6000803e3d6000fd5b505060085460055460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b1580156200077257600080fd5b505af115801562000787573d6000803e3d6000fd5b505060065460095460405163a22cb46560e01b81526001600160a01b039182166004820152600160248201529116925063a22cb4659150604401600060405180830381600087803b158015620007dc57600080fd5b505af1158015620007f1573d6000803e3d6000fd5b505060085460055460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b1580156200083f57600080fd5b505af115801562000854573d6000803e3d6000fd5b505060075460095460405163a22cb46560e01b81526001600160a01b039182166004820152600160248201529116925063a22cb4659150604401600060405180830381600087803b158015620008a957600080fd5b505af1158015620008be573d6000803e3d6000fd5b50505050600660009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b81526004016020604051808303816000875af115801562000918573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200093e919062001891565b60015560065460408051631249c58b60e01b815290516001600160a01b0390921691631249c58b9160048082019260209290919082900301816000875af11580156200098e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009b4919062001891565b60025560075460408051631249c58b60e01b815290516001600160a01b0390921691631249c58b9160048082019260209290919082900301816000875af115801562000a04573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a2a919062001891565b60035560075460408051631249c58b60e01b815290516001600160a01b0390921691631249c58b9160048082019260209290919082900301816000875af115801562000a7a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000aa0919062001891565b600490815560068054600a8054600181810183557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a891820180546001600160a01b03199081166001600160a01b03968716179091559454835480830185558301805487169186169190911790556007805484548084019095559390920180548616938516939093179092558154600c805480850182557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c79081019290925560025481548086018355830155600354815480860190925591015554600b80548084019091557f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180549094169216919091179091559054600d805492830181556000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb590910155565b600954604051634f48a9e160e11b81526000916001600160a01b031690639e9153c29062000c2b90600a90600c9068056bc75e2d6310000090600401620017cb565b6020604051808303816000875af115801562000c4b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c71919062001891565b600954604051632500ed8d60e21b8152600481018390529192506000916001600160a01b0390911690639403b63490602401600060405180830381865afa15801562000cc1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000ceb919081019062001ba0565b905060005b81515181101562000d835762000d6e8260000151828151811062000d185762000d1862001bd9565b60200260200101516001600160a01b0316636352211e8460200151848151811062000d475762000d4762001bd9565b60200260200101516040518263ffffffff1660e01b81526004016200037f91815260200190565b8062000d7a8162001bef565b91505062000cf0565b5060608101516040516370a0823160e01b815230600482015262000dba916001600160a01b0316906370a0823190602401620004d7565b606081015160095460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562000e13573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e39919062001c19565b5060095460405163049878f360e01b8152600481018490526001600160a01b039091169063049878f390602401600060405180830381600087803b15801562000e8157600080fd5b505af115801562000e96573d6000803e3d6000fd5b5050505060005b81515181101562000f305762000f1b8260000151828151811062000ec55762000ec562001bd9565b60200260200101516001600160a01b0316636352211e8460200151848151811062000ef45762000ef462001bd9565b60200260200101516040518263ffffffff1660e01b8152600401620000f991815260200190565b8062000f278162001bef565b91505062000e9d565b5060608101516040516370a0823160e01b815230600482015262000fad916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000f7f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fa5919062001891565b6000620014a3565b600954604051632500ed8d60e21b8152600481018490526001600160a01b0390911690639403b63490602401600060405180830381865afa15801562000ff7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001021919081019062001ba0565b905060005b81515181101562001074576200105f82602001516000815181106200104f576200104f62001bd9565b60200260200101516000620014a3565b806200106b8162001bef565b91505062001026565b505050565b60008054610100900460ff16156200109a5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620011a95760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916200112b917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001c3d565b60408051601f1981840301815290829052620011479162001c70565b6000604051808303816000865af19150503d806000811462001186576040519150601f19603f3d011682016040523d82523d6000602084013e6200118b565b606091505b5091505080806020019051810190620011a5919062001c19565b9150505b919050565b600954604051634f48a9e160e11b81526001600160a01b0390911690639e9153c290620011ef90600a90600c9068056bc75e2d6310000090600401620017cb565b6020604051808303816000875af11580156200120f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001235919062001891565b50600954604051634f48a9e160e11b81526001600160a01b0390911690639e9153c2906200127790600b90600d9068056bc75e2d6310000090600401620017cb565b6020604051808303816000875af115801562001297573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012bd919062001891565b50600954604080516397331bf960e01b815290516000926001600160a01b0316916397331bf991600480830192869291908290030181865afa15801562001308573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001332919081019062001c8e565b905060005b81518110156200052b576200138260006001600160a01b031683838151811062001365576200136562001bd9565b6020026020010151606001516001600160a01b0316141562001588565b806200138e8162001bef565b91505062001337565b806001600160a01b0316826001600160a01b0316146200052b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200141f9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162001458919062001d4b565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162001491919062001d90565b60405180910390a16200052b62001603565b8082146200052b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620015169060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516200154f919062001dbb565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162001491919062001df4565b8062001600577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620015ee9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16200160062001603565b50565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620017055760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620016a0929160200162001c3d565b60408051601f1981840301815290829052620016bc9162001c70565b6000604051808303816000865af19150503d8060008114620016fb576040519150601f19603f3d011682016040523d82523d6000602084013e62001700565b606091505b505050505b6000805461ff001916610100179055565b605c8062001e2083390190565b610f218062001e7c83390190565b6125e08062002d9d83390190565b6001600160a01b03811681146200160057600080fd5b8051620011a9816200173f565b6000602082840312156200177557600080fd5b815162001782816200173f565b9392505050565b6000815480845260208085019450836000528060002060005b83811015620017c057815487529582019560019182019101620017a2565b509495945050505050565b600060a0820160a0835280865480835260c08501915087600052602092508260002060005b82811015620018175781546001600160a01b031684529284019260019182019101620017f0565b505050838103828501526200182d818762001789565b915050836040840152828103606084015262001868816012815271119c9858dd1a5bdb985b1a5cd9590813919560721b602082015260400190565b838103608085015260048152634652414360e01b60208201529050604081019695505050505050565b600060208284031215620018a457600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715620018e757620018e7620018ab565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715620019195762001919620018ab565b604052919050565b600067ffffffffffffffff8211156200193e576200193e620018ab565b5060051b60200190565b600082601f8301126200195a57600080fd5b81516020620019736200196d8362001921565b620018ed565b82815260059290921b840181019181810190868411156200199357600080fd5b8286015b84811015620019bb578051620019ad816200173f565b835291830191830162001997565b509695505050505050565b600082601f830112620019d857600080fd5b81516020620019eb6200196d8362001921565b82815260059290921b8401810191818101908684111562001a0b57600080fd5b8286015b84811015620019bb578051835291830191830162001a0f565b60005b8381101562001a4557818101518382015260200162001a2b565b8381111562001a55576000848401525b50505050565b600082601f83011262001a6d57600080fd5b815167ffffffffffffffff81111562001a8a5762001a8a620018ab565b62001a9f601f8201601f1916602001620018ed565b81815284602083860101111562001ab557600080fd5b62001ac882602083016020870162001a28565b949350505050565b600060c0828403121562001ae357600080fd5b62001aed620018c1565b9050815167ffffffffffffffff8082111562001b0857600080fd5b62001b168583860162001948565b8352602084015191508082111562001b2d57600080fd5b62001b3b85838601620019c6565b60208401526040840151604084015262001b586060850162001755565b606084015262001b6b6080850162001755565b608084015260a084015191508082111562001b8557600080fd5b5062001b948482850162001a5b565b60a08301525092915050565b60006020828403121562001bb357600080fd5b815167ffffffffffffffff81111562001bcb57600080fd5b62001ac88482850162001ad0565b634e487b7160e01b600052603260045260246000fd5b600060001982141562001c1257634e487b7160e01b600052601160045260246000fd5b5060010190565b60006020828403121562001c2c57600080fd5b815180151581146200178257600080fd5b6001600160e01b031983168152815160009062001c6281600485016020870162001a28565b919091016004019392505050565b6000825162001c8481846020870162001a28565b9190910192915050565b6000602080838503121562001ca257600080fd5b825167ffffffffffffffff8082111562001cbb57600080fd5b818501915085601f83011262001cd057600080fd5b815162001ce16200196d8262001921565b81815260059190911b8301840190848101908883111562001d0157600080fd5b8585015b8381101562001d3e5780518581111562001d1f5760008081fd5b62001d2f8b89838a010162001ad0565b84525091860191860162001d05565b5098975050505050505050565b60408152600062001d7660408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062001d7660408301600a815269080808081058dd1d585b60b21b602082015260400190565b60408152600062001de660408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600062001de660408301600a815269080808081058dd1d585b60b21b60208201526040019056fe6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220015a110f8b4dbcf0243886656c04bb7bcd82c653f3b6a32b6500d8f2a2104ff464736f6c634300080a0033608060405260016006553480156200001657600080fd5b50604080518082018252600881526715195cdd0813919560c21b602080830191825283518085019094526004845263151154d560e21b908401528151919291620000639160009162000082565b5080516200007990600190602084019062000082565b50505062000165565b828054620000909062000128565b90600052602060002090601f016020900481019282620000b45760008555620000ff565b82601f10620000cf57805160ff1916838001178555620000ff565b82800160010185558215620000ff579182015b82811115620000ff578251825591602001919060010190620000e2565b506200010d92915062000111565b5090565b5b808211156200010d576000815560010162000112565b600181811c908216806200013d57607f821691505b602082108114156200015f57634e487b7160e01b600052602260045260246000fd5b50919050565b610dac80620001756000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806342842e0e11610097578063a22cb46511610066578063a22cb46514610200578063b88d4fde14610213578063c87b56dd14610226578063e985e9c51461025357600080fd5b806342842e0e146101bf5780636352211e146101d257806370a08231146101e557806395d89b41146101f857600080fd5b8063095ea7b3116100d3578063095ea7b3146101785780631249c58b1461018d57806317d70f7c146101a357806323b872dd146101ac57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004610a6d565b610281565b60405190151581526020015b60405180910390f35b61012a6102d3565b6040516101199190610a91565b610160610145366004610ae6565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610119565b61018b610186366004610b16565b610361565b005b610195610448565b604051908152602001610119565b61019560065481565b61018b6101ba366004610b40565b61046f565b61018b6101cd366004610b40565b610636565b6101606101e0366004610ae6565b61072e565b6101956101f3366004610b7c565b610785565b61012a6107e8565b61018b61020e366004610b97565b6107f5565b61018b610221366004610bd3565b610861565b61012a610234366004610ae6565b506040805180820190915260048152631d195cdd60e21b602082015290565b61010d610261366004610c6e565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b0319831614806102b257506380ac58cd60e01b6001600160e01b03198316145b806102cd5750635b5e139f60e01b6001600160e01b03198316145b92915050565b600080546102e090610ca1565b80601f016020809104026020016040519081016040528092919081815260200182805461030c90610ca1565b80156103595780601f1061032e57610100808354040283529160200191610359565b820191906000526020600020905b81548152906001019060200180831161033c57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b0316338114806103aa57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6103ec5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061045633600654610949565b6006805490600061046683610cdc565b91905055905090565b6000818152600260205260409020546001600160a01b038481169116146104c55760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016103e3565b6001600160a01b03821661050f5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016103e3565b336001600160a01b038416148061054957506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061056a57506000818152600460205260409020546001600160a01b031633145b6105a75760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016103e3565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61064183838361046f565b6001600160a01b0382163b15806106ea5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156106ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106de9190610d05565b6001600160e01b031916145b6107295760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016103e3565b505050565b6000818152600260205260409020546001600160a01b0316806107805760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016103e3565b919050565b60006001600160a01b0382166107cc5760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016103e3565b506001600160a01b031660009081526003602052604090205490565b600180546102e090610ca1565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61086c85858561046f565b6001600160a01b0384163b15806109035750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906108b49033908a90899089908990600401610d22565b6020604051808303816000875af11580156108d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f79190610d05565b6001600160e01b031916145b6109425760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016103e3565b5050505050565b6001600160a01b0382166109935760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016103e3565b6000818152600260205260409020546001600160a01b0316156109e95760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016103e3565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610a6a57600080fd5b50565b600060208284031215610a7f57600080fd5b8135610a8a81610a54565b9392505050565b600060208083528351808285015260005b81811015610abe57858101830151858201604001528201610aa2565b81811115610ad0576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215610af857600080fd5b5035919050565b80356001600160a01b038116811461078057600080fd5b60008060408385031215610b2957600080fd5b610b3283610aff565b946020939093013593505050565b600080600060608486031215610b5557600080fd5b610b5e84610aff565b9250610b6c60208501610aff565b9150604084013590509250925092565b600060208284031215610b8e57600080fd5b610a8a82610aff565b60008060408385031215610baa57600080fd5b610bb383610aff565b915060208301358015158114610bc857600080fd5b809150509250929050565b600080600080600060808688031215610beb57600080fd5b610bf486610aff565b9450610c0260208701610aff565b935060408601359250606086013567ffffffffffffffff80821115610c2657600080fd5b818801915088601f830112610c3a57600080fd5b813581811115610c4957600080fd5b896020828501011115610c5b57600080fd5b9699959850939650602001949392505050565b60008060408385031215610c8157600080fd5b610c8a83610aff565b9150610c9860208401610aff565b90509250929050565b600181811c90821680610cb557607f821691505b60208210811415610cd657634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610cfe57634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215610d1757600080fd5b8151610a8a81610a54565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f8501168301019050969550505050505056fea2646970667358221220122746529cdb8eca1992450c564a62c00bd01a184cb85d7a28976d126a66179764736f6c634300080a003360806040526000805534801561001457600080fd5b506125bc806100246000396000f3fe608060405260043610620000795760003560e01c80639403b63411620000545780639403b634146200010d57806397331bf914620001415780639e9153c21462000168578063d6df9e5d146200018e57600080fd5b8063049878f3146200007e578063150b7a02146200009757806332f19a5c14620000d6575b600080fd5b620000956200008f36600462000f08565b620001a6565b005b620000b8620000a836600462000fcb565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b348015620000e357600080fd5b50620000fb620000f536600462000f08565b6200054c565b604051620000cd9493929190620010a4565b3480156200011a57600080fd5b50620001326200012c36600462000f08565b62000616565b604051620000cd9190620011e9565b3480156200014e57600080fd5b5062000159620007be565b604051620000cd919062001205565b6200017f62000179366004620012dd565b62000a00565b604051908152602001620000cd565b3480156200019b57600080fd5b506200017f60005481565b60008181526001602090815260408083208151815460e09481028201850190935260c081018381529093919284928491908401828280156200021257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620001f3575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156200026c57602002820191906000526020600020905b81548152602001906001019080831162000257575b50505091835250506002820154602082015260038201546001600160a01b0390811660408301526004830154166060820152600582018054608090920191620002b590620013ac565b80601f0160208091040260200160405190810160405280929190818152602001828054620002e390620013ac565b8015620003345780601f10620003085761010080835404028352916020019162000334565b820191906000526020600020905b8154815290600101906020018083116200031657829003601f168201915b5050509190925250505060608101519091506001600160a01b0316620003935760405162461bcd60e51b815260206004820152600f60248201526e1d985d5b1d081b9bdd08199bdd5b99608a1b60448201526064015b60405180910390fd5b600082815260016020526040812090620003ae828262000d15565b620003be60018301600062000d15565b6000600283018190556003830180546001600160a01b03199081169091556004840180549091169055620003f790600584019062000d38565b50506060810151604080830151905163079cc67960e41b815233600482015260248101919091526001600160a01b03909116906379cc679090604401600060405180830381600087803b1580156200044e57600080fd5b505af115801562000463573d6000803e3d6000fd5b5050505060005b815151811015620005475781518051829081106200048c576200048c620013e3565b60200260200101516001600160a01b03166323b872dd303385602001518581518110620004bd57620004bd620013e3565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156200051857600080fd5b505af11580156200052d573d6000803e3d6000fd5b5050505080806200053e90620013f9565b9150506200046a565b505050565b600160205260009081526040902060028101546003820154600483015460058401805493946001600160a01b039384169493909216926200058d90620013ac565b80601f0160208091040260200160405190810160405280929190818152602001828054620005bb90620013ac565b80156200060c5780601f10620005e0576101008083540402835291602001916200060c565b820191906000526020600020905b815481529060010190602001808311620005ee57829003601f168201915b5050505050905084565b6200062062000d77565b6000828152600160209081526040918290208251815460e09381028201840190945260c0810184815290939192849284918401828280156200068c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200066d575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015620006e657602002820191906000526020600020905b815481526020019060010190808311620006d1575b50505091835250506002820154602082015260038201546001600160a01b03908116604083015260048301541660608201526005820180546080909201916200072f90620013ac565b80601f01602080910402602001604051908101604052809291908181526020018280546200075d90620013ac565b8015620007ae5780601f106200078257610100808354040283529160200191620007ae565b820191906000526020600020905b8154815290600101906020018083116200079057829003601f168201915b5050505050815250509050919050565b60606000805467ffffffffffffffff811115620007df57620007df62000f38565b6040519080825280602002602001820160405280156200081c57816020015b6200080862000d77565b815260200190600190039081620007fe5790505b50905060005b600054811015620009fa576000818152600160209081526040918290208251815460e09381028201840190945260c0810184815290939192849284918401828280156200089957602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200087a575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015620008f357602002820191906000526020600020905b815481526020019060010190808311620008de575b50505091835250506002820154602082015260038201546001600160a01b03908116604083015260048301541660608201526005820180546080909201916200093c90620013ac565b80601f01602080910402602001604051908101604052809291908181526020018280546200096a90620013ac565b8015620009bb5780601f106200098f57610100808354040283529160200191620009bb565b820191906000526020600020905b8154815290600101906020018083116200099d57829003601f168201915b505050505081525050828281518110620009d957620009d9620013e3565b60200260200101819052508080620009f190620013f9565b91505062000822565b50919050565b600086851462000a435760405162461bcd60e51b815260206004820152600d60248201526c1a5b9d985b1a59081d985d5b1d609a1b60448201526064016200038a565b60008383863360405162000a579062000dbf565b62000a66949392919062001423565b604051809103906000f08015801562000a83573d6000803e3d6000fd5b50905060006040518060c001604052808b8b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505050908252506040805160208b810282810182019093528b82529283019290918c918c918291850190849080828437600092019190915250505090825250602081018890526001600160a01b0384166040808301919091523360608301526080909101879052519091507f50489fdde3c8e9ef8c96f6d5efa760d912efe3b0d661909b4673175f9a64d5d99062000b5c908390620011e9565b60405180910390a160008054815260016020908152604090912082518051849362000b8c92849291019062000dcd565b50602082810151805162000ba7926001850192019062000e37565b506040820151600282015560608201516003820180546001600160a01b039283166001600160a01b031991821617909155608084015160048401805491909316911617905560a0820151805162000c0991600584019160209091019062000e75565b5090505060005b8981101562000cf1578a8a8281811062000c2e5762000c2e620013e3565b905060200201602081019062000c4591906200146e565b6001600160a01b03166323b872dd33308c8c8681811062000c6a5762000c6a620013e3565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b15801562000cc257600080fd5b505af115801562000cd7573d6000803e3d6000fd5b50505050808062000ce890620013f9565b91505062000c10565b5060008054908062000d0383620013f9565b909155509a9950505050505050505050565b508054600082559060005260206000209081019062000d35919062000ef1565b50565b50805462000d4690620013ac565b6000825580601f1062000d57575050565b601f01602090049060005260206000209081019062000d35919062000ef1565b6040518060c0016040528060608152602001606081526020016000815260200160006001600160a01b0316815260200160006001600160a01b03168152602001606081525090565b6110f8806200148f83390190565b82805482825590600052602060002090810192821562000e25579160200282015b8281111562000e2557825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000dee565b5062000e3392915062000ef1565b5090565b82805482825590600052602060002090810192821562000e25579160200282015b8281111562000e2557825182559160200191906001019062000e58565b82805462000e8390620013ac565b90600052602060002090601f01602090048101928262000ea7576000855562000e25565b82601f1062000ec257805160ff191683800117855562000e25565b8280016001018555821562000e25579182018281111562000e2557825182559160200191906001019062000e58565b5b8082111562000e33576000815560010162000ef2565b60006020828403121562000f1b57600080fd5b5035919050565b6001600160a01b038116811462000d3557600080fd5b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111562000f6c5762000f6c62000f38565b604051601f8501601f19908116603f0116810190828211818310171562000f975762000f9762000f38565b8160405280935085815286868601111562000fb157600080fd5b858560208301376000602087830101525050509392505050565b6000806000806080858703121562000fe257600080fd5b843562000fef8162000f22565b93506020850135620010018162000f22565b925060408501359150606085013567ffffffffffffffff8111156200102557600080fd5b8501601f810187136200103757600080fd5b620010488782356020840162000f4e565b91505092959194509250565b6000815180845260005b818110156200107c576020818501810151868301820152016200105e565b818111156200108f576000602083870101525b50601f01601f19169290920160200192915050565b8481526001600160a01b03848116602083015283166040820152608060608201819052600090620010d89083018462001054565b9695505050505050565b600081518084526020808501945080840160005b838110156200111457815187529582019590820190600101620010f6565b509495945050505050565b805160c080845281519084018190526000916020919082019060e0860190845b81811015620011665783516001600160a01b0316835292840192918401916001016200113f565b505082850151915085810383870152620011818183620010e2565b92505050604083015160408501526060830151620011aa60608601826001600160a01b03169052565b506080830151620011c660808601826001600160a01b03169052565b5060a083015184820360a0860152620011e0828262001054565b95945050505050565b602081526000620011fe60208301846200111f565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200125e57603f198886030184526200124b8583516200111f565b945092850192908501906001016200122c565b5092979650505050505050565b60008083601f8401126200127e57600080fd5b50813567ffffffffffffffff8111156200129757600080fd5b6020830191508360208260051b8501011115620012b357600080fd5b9250929050565b600082601f830112620012cc57600080fd5b620011fe8383356020850162000f4e565b600080600080600080600060a0888a031215620012f957600080fd5b873567ffffffffffffffff808211156200131257600080fd5b620013208b838c016200126b565b909950975060208a01359150808211156200133a57600080fd5b620013488b838c016200126b565b909750955060408a0135945060608a01359150808211156200136957600080fd5b620013778b838c01620012ba565b935060808a01359150808211156200138e57600080fd5b506200139d8a828b01620012ba565b91505092959891949750929550565b600181811c90821680620013c157607f821691505b60208210811415620009fa57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006000198214156200141c57634e487b7160e01b600052601160045260246000fd5b5060010190565b60808152600062001438608083018762001054565b82810360208401526200144c818762001054565b604084019590955250506001600160a01b039190911660609091015292915050565b6000602082840312156200148157600080fd5b8135620011fe8162000f2256fe60e0604052604051620010f8380380620010f8833981016040819052620000269162000308565b8383601282600090805190602001906200004292919062000195565b5081516200005890600190602085019062000195565b5060ff81166080524660a0526200006e6200008c565b60c052506200008291508290508362000128565b50505050620004a5565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000c09190620003da565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546200013c91906200047e565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b828054620001a3906200039d565b90600052602060002090601f016020900481019282620001c7576000855562000212565b82601f10620001e257805160ff191683800117855562000212565b8280016001018555821562000212579182015b8281111562000212578251825591602001919060010190620001f5565b506200022092915062000224565b5090565b5b8082111562000220576000815560010162000225565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200026357600080fd5b81516001600160401b03808211156200028057620002806200023b565b604051601f8301601f19908116603f01168101908282118183101715620002ab57620002ab6200023b565b81604052838152602092508683858801011115620002c857600080fd5b600091505b83821015620002ec5785820183015181830184015290820190620002cd565b83821115620002fe5760008385830101525b9695505050505050565b600080600080608085870312156200031f57600080fd5b84516001600160401b03808211156200033757600080fd5b620003458883890162000251565b955060208701519150808211156200035c57600080fd5b506200036b8782880162000251565b60408701516060880151919550935090506001600160a01b03811681146200039257600080fd5b939692955090935050565b600181811c90821680620003b257607f821691505b60208210811415620003d457634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c915080831680620003f757607f831692505b60208084108214156200041857634e487b7160e01b86526022600452602486fd5b8180156200042f5760018114620004415762000470565b60ff1986168952848901965062000470565b60008a81526020902060005b86811015620004685781548b8201529085019083016200044d565b505084890196505b509498975050505050505050565b60008219821115620004a057634e487b7160e01b600052601160045260246000fd5b500190565b60805160a05160c051610c23620004d560003960006104e2015260006104ad015260006101780152610c236000f3fe6080604052600436106100c25760003560e01c806370a082311161007f57806395d89b411161005957806395d89b4114610230578063a9059cbb14610245578063d505accf14610265578063dd62ed3e1461028557600080fd5b806370a08231146101c157806379cc6790146101ee5780637ecebe001461020357600080fd5b806306fdde03146100c7578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610146578063313ce567146101665780633644e515146101ac575b600080fd5b3480156100d357600080fd5b506100dc6102bd565b6040516100e99190610952565b60405180910390f35b3480156100fe57600080fd5b5061011261010d3660046109c3565b61034b565b60405190151581526020016100e9565b34801561012e57600080fd5b5061013860025481565b6040519081526020016100e9565b34801561015257600080fd5b506101126101613660046109ed565b6103b7565b34801561017257600080fd5b5061019a7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100e9565b3480156101b857600080fd5b506101386104a9565b3480156101cd57600080fd5b506101386101dc366004610a29565b60036020526000908152604090205481565b6102016101fc3660046109c3565b610504565b005b34801561020f57600080fd5b5061013861021e366004610a29565b60056020526000908152604090205481565b34801561023c57600080fd5b506100dc61056f565b34801561025157600080fd5b506101126102603660046109c3565b61057c565b34801561027157600080fd5b50610201610280366004610a4b565b6105f4565b34801561029157600080fd5b506101386102a0366004610abe565b600460209081526000928352604080842090915290825290205481565b600080546102ca90610af1565b80601f01602080910402602001604051908101604052809291908181526020018280546102f690610af1565b80156103435780601f1061031857610100808354040283529160200191610343565b820191906000526020600020905b81548152906001019060200180831161032657829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103a69086815260200190565b60405180910390a350600192915050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610413576103ee8382610b2c565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b0385166000908152600360205260408120805485929061043b908490610b2c565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104969087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104df576104da61083d565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b038216600090815260046020908152604080832033845290915290205460001981146105605761053b8282610b2c565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b61056a83836108d7565b505050565b600180546102ca90610af1565b3360009081526003602052604081208054839190839061059d908490610b2c565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103a69086815260200190565b428410156106495760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b600060016106556104a9565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610761573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906107975750876001600160a01b0316816001600160a01b0316145b6107d45760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610640565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161086f9190610b51565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b038216600090815260036020526040812080548392906108ff908490610b2c565b90915550506002805482900390556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b8181101561097f57858101830151858201604001528201610963565b81811115610991576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146109be57600080fd5b919050565b600080604083850312156109d657600080fd5b6109df836109a7565b946020939093013593505050565b600080600060608486031215610a0257600080fd5b610a0b846109a7565b9250610a19602085016109a7565b9150604084013590509250925092565b600060208284031215610a3b57600080fd5b610a44826109a7565b9392505050565b600080600080600080600060e0888a031215610a6657600080fd5b610a6f886109a7565b9650610a7d602089016109a7565b95506040880135945060608801359350608088013560ff81168114610aa157600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610ad157600080fd5b610ada836109a7565b9150610ae8602084016109a7565b90509250929050565b600181811c90821680610b0557607f821691505b60208210811415610b2657634e487b7160e01b600052602260045260246000fd5b50919050565b600082821015610b4c57634e487b7160e01b600052601160045260246000fd5b500390565b600080835481600182811c915080831680610b6d57607f831692505b6020808410821415610b8d57634e487b7160e01b86526022600452602486fd5b818015610ba15760018114610bb257610bdf565b60ff19861689528489019650610bdf565b60008a81526020902060005b86811015610bd75781548b820152908501908301610bbe565b505084890196505b50949897505050505050505056fea264697066735822122080ae339d0757005696f0b9b558cac9015c48671d77f4f5a7ca12030bb9d19f2f64736f6c634300080a0033a26469706673582212205eaf8cd56a8c06eb6950ee99face9c9bacb10ca372f78f7890761a79e6cbf95a64736f6c634300080a0033a2646970667358221220df44bcb2d29c05172ac1bd61b6a619ab0967f20b770393aa2702573c1e5b6aaf64736f6c634300080a0033",
    "sourceMap": "611:4280:10:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;857:35:10;;;-1:-1:-1;;;;;;857:35:10;1671:64:0;857:35:10;;;611:4280;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b50600436106200006a5760003560e01c8063085d70ea146200006f5780630a9254e4146200007b5780635ddea6a81462000085578063ba414fa6146200008f578063f678193714620000ad578063fa7626d414620000b7575b600080fd5b62000079620000c5565b005b620000796200052f565b6200007962000be9565b6200009962001079565b604051901515815260200160405180910390f35b62000079620011ae565b600054620000999060ff1681565b6006546001546040516331a9108f60e11b8152600481019190915262000144916001600160a01b031690636352211e906024015b602060405180830381865afa15801562000117573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013d919062001762565b3062001397565b60085460405163248e63e160e11b8152600160048201819052602482018190526000604483015260648201526001600160a01b039091169063491cc7c290608401600060405180830381600087803b158015620001a057600080fd5b505af1158015620001b5573d6000803e3d6000fd5b505060405168056bc75e2d631000008152309250600091507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3600954604051634f48a9e160e11b81526000916001600160a01b031690639e9153c2906200023c90600a90600c9068056bc75e2d6310000090600401620017cb565b6020604051808303816000875af11580156200025c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000282919062001891565b600954604051632500ed8d60e21b8152600481018390529192506000916001600160a01b0390911690639403b63490602401600060405180830381865afa158015620002d2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620002fc919081019062001ba0565b905060005b8151518110156200048c57620003d58260000151828151811062000329576200032962001bd9565b60200260200101516001600160a01b0316636352211e600c848154811062000355576200035562001bd9565b90600052602060002001546040518263ffffffff1660e01b81526004016200037f91815260200190565b602060405180830381865afa1580156200039d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003c3919062001762565b6009546001600160a01b031662001397565b6200042b82600001518281518110620003f257620003f262001bd9565b6020026020010151600a838154811062000410576200041062001bd9565b6000918252602090912001546001600160a01b031662001397565b620004778260200151828151811062000448576200044862001bd9565b6020026020010151600c838154811062000466576200046662001bd9565b9060005260206000200154620014a3565b80620004838162001bef565b91505062000301565b50620004a6816040015168056bc75e2d63100000620014a3565b60608101516040516370a0823160e01b81523060048201526200052b916001600160a01b0316906370a08231906024015b602060405180830381865afa158015620004f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200051b919062001891565b68056bc75e2d63100000620014a3565b5050565b6040516200053d9062001716565b604051809103906000f0801580156200055a573d6000803e3d6000fd5b50600580546001600160a01b0319166001600160a01b0392909216919091179055604051620005899062001723565b604051809103906000f080158015620005a6573d6000803e3d6000fd5b50600680546001600160a01b0319166001600160a01b0392909216919091179055604051620005d59062001723565b604051809103906000f080158015620005f2573d6000803e3d6000fd5b50600780546001600160a01b0319166001600160a01b0392909216919091179055604051620006219062001731565b604051809103906000f0801580156200063e573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392831690811790915560065460405163a22cb46560e01b81526004810192909252600160248301529091169063a22cb46590604401600060405180830381600087803b158015620006a557600080fd5b505af1158015620006ba573d6000803e3d6000fd5b505060075460095460405163a22cb46560e01b81526001600160a01b039182166004820152600160248201529116925063a22cb4659150604401600060405180830381600087803b1580156200070f57600080fd5b505af115801562000724573d6000803e3d6000fd5b505060085460055460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b1580156200077257600080fd5b505af115801562000787573d6000803e3d6000fd5b505060065460095460405163a22cb46560e01b81526001600160a01b039182166004820152600160248201529116925063a22cb4659150604401600060405180830381600087803b158015620007dc57600080fd5b505af1158015620007f1573d6000803e3d6000fd5b505060085460055460405163ca669fa760e01b81526001600160a01b0391821660048201529116925063ca669fa79150602401600060405180830381600087803b1580156200083f57600080fd5b505af115801562000854573d6000803e3d6000fd5b505060075460095460405163a22cb46560e01b81526001600160a01b039182166004820152600160248201529116925063a22cb4659150604401600060405180830381600087803b158015620008a957600080fd5b505af1158015620008be573d6000803e3d6000fd5b50505050600660009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b81526004016020604051808303816000875af115801562000918573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200093e919062001891565b60015560065460408051631249c58b60e01b815290516001600160a01b0390921691631249c58b9160048082019260209290919082900301816000875af11580156200098e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009b4919062001891565b60025560075460408051631249c58b60e01b815290516001600160a01b0390921691631249c58b9160048082019260209290919082900301816000875af115801562000a04573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a2a919062001891565b60035560075460408051631249c58b60e01b815290516001600160a01b0390921691631249c58b9160048082019260209290919082900301816000875af115801562000a7a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000aa0919062001891565b600490815560068054600a8054600181810183557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a891820180546001600160a01b03199081166001600160a01b03968716179091559454835480830185558301805487169186169190911790556007805484548084019095559390920180548616938516939093179092558154600c805480850182557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c79081019290925560025481548086018355830155600354815480860190925591015554600b80548084019091557f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180549094169216919091179091559054600d805492830181556000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb590910155565b600954604051634f48a9e160e11b81526000916001600160a01b031690639e9153c29062000c2b90600a90600c9068056bc75e2d6310000090600401620017cb565b6020604051808303816000875af115801562000c4b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c71919062001891565b600954604051632500ed8d60e21b8152600481018390529192506000916001600160a01b0390911690639403b63490602401600060405180830381865afa15801562000cc1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000ceb919081019062001ba0565b905060005b81515181101562000d835762000d6e8260000151828151811062000d185762000d1862001bd9565b60200260200101516001600160a01b0316636352211e8460200151848151811062000d475762000d4762001bd9565b60200260200101516040518263ffffffff1660e01b81526004016200037f91815260200190565b8062000d7a8162001bef565b91505062000cf0565b5060608101516040516370a0823160e01b815230600482015262000dba916001600160a01b0316906370a0823190602401620004d7565b606081015160095460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562000e13573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e39919062001c19565b5060095460405163049878f360e01b8152600481018490526001600160a01b039091169063049878f390602401600060405180830381600087803b15801562000e8157600080fd5b505af115801562000e96573d6000803e3d6000fd5b5050505060005b81515181101562000f305762000f1b8260000151828151811062000ec55762000ec562001bd9565b60200260200101516001600160a01b0316636352211e8460200151848151811062000ef45762000ef462001bd9565b60200260200101516040518263ffffffff1660e01b8152600401620000f991815260200190565b8062000f278162001bef565b91505062000e9d565b5060608101516040516370a0823160e01b815230600482015262000fad916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000f7f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fa5919062001891565b6000620014a3565b600954604051632500ed8d60e21b8152600481018490526001600160a01b0390911690639403b63490602401600060405180830381865afa15801562000ff7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001021919081019062001ba0565b905060005b81515181101562001074576200105f82602001516000815181106200104f576200104f62001bd9565b60200260200101516000620014a3565b806200106b8162001bef565b91505062001026565b505050565b60008054610100900460ff16156200109a5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620011a95760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916200112b917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001c3d565b60408051601f1981840301815290829052620011479162001c70565b6000604051808303816000865af19150503d806000811462001186576040519150601f19603f3d011682016040523d82523d6000602084013e6200118b565b606091505b5091505080806020019051810190620011a5919062001c19565b9150505b919050565b600954604051634f48a9e160e11b81526001600160a01b0390911690639e9153c290620011ef90600a90600c9068056bc75e2d6310000090600401620017cb565b6020604051808303816000875af11580156200120f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001235919062001891565b50600954604051634f48a9e160e11b81526001600160a01b0390911690639e9153c2906200127790600b90600d9068056bc75e2d6310000090600401620017cb565b6020604051808303816000875af115801562001297573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012bd919062001891565b50600954604080516397331bf960e01b815290516000926001600160a01b0316916397331bf991600480830192869291908290030181865afa15801562001308573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001332919081019062001c8e565b905060005b81518110156200052b576200138260006001600160a01b031683838151811062001365576200136562001bd9565b6020026020010151606001516001600160a01b0316141562001588565b806200138e8162001bef565b91505062001337565b806001600160a01b0316826001600160a01b0316146200052b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516200141f9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162001458919062001d4b565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162001491919062001d90565b60405180910390a16200052b62001603565b8082146200052b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620015169060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516200154f919062001dbb565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162001491919062001df4565b8062001600577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620015ee9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16200160062001603565b50565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620017055760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620016a0929160200162001c3d565b60408051601f1981840301815290829052620016bc9162001c70565b6000604051808303816000865af19150503d8060008114620016fb576040519150601f19603f3d011682016040523d82523d6000602084013e62001700565b606091505b505050505b6000805461ff001916610100179055565b605c8062001e2083390190565b610f218062001e7c83390190565b6125e08062002d9d83390190565b6001600160a01b03811681146200160057600080fd5b8051620011a9816200173f565b6000602082840312156200177557600080fd5b815162001782816200173f565b9392505050565b6000815480845260208085019450836000528060002060005b83811015620017c057815487529582019560019182019101620017a2565b509495945050505050565b600060a0820160a0835280865480835260c08501915087600052602092508260002060005b82811015620018175781546001600160a01b031684529284019260019182019101620017f0565b505050838103828501526200182d818762001789565b915050836040840152828103606084015262001868816012815271119c9858dd1a5bdb985b1a5cd9590813919560721b602082015260400190565b838103608085015260048152634652414360e01b60208201529050604081019695505050505050565b600060208284031215620018a457600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715620018e757620018e7620018ab565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715620019195762001919620018ab565b604052919050565b600067ffffffffffffffff8211156200193e576200193e620018ab565b5060051b60200190565b600082601f8301126200195a57600080fd5b81516020620019736200196d8362001921565b620018ed565b82815260059290921b840181019181810190868411156200199357600080fd5b8286015b84811015620019bb578051620019ad816200173f565b835291830191830162001997565b509695505050505050565b600082601f830112620019d857600080fd5b81516020620019eb6200196d8362001921565b82815260059290921b8401810191818101908684111562001a0b57600080fd5b8286015b84811015620019bb578051835291830191830162001a0f565b60005b8381101562001a4557818101518382015260200162001a2b565b8381111562001a55576000848401525b50505050565b600082601f83011262001a6d57600080fd5b815167ffffffffffffffff81111562001a8a5762001a8a620018ab565b62001a9f601f8201601f1916602001620018ed565b81815284602083860101111562001ab557600080fd5b62001ac882602083016020870162001a28565b949350505050565b600060c0828403121562001ae357600080fd5b62001aed620018c1565b9050815167ffffffffffffffff8082111562001b0857600080fd5b62001b168583860162001948565b8352602084015191508082111562001b2d57600080fd5b62001b3b85838601620019c6565b60208401526040840151604084015262001b586060850162001755565b606084015262001b6b6080850162001755565b608084015260a084015191508082111562001b8557600080fd5b5062001b948482850162001a5b565b60a08301525092915050565b60006020828403121562001bb357600080fd5b815167ffffffffffffffff81111562001bcb57600080fd5b62001ac88482850162001ad0565b634e487b7160e01b600052603260045260246000fd5b600060001982141562001c1257634e487b7160e01b600052601160045260246000fd5b5060010190565b60006020828403121562001c2c57600080fd5b815180151581146200178257600080fd5b6001600160e01b031983168152815160009062001c6281600485016020870162001a28565b919091016004019392505050565b6000825162001c8481846020870162001a28565b9190910192915050565b6000602080838503121562001ca257600080fd5b825167ffffffffffffffff8082111562001cbb57600080fd5b818501915085601f83011262001cd057600080fd5b815162001ce16200196d8262001921565b81815260059190911b8301840190848101908883111562001d0157600080fd5b8585015b8381101562001d3e5780518581111562001d1f5760008081fd5b62001d2f8b89838a010162001ad0565b84525091860191860162001d05565b5098975050505050505050565b60408152600062001d7660408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b60408152600062001d7660408301600a815269080808081058dd1d585b60b21b602082015260400190565b60408152600062001de660408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600062001de660408301600a815269080808081058dd1d585b60b21b60208201526040019056fe6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220015a110f8b4dbcf0243886656c04bb7bcd82c653f3b6a32b6500d8f2a2104ff464736f6c634300080a0033608060405260016006553480156200001657600080fd5b50604080518082018252600881526715195cdd0813919560c21b602080830191825283518085019094526004845263151154d560e21b908401528151919291620000639160009162000082565b5080516200007990600190602084019062000082565b50505062000165565b828054620000909062000128565b90600052602060002090601f016020900481019282620000b45760008555620000ff565b82601f10620000cf57805160ff1916838001178555620000ff565b82800160010185558215620000ff579182015b82811115620000ff578251825591602001919060010190620000e2565b506200010d92915062000111565b5090565b5b808211156200010d576000815560010162000112565b600181811c908216806200013d57607f821691505b602082108114156200015f57634e487b7160e01b600052602260045260246000fd5b50919050565b610dac80620001756000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806342842e0e11610097578063a22cb46511610066578063a22cb46514610200578063b88d4fde14610213578063c87b56dd14610226578063e985e9c51461025357600080fd5b806342842e0e146101bf5780636352211e146101d257806370a08231146101e557806395d89b41146101f857600080fd5b8063095ea7b3116100d3578063095ea7b3146101785780631249c58b1461018d57806317d70f7c146101a357806323b872dd146101ac57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004610a6d565b610281565b60405190151581526020015b60405180910390f35b61012a6102d3565b6040516101199190610a91565b610160610145366004610ae6565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610119565b61018b610186366004610b16565b610361565b005b610195610448565b604051908152602001610119565b61019560065481565b61018b6101ba366004610b40565b61046f565b61018b6101cd366004610b40565b610636565b6101606101e0366004610ae6565b61072e565b6101956101f3366004610b7c565b610785565b61012a6107e8565b61018b61020e366004610b97565b6107f5565b61018b610221366004610bd3565b610861565b61012a610234366004610ae6565b506040805180820190915260048152631d195cdd60e21b602082015290565b61010d610261366004610c6e565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b0319831614806102b257506380ac58cd60e01b6001600160e01b03198316145b806102cd5750635b5e139f60e01b6001600160e01b03198316145b92915050565b600080546102e090610ca1565b80601f016020809104026020016040519081016040528092919081815260200182805461030c90610ca1565b80156103595780601f1061032e57610100808354040283529160200191610359565b820191906000526020600020905b81548152906001019060200180831161033c57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b0316338114806103aa57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6103ec5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061045633600654610949565b6006805490600061046683610cdc565b91905055905090565b6000818152600260205260409020546001600160a01b038481169116146104c55760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016103e3565b6001600160a01b03821661050f5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016103e3565b336001600160a01b038416148061054957506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061056a57506000818152600460205260409020546001600160a01b031633145b6105a75760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016103e3565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61064183838361046f565b6001600160a01b0382163b15806106ea5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156106ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106de9190610d05565b6001600160e01b031916145b6107295760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016103e3565b505050565b6000818152600260205260409020546001600160a01b0316806107805760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016103e3565b919050565b60006001600160a01b0382166107cc5760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016103e3565b506001600160a01b031660009081526003602052604090205490565b600180546102e090610ca1565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61086c85858561046f565b6001600160a01b0384163b15806109035750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a02906108b49033908a90899089908990600401610d22565b6020604051808303816000875af11580156108d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f79190610d05565b6001600160e01b031916145b6109425760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016103e3565b5050505050565b6001600160a01b0382166109935760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016103e3565b6000818152600260205260409020546001600160a01b0316156109e95760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016103e3565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610a6a57600080fd5b50565b600060208284031215610a7f57600080fd5b8135610a8a81610a54565b9392505050565b600060208083528351808285015260005b81811015610abe57858101830151858201604001528201610aa2565b81811115610ad0576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215610af857600080fd5b5035919050565b80356001600160a01b038116811461078057600080fd5b60008060408385031215610b2957600080fd5b610b3283610aff565b946020939093013593505050565b600080600060608486031215610b5557600080fd5b610b5e84610aff565b9250610b6c60208501610aff565b9150604084013590509250925092565b600060208284031215610b8e57600080fd5b610a8a82610aff565b60008060408385031215610baa57600080fd5b610bb383610aff565b915060208301358015158114610bc857600080fd5b809150509250929050565b600080600080600060808688031215610beb57600080fd5b610bf486610aff565b9450610c0260208701610aff565b935060408601359250606086013567ffffffffffffffff80821115610c2657600080fd5b818801915088601f830112610c3a57600080fd5b813581811115610c4957600080fd5b896020828501011115610c5b57600080fd5b9699959850939650602001949392505050565b60008060408385031215610c8157600080fd5b610c8a83610aff565b9150610c9860208401610aff565b90509250929050565b600181811c90821680610cb557607f821691505b60208210811415610cd657634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610cfe57634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215610d1757600080fd5b8151610a8a81610a54565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f8501168301019050969550505050505056fea2646970667358221220122746529cdb8eca1992450c564a62c00bd01a184cb85d7a28976d126a66179764736f6c634300080a003360806040526000805534801561001457600080fd5b506125bc806100246000396000f3fe608060405260043610620000795760003560e01c80639403b63411620000545780639403b634146200010d57806397331bf914620001415780639e9153c21462000168578063d6df9e5d146200018e57600080fd5b8063049878f3146200007e578063150b7a02146200009757806332f19a5c14620000d6575b600080fd5b620000956200008f36600462000f08565b620001a6565b005b620000b8620000a836600462000fcb565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b348015620000e357600080fd5b50620000fb620000f536600462000f08565b6200054c565b604051620000cd9493929190620010a4565b3480156200011a57600080fd5b50620001326200012c36600462000f08565b62000616565b604051620000cd9190620011e9565b3480156200014e57600080fd5b5062000159620007be565b604051620000cd919062001205565b6200017f62000179366004620012dd565b62000a00565b604051908152602001620000cd565b3480156200019b57600080fd5b506200017f60005481565b60008181526001602090815260408083208151815460e09481028201850190935260c081018381529093919284928491908401828280156200021257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620001f3575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156200026c57602002820191906000526020600020905b81548152602001906001019080831162000257575b50505091835250506002820154602082015260038201546001600160a01b0390811660408301526004830154166060820152600582018054608090920191620002b590620013ac565b80601f0160208091040260200160405190810160405280929190818152602001828054620002e390620013ac565b8015620003345780601f10620003085761010080835404028352916020019162000334565b820191906000526020600020905b8154815290600101906020018083116200031657829003601f168201915b5050509190925250505060608101519091506001600160a01b0316620003935760405162461bcd60e51b815260206004820152600f60248201526e1d985d5b1d081b9bdd08199bdd5b99608a1b60448201526064015b60405180910390fd5b600082815260016020526040812090620003ae828262000d15565b620003be60018301600062000d15565b6000600283018190556003830180546001600160a01b03199081169091556004840180549091169055620003f790600584019062000d38565b50506060810151604080830151905163079cc67960e41b815233600482015260248101919091526001600160a01b03909116906379cc679090604401600060405180830381600087803b1580156200044e57600080fd5b505af115801562000463573d6000803e3d6000fd5b5050505060005b815151811015620005475781518051829081106200048c576200048c620013e3565b60200260200101516001600160a01b03166323b872dd303385602001518581518110620004bd57620004bd620013e3565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156200051857600080fd5b505af11580156200052d573d6000803e3d6000fd5b5050505080806200053e90620013f9565b9150506200046a565b505050565b600160205260009081526040902060028101546003820154600483015460058401805493946001600160a01b039384169493909216926200058d90620013ac565b80601f0160208091040260200160405190810160405280929190818152602001828054620005bb90620013ac565b80156200060c5780601f10620005e0576101008083540402835291602001916200060c565b820191906000526020600020905b815481529060010190602001808311620005ee57829003601f168201915b5050505050905084565b6200062062000d77565b6000828152600160209081526040918290208251815460e09381028201840190945260c0810184815290939192849284918401828280156200068c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200066d575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015620006e657602002820191906000526020600020905b815481526020019060010190808311620006d1575b50505091835250506002820154602082015260038201546001600160a01b03908116604083015260048301541660608201526005820180546080909201916200072f90620013ac565b80601f01602080910402602001604051908101604052809291908181526020018280546200075d90620013ac565b8015620007ae5780601f106200078257610100808354040283529160200191620007ae565b820191906000526020600020905b8154815290600101906020018083116200079057829003601f168201915b5050505050815250509050919050565b60606000805467ffffffffffffffff811115620007df57620007df62000f38565b6040519080825280602002602001820160405280156200081c57816020015b6200080862000d77565b815260200190600190039081620007fe5790505b50905060005b600054811015620009fa576000818152600160209081526040918290208251815460e09381028201840190945260c0810184815290939192849284918401828280156200089957602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116200087a575b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015620008f357602002820191906000526020600020905b815481526020019060010190808311620008de575b50505091835250506002820154602082015260038201546001600160a01b03908116604083015260048301541660608201526005820180546080909201916200093c90620013ac565b80601f01602080910402602001604051908101604052809291908181526020018280546200096a90620013ac565b8015620009bb5780601f106200098f57610100808354040283529160200191620009bb565b820191906000526020600020905b8154815290600101906020018083116200099d57829003601f168201915b505050505081525050828281518110620009d957620009d9620013e3565b60200260200101819052508080620009f190620013f9565b91505062000822565b50919050565b600086851462000a435760405162461bcd60e51b815260206004820152600d60248201526c1a5b9d985b1a59081d985d5b1d609a1b60448201526064016200038a565b60008383863360405162000a579062000dbf565b62000a66949392919062001423565b604051809103906000f08015801562000a83573d6000803e3d6000fd5b50905060006040518060c001604052808b8b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505050908252506040805160208b810282810182019093528b82529283019290918c918c918291850190849080828437600092019190915250505090825250602081018890526001600160a01b0384166040808301919091523360608301526080909101879052519091507f50489fdde3c8e9ef8c96f6d5efa760d912efe3b0d661909b4673175f9a64d5d99062000b5c908390620011e9565b60405180910390a160008054815260016020908152604090912082518051849362000b8c92849291019062000dcd565b50602082810151805162000ba7926001850192019062000e37565b506040820151600282015560608201516003820180546001600160a01b039283166001600160a01b031991821617909155608084015160048401805491909316911617905560a0820151805162000c0991600584019160209091019062000e75565b5090505060005b8981101562000cf1578a8a8281811062000c2e5762000c2e620013e3565b905060200201602081019062000c4591906200146e565b6001600160a01b03166323b872dd33308c8c8681811062000c6a5762000c6a620013e3565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b15801562000cc257600080fd5b505af115801562000cd7573d6000803e3d6000fd5b50505050808062000ce890620013f9565b91505062000c10565b5060008054908062000d0383620013f9565b909155509a9950505050505050505050565b508054600082559060005260206000209081019062000d35919062000ef1565b50565b50805462000d4690620013ac565b6000825580601f1062000d57575050565b601f01602090049060005260206000209081019062000d35919062000ef1565b6040518060c0016040528060608152602001606081526020016000815260200160006001600160a01b0316815260200160006001600160a01b03168152602001606081525090565b6110f8806200148f83390190565b82805482825590600052602060002090810192821562000e25579160200282015b8281111562000e2557825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000dee565b5062000e3392915062000ef1565b5090565b82805482825590600052602060002090810192821562000e25579160200282015b8281111562000e2557825182559160200191906001019062000e58565b82805462000e8390620013ac565b90600052602060002090601f01602090048101928262000ea7576000855562000e25565b82601f1062000ec257805160ff191683800117855562000e25565b8280016001018555821562000e25579182018281111562000e2557825182559160200191906001019062000e58565b5b8082111562000e33576000815560010162000ef2565b60006020828403121562000f1b57600080fd5b5035919050565b6001600160a01b038116811462000d3557600080fd5b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111562000f6c5762000f6c62000f38565b604051601f8501601f19908116603f0116810190828211818310171562000f975762000f9762000f38565b8160405280935085815286868601111562000fb157600080fd5b858560208301376000602087830101525050509392505050565b6000806000806080858703121562000fe257600080fd5b843562000fef8162000f22565b93506020850135620010018162000f22565b925060408501359150606085013567ffffffffffffffff8111156200102557600080fd5b8501601f810187136200103757600080fd5b620010488782356020840162000f4e565b91505092959194509250565b6000815180845260005b818110156200107c576020818501810151868301820152016200105e565b818111156200108f576000602083870101525b50601f01601f19169290920160200192915050565b8481526001600160a01b03848116602083015283166040820152608060608201819052600090620010d89083018462001054565b9695505050505050565b600081518084526020808501945080840160005b838110156200111457815187529582019590820190600101620010f6565b509495945050505050565b805160c080845281519084018190526000916020919082019060e0860190845b81811015620011665783516001600160a01b0316835292840192918401916001016200113f565b505082850151915085810383870152620011818183620010e2565b92505050604083015160408501526060830151620011aa60608601826001600160a01b03169052565b506080830151620011c660808601826001600160a01b03169052565b5060a083015184820360a0860152620011e0828262001054565b95945050505050565b602081526000620011fe60208301846200111f565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200125e57603f198886030184526200124b8583516200111f565b945092850192908501906001016200122c565b5092979650505050505050565b60008083601f8401126200127e57600080fd5b50813567ffffffffffffffff8111156200129757600080fd5b6020830191508360208260051b8501011115620012b357600080fd5b9250929050565b600082601f830112620012cc57600080fd5b620011fe8383356020850162000f4e565b600080600080600080600060a0888a031215620012f957600080fd5b873567ffffffffffffffff808211156200131257600080fd5b620013208b838c016200126b565b909950975060208a01359150808211156200133a57600080fd5b620013488b838c016200126b565b909750955060408a0135945060608a01359150808211156200136957600080fd5b620013778b838c01620012ba565b935060808a01359150808211156200138e57600080fd5b506200139d8a828b01620012ba565b91505092959891949750929550565b600181811c90821680620013c157607f821691505b60208210811415620009fa57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006000198214156200141c57634e487b7160e01b600052601160045260246000fd5b5060010190565b60808152600062001438608083018762001054565b82810360208401526200144c818762001054565b604084019590955250506001600160a01b039190911660609091015292915050565b6000602082840312156200148157600080fd5b8135620011fe8162000f2256fe60e0604052604051620010f8380380620010f8833981016040819052620000269162000308565b8383601282600090805190602001906200004292919062000195565b5081516200005890600190602085019062000195565b5060ff81166080524660a0526200006e6200008c565b60c052506200008291508290508362000128565b50505050620004a5565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000c09190620003da565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546200013c91906200047e565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b828054620001a3906200039d565b90600052602060002090601f016020900481019282620001c7576000855562000212565b82601f10620001e257805160ff191683800117855562000212565b8280016001018555821562000212579182015b8281111562000212578251825591602001919060010190620001f5565b506200022092915062000224565b5090565b5b8082111562000220576000815560010162000225565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200026357600080fd5b81516001600160401b03808211156200028057620002806200023b565b604051601f8301601f19908116603f01168101908282118183101715620002ab57620002ab6200023b565b81604052838152602092508683858801011115620002c857600080fd5b600091505b83821015620002ec5785820183015181830184015290820190620002cd565b83821115620002fe5760008385830101525b9695505050505050565b600080600080608085870312156200031f57600080fd5b84516001600160401b03808211156200033757600080fd5b620003458883890162000251565b955060208701519150808211156200035c57600080fd5b506200036b8782880162000251565b60408701516060880151919550935090506001600160a01b03811681146200039257600080fd5b939692955090935050565b600181811c90821680620003b257607f821691505b60208210811415620003d457634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c915080831680620003f757607f831692505b60208084108214156200041857634e487b7160e01b86526022600452602486fd5b8180156200042f5760018114620004415762000470565b60ff1986168952848901965062000470565b60008a81526020902060005b86811015620004685781548b8201529085019083016200044d565b505084890196505b509498975050505050505050565b60008219821115620004a057634e487b7160e01b600052601160045260246000fd5b500190565b60805160a05160c051610c23620004d560003960006104e2015260006104ad015260006101780152610c236000f3fe6080604052600436106100c25760003560e01c806370a082311161007f57806395d89b411161005957806395d89b4114610230578063a9059cbb14610245578063d505accf14610265578063dd62ed3e1461028557600080fd5b806370a08231146101c157806379cc6790146101ee5780637ecebe001461020357600080fd5b806306fdde03146100c7578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610146578063313ce567146101665780633644e515146101ac575b600080fd5b3480156100d357600080fd5b506100dc6102bd565b6040516100e99190610952565b60405180910390f35b3480156100fe57600080fd5b5061011261010d3660046109c3565b61034b565b60405190151581526020016100e9565b34801561012e57600080fd5b5061013860025481565b6040519081526020016100e9565b34801561015257600080fd5b506101126101613660046109ed565b6103b7565b34801561017257600080fd5b5061019a7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100e9565b3480156101b857600080fd5b506101386104a9565b3480156101cd57600080fd5b506101386101dc366004610a29565b60036020526000908152604090205481565b6102016101fc3660046109c3565b610504565b005b34801561020f57600080fd5b5061013861021e366004610a29565b60056020526000908152604090205481565b34801561023c57600080fd5b506100dc61056f565b34801561025157600080fd5b506101126102603660046109c3565b61057c565b34801561027157600080fd5b50610201610280366004610a4b565b6105f4565b34801561029157600080fd5b506101386102a0366004610abe565b600460209081526000928352604080842090915290825290205481565b600080546102ca90610af1565b80601f01602080910402602001604051908101604052809291908181526020018280546102f690610af1565b80156103435780601f1061031857610100808354040283529160200191610343565b820191906000526020600020905b81548152906001019060200180831161032657829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103a69086815260200190565b60405180910390a350600192915050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610413576103ee8382610b2c565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b0385166000908152600360205260408120805485929061043b908490610b2c565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104969087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104df576104da61083d565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b038216600090815260046020908152604080832033845290915290205460001981146105605761053b8282610b2c565b6001600160a01b03841660009081526004602090815260408083203384529091529020555b61056a83836108d7565b505050565b600180546102ca90610af1565b3360009081526003602052604081208054839190839061059d908490610b2c565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103a69086815260200190565b428410156106495760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b600060016106556104a9565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610761573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906107975750876001600160a01b0316816001600160a01b0316145b6107d45760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610640565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161086f9190610b51565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b038216600090815260036020526040812080548392906108ff908490610b2c565b90915550506002805482900390556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208083528351808285015260005b8181101561097f57858101830151858201604001528201610963565b81811115610991576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146109be57600080fd5b919050565b600080604083850312156109d657600080fd5b6109df836109a7565b946020939093013593505050565b600080600060608486031215610a0257600080fd5b610a0b846109a7565b9250610a19602085016109a7565b9150604084013590509250925092565b600060208284031215610a3b57600080fd5b610a44826109a7565b9392505050565b600080600080600080600060e0888a031215610a6657600080fd5b610a6f886109a7565b9650610a7d602089016109a7565b95506040880135945060608801359350608088013560ff81168114610aa157600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610ad157600080fd5b610ada836109a7565b9150610ae8602084016109a7565b90509250929050565b600181811c90821680610b0557607f821691505b60208210811415610b2657634e487b7160e01b600052602260045260246000fd5b50919050565b600082821015610b4c57634e487b7160e01b600052601160045260246000fd5b500390565b600080835481600182811c915080831680610b6d57607f831692505b6020808410821415610b8d57634e487b7160e01b86526022600452602486fd5b818015610ba15760018114610bb257610bdf565b60ff19861689528489019650610bdf565b60008a81526020902060005b86811015610bd75781548b820152908501908301610bbe565b505084890196505b50949897505050505050505056fea264697066735822122080ae339d0757005696f0b9b558cac9015c48671d77f4f5a7ca12030bb9d19f2f64736f6c634300080a0033a26469706673582212205eaf8cd56a8c06eb6950ee99face9c9bacb10ca372f78f7890761a79e6cbf95a64736f6c634300080a0033a2646970667358221220df44bcb2d29c05172ac1bd61b6a619ab0967f20b770393aa2702573c1e5b6aaf64736f6c634300080a0033",
    "sourceMap": "611:4280:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2244:931;;;:::i;:::-;;1241:997;;;:::i;3181:1138::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;179:14:11;;172:22;154:41;;142:2;127:18;1819:584:0;;;;;;;4325:564:10;;;:::i;1572:26:0:-;;;;;;;;;2244:931:10;2299:11;;;2319:15;2299:36;;-1:-1:-1;;;2299:36:10;;;;;352:25:11;;;;2290:61:10;;-1:-1:-1;;;;;2299:11:10;;:19;;325:18:11;;2299:36:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2345:4;2290:8;:61::i;:::-;2362:4;;:40;;-1:-1:-1;;;2362:40:10;;:4;:40;;;1130:41:11;;;1187:18;;;1180:50;;;2362:4:10;1246:18:11;;;1239:50;1305:18;;;1298:50;-1:-1:-1;;;;;2362:4:10;;;;:15;;1102:19:11;;2362:40:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2417:46:10;;2453:9;352:25:11;;2446:4:10;;-1:-1:-1;2434:1:10;;-1:-1:-1;2417:46:10;;340:2:11;325:18;2417:46:10;;;;;;;2492:8;;:147;;-1:-1:-1;;;2492:147:10;;2474:15;;-1:-1:-1;;;;;2492:8:10;;:14;;:147;;2520:12;;2546:6;;2566:9;;2492:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2680:8;;:26;;-1:-1:-1;;;2680:26:10;;;;;352:25:11;;;2474:165:10;;-1:-1:-1;2650:27:10;;-1:-1:-1;;;;;2680:8:10;;;;:17;;325:18:11;;2680:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2680:26:10;;;;;;;;;;;;:::i;:::-;2650:56;;2722:9;2717:328;2741:18;;:25;2737:29;;2717:328;;;2787:115;2813:5;:18;;;2832:1;2813:21;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2813:29:10;;2843:6;2850:1;2843:9;;;;;;;;:::i;:::-;;;;;;;;;2813:40;;;;;;;;;;;;;352:25:11;;340:2;325:18;;206:177;2813:40:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2879:8;;-1:-1:-1;;;;;2879:8:10;2787;:115::i;:::-;2916:66;2933:5;:18;;;2952:1;2933:21;;;;;;;;:::i;:::-;;;;;;;2965:12;2978:1;2965:15;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2965:15:10;2916:8;:66::i;:::-;2996:38;3005:5;:14;;;3020:1;3005:17;;;;;;;;:::i;:::-;;;;;;;3024:6;3031:1;3024:9;;;;;;;;:::i;:::-;;;;;;;;;2996:8;:38::i;:::-;2768:3;;;;:::i;:::-;;;;2717:328;;;;3055:38;3064:5;:17;;;3083:9;3055:8;:38::i;:::-;3112:19;;;;:44;;-1:-1:-1;;;3112:44:10;;3150:4;3112:44;;;8924:51:11;3103:65:10;;-1:-1:-1;;;;;3112:29:10;;;;8897:18:11;;3112:44:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3158:9;3103:8;:65::i;:::-;2280:895;;2244:931::o;1241:997::-;1282:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1275:4:10;:17;;-1:-1:-1;;;;;;1275:17:10;-1:-1:-1;;;;;1275:17:10;;;;;;;;;;1316:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1302:11:10;:27;;-1:-1:-1;;;;;;1302:27:10;-1:-1:-1;;;;;1302:27:10;;;;;;;;;;1353:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1339:11:10;:27;;-1:-1:-1;;;;;;1339:27:10;-1:-1:-1;;;;;1339:27:10;;;;;;;;;;1387:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1376:8:10;:25;;-1:-1:-1;;;;;;1376:25:10;-1:-1:-1;;;;;1376:25:10;;;;;;;;;1412:11;;:54;;-1:-1:-1;;;1412:54:10;;;;;9154:51:11;;;;-1:-1:-1;9221:18:11;;;9214:50;1412:11:10;;;;:29;;9127:18:11;;1412:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1476:11:10;;1514:8;;1476:54;;-1:-1:-1;;;1476:54:10;;-1:-1:-1;;;;;1514:8:10;;;1476:54;;;9154:51:11;1476:11:10;9221:18:11;;;9214:50;1476:11:10;;;-1:-1:-1;1476:29:10;;-1:-1:-1;9127:18:11;;1476:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1541:4:10;;1560;;1541:25;;-1:-1:-1;;;1541:25:10;;-1:-1:-1;;;;;1560:4:10;;;1541:25;;;8924:51:11;1541:4:10;;;-1:-1:-1;1541:10:10;;-1:-1:-1;8897:18:11;;1541:25:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1576:11:10;;1614:8;;1576:54;;-1:-1:-1;;;1576:54:10;;-1:-1:-1;;;;;1614:8:10;;;1576:54;;;9154:51:11;1576:11:10;9221:18:11;;;9214:50;1576:11:10;;;-1:-1:-1;1576:29:10;;-1:-1:-1;9127:18:11;;1576:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1640:4:10;;1659;;1640:25;;-1:-1:-1;;;1640:25:10;;-1:-1:-1;;;;;1659:4:10;;;1640:25;;;8924:51:11;1640:4:10;;;-1:-1:-1;1640:10:10;;-1:-1:-1;8897:18:11;;1640:25:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1675:11:10;;1713:8;;1675:54;;-1:-1:-1;;;1675:54:10;;-1:-1:-1;;;;;1713:8:10;;;1675:54;;;9154:51:11;1675:11:10;9221:18:11;;;9214:50;1675:11:10;;;-1:-1:-1;1675:29:10;;-1:-1:-1;9127:18:11;;1675:54:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1758:11;;;;;;;;;-1:-1:-1;;;;;1758:11:10;-1:-1:-1;;;;;1758:16:10;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1740:15;:36;1804:11;;:18;;;-1:-1:-1;;;1804:18:10;;;;-1:-1:-1;;;;;1804:11:10;;;;:16;;:18;;;;;;;;;;;;;;;:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1786:15;:36;1850:11;;:18;;;-1:-1:-1;;;1850:18:10;;;;-1:-1:-1;;;;;1850:11:10;;;;:16;;:18;;;;;;;;;;;;;;;:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1832:15;:36;1896:11;;:18;;;-1:-1:-1;;;1896:18:10;;;;-1:-1:-1;;;;;1896:11:10;;;;:16;;:18;;;;;;;;;;;;;;;:11;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1878:15;:36;;;1943:11;;;1925:12;:30;;1943:11;1925:30;;;;;;;;;;;-1:-1:-1;;;;;;1925:30:10;;;-1:-1:-1;;;;;1943:11:10;;;1925:30;;;;1983:11;;1965:30;;;;;;;;;;;;;1983:11;;;1965:30;;;;;;2023:11;;;2005:30;;;;;;;;;;;;;;;;2023:11;;;2005:30;;;;;;;2058:15;;2046:6;:28;;;;;;;;;;;;;;;2096:15;;2084:28;;;;;;;;;;2134:15;;2122:28;;;;;;;;;;;2180:11;2161:13;:31;;;;;;;;;;;;;;;2180:11;;2161:31;;;;;;;2215:15;;2202:7;:29;;;;;;;1943:11;2202:29;;;;;;1241:997::o;3181:1138::-;3260:8;;:147;;-1:-1:-1;;;3260:147:10;;3242:15;;-1:-1:-1;;;;;3260:8:10;;:14;;:147;;3288:12;;3314:6;;3334:9;;3260:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3448:8;;:26;;-1:-1:-1;;;3448:26:10;;;;;352:25:11;;;3242:165:10;;-1:-1:-1;3418:27:10;;-1:-1:-1;;;;;3448:8:10;;;;:17;;325:18:11;;3448:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3448:26:10;;;;;;;;;;;;:::i;:::-;3418:56;;3489:9;3484:204;3508:18;;:25;3504:29;;3484:204;;;3554:123;3580:5;:18;;;3599:1;3580:21;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3580:29:10;;3610:5;:14;;;3625:1;3610:17;;;;;;;;:::i;:::-;;;;;;;3580:48;;;;;;;;;;;;;352:25:11;;340:2;325:18;;206:177;3554:123:10;3535:3;;;;:::i;:::-;;;;3484:204;;;-1:-1:-1;3706:19:10;;;;:44;;-1:-1:-1;;;3706:44:10;;3744:4;3706:44;;;8924:51:11;3697:65:10;;-1:-1:-1;;;;;3706:29:10;;;;8897:18:11;;3706:44:10;8778:203:11;3697:65:10;3773:19;;;;3809:8;;3773:65;;-1:-1:-1;;;3773:65:10;;-1:-1:-1;;;;;3809:8:10;;;3773:65;;;9449:51:11;-1:-1:-1;;9516:18:11;;;9509:34;3773:27:10;;;;;9422:18:11;;3773:65:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3848:8:10;;:22;;-1:-1:-1;;;3848:22:10;;;;;352:25:11;;;-1:-1:-1;;;;;3848:8:10;;;;:13;;325:18:11;;3848:22:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3886:9;3881:200;3905:18;;:25;3901:29;;3881:200;;;3951:119;3977:5;:18;;;3996:1;3977:21;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3977:29:10;;4007:5;:14;;;4022:1;4007:17;;;;;;;;:::i;:::-;;;;;;;3977:48;;;;;;;;;;;;;352:25:11;;340:2;325:18;;206:177;3951:119:10;3932:3;;;;:::i;:::-;;;;3881:200;;;-1:-1:-1;4099:19:10;;;;:44;;-1:-1:-1;;;4099:44:10;;4137:4;4099:44;;;8924:51:11;4090:57:10;;-1:-1:-1;;;;;4099:29:10;;;;8897:18:11;;4099:44:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4145:1;4090:8;:57::i;:::-;4166:8;;:26;;-1:-1:-1;;;4166:26:10;;;;;352:25:11;;;-1:-1:-1;;;;;4166:8:10;;;;:17;;325:18:11;;4166:26:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4166:26:10;;;;;;;;;;;;:::i;:::-;4158:34;;4207:9;4202:111;4226:18;;:25;4222:29;;4202:111;;;4272:30;4281:5;:14;;;4296:1;4281:17;;;;;;;;:::i;:::-;;;;;;;4300:1;4272:8;:30::i;:::-;4253:3;;;;:::i;:::-;;;;4202:111;;;;3232:1087;;3181:1138::o;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;9449:51:11;;;-1:-1:-1;;;9516:18:11;;;9509:34;2196:43:0;;;;;;;;;9422:18:11;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;4325:564:10:-;4373:8;;:147;;-1:-1:-1;;;4373:147:10;;-1:-1:-1;;;;;4373:8:10;;;;:14;;:147;;4401:12;;4427:6;;4447:9;;4373:147;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4530:8:10;;:149;;-1:-1:-1;;;4530:149:10;;-1:-1:-1;;;;;4530:8:10;;;;:14;;:149;;4558:13;;4585:7;;4606:9;;4530:149;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4723:8:10;;:23;;;-1:-1:-1;;;4723:23:10;;;;4690:30;;-1:-1:-1;;;;;4723:8:10;;:21;;:23;;;;;4690:30;;4723:23;;;;;;;:8;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4723:23:10;;;;;;;;;;;;:::i;:::-;4690:56;;4761:9;4756:127;4780:6;:13;4776:1;:17;4756:127;;;4814:58;4869:1;-1:-1:-1;;;;;4825:46:10;4833:6;4840:1;4833:9;;;;;;;;:::i;:::-;;;;;;;:23;;;-1:-1:-1;;;;;4825:46:10;;;4814:10;:58::i;:::-;4795:3;;;;:::i;:::-;;;;4756:127;;3615:277:0;3683:1;-1:-1:-1;;;;;3678:6:0;:1;-1:-1:-1;;;;;3678:6:0;;3674:212;;3705:44;;;;;12139:2:11;12121:21;;;12178:2;12158:18;;;12151:30;12217:34;12212:2;12197:18;;12190:62;-1:-1:-1;;;12283:2:11;12268:18;;12261:35;12328:3;12313:19;;11937:401;3705:44:0;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;:::-;;;;;;;;3869:6;:4;:6::i;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;13631:2:11;13613:21;;;13670:2;13650:18;;;13643:30;13709:34;13704:2;13689:18;;13682:62;-1:-1:-1;;;13775:2:11;13760:18;;13753:32;13817:3;13802:19;;13429:398;5286:41:0;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;3255:157::-;3315:9;3310:96;;3345:30;;;;;14740:2:11;14722:21;;;14779:2;14759:18;;;14752:30;14818:25;14813:2;14798:18;;14791:53;14876:2;14861:18;;14538:347;3345:30:0;;;;;;;;3389:6;:4;:6::i;:::-;3255:157;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;15092:51:11;;;-1:-1:-1;;;15159:18:11;;;15152:34;;;;2705:4:0;15202:18:11;;;15195:34;2482:11:0;;1671:64;2579:43;;15065:18:11;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;388:131:11:-;-1:-1:-1;;;;;463:31:11;;453:42;;443:70;;509:1;506;499:12;524:138;603:13;;625:31;603:13;625:31;:::i;667:251::-;737:6;790:2;778:9;769:7;765:23;761:32;758:52;;;806:1;803;796:12;758:52;838:9;832:16;857:31;882:5;857:31;:::i;:::-;907:5;667:251;-1:-1:-1;;;667:251:11:o;1569:469::-;1630:3;1668:5;1662:12;1695:6;1690:3;1683:19;1721:4;1750:2;1745:3;1741:12;1734:19;;1772:5;1769:1;1762:16;1814:2;1811:1;1801:16;1835:1;1845:168;1859:6;1856:1;1853:13;1845:168;;;1920:13;;1908:26;;1954:12;;;;2001:1;1989:14;;;;1874:9;1845:168;;;-1:-1:-1;2029:3:11;;1569:469;-1:-1:-1;;;;;1569:469:11:o;2367:1414::-;2855:4;2903:3;2892:9;2888:19;2934:3;2923:9;2916:22;2958:6;2993;2987:13;3024:6;3016;3009:22;3062:3;3051:9;3047:19;3040:26;;3085:6;3082:1;3075:17;3111:4;3101:14;;3151:2;3148:1;3138:16;3172:1;3182:194;3196:6;3193:1;3190:13;3182:194;;;3261:13;;-1:-1:-1;;;;;3257:39:11;3245:52;;3317:12;;;;3293:1;3352:14;;;;3211:9;3182:194;;;3186:3;;;3421:9;3416:3;3412:19;3407:2;3396:9;3392:18;3385:47;3455:49;3500:3;3492:6;3455:49;:::i;:::-;3441:63;;;3540:6;3535:2;3524:9;3520:18;3513:34;3595:9;3587:6;3583:22;3578:2;3567:9;3563:18;3556:50;3629:37;3659:6;2120:2;2108:15;;-1:-1:-1;;;2148:4:11;2139:14;;2132:44;2201:2;2192:12;;2043:167;3629:37;3703:22;;;3697:3;3682:19;;3675:51;2287:1;2275:14;;-1:-1:-1;;;2314:4:11;2305:14;;2298:30;3615:51;-1:-1:-1;2353:2:11;2344:12;;3735:40;2367:1414;-1:-1:-1;;;;;;2367:1414:11:o;3786:184::-;3856:6;3909:2;3897:9;3888:7;3884:23;3880:32;3877:52;;;3925:1;3922;3915:12;3877:52;-1:-1:-1;3948:16:11;;3786:184;-1:-1:-1;3786:184:11:o;3975:127::-;4036:10;4031:3;4027:20;4024:1;4017:31;4067:4;4064:1;4057:15;4091:4;4088:1;4081:15;4107:253;4179:2;4173:9;4221:4;4209:17;;4256:18;4241:34;;4277:22;;;4238:62;4235:88;;;4303:18;;:::i;:::-;4339:2;4332:22;4107:253;:::o;4365:275::-;4436:2;4430:9;4501:2;4482:13;;-1:-1:-1;;4478:27:11;4466:40;;4536:18;4521:34;;4557:22;;;4518:62;4515:88;;;4583:18;;:::i;:::-;4619:2;4612:22;4365:275;;-1:-1:-1;4365:275:11:o;4645:191::-;4713:4;4746:18;4738:6;4735:30;4732:56;;;4768:18;;:::i;:::-;-1:-1:-1;4813:1:11;4809:14;4825:4;4805:25;;4645:191::o;4841:750::-;4914:5;4967:3;4960:4;4952:6;4948:17;4944:27;4934:55;;4985:1;4982;4975:12;4934:55;5014:6;5008:13;5040:4;5064:68;5080:51;5128:2;5080:51;:::i;:::-;5064:68;:::i;:::-;5166:15;;;5252:1;5248:10;;;;5236:23;;5232:32;;;5197:12;;;;5276:15;;;5273:35;;;5304:1;5301;5294:12;5273:35;5340:2;5332:6;5328:15;5352:210;5368:6;5363:3;5360:15;5352:210;;;5441:3;5435:10;5458:31;5483:5;5458:31;:::i;:::-;5502:18;;5540:12;;;;5385;;5352:210;;;-1:-1:-1;5580:5:11;4841:750;-1:-1:-1;;;;;;4841:750:11:o;5596:667::-;5661:5;5714:3;5707:4;5699:6;5695:17;5691:27;5681:55;;5732:1;5729;5722:12;5681:55;5761:6;5755:13;5787:4;5811:68;5827:51;5875:2;5827:51;:::i;5811:68::-;5913:15;;;5999:1;5995:10;;;;5983:23;;5979:32;;;5944:12;;;;6023:15;;;6020:35;;;6051:1;6048;6041:12;6020:35;6087:2;6079:6;6075:15;6099:135;6115:6;6110:3;6107:15;6099:135;;;6181:10;;6169:23;;6212:12;;;;6132;;6099:135;;6268:258;6340:1;6350:113;6364:6;6361:1;6358:13;6350:113;;;6440:11;;;6434:18;6421:11;;;6414:39;6386:2;6379:10;6350:113;;;6481:6;6478:1;6475:13;6472:48;;;6516:1;6507:6;6502:3;6498:16;6491:27;6472:48;;6268:258;;;:::o;6531:497::-;6585:5;6638:3;6631:4;6623:6;6619:17;6615:27;6605:55;;6656:1;6653;6646:12;6605:55;6685:6;6679:13;6711:18;6707:2;6704:26;6701:52;;;6733:18;;:::i;:::-;6777:55;6820:2;6801:13;;-1:-1:-1;;6797:27:11;6826:4;6793:38;6777:55;:::i;:::-;6857:2;6848:7;6841:19;6903:3;6896:4;6891:2;6883:6;6879:15;6875:26;6872:35;6869:55;;;6920:1;6917;6910:12;6869:55;6933:64;6994:2;6987:4;6978:7;6974:18;6967:4;6959:6;6955:17;6933:64;:::i;:::-;7015:7;6531:497;-1:-1:-1;;;;6531:497:11:o;7033:1009::-;7096:5;7144:4;7132:9;7127:3;7123:19;7119:30;7116:50;;;7162:1;7159;7152:12;7116:50;7184:22;;:::i;:::-;7175:31;;7235:9;7229:16;7264:18;7305:2;7297:6;7294:14;7291:34;;;7321:1;7318;7311:12;7291:34;7348:76;7420:3;7411:6;7400:9;7396:22;7348:76;:::i;:::-;7341:5;7334:91;7471:2;7460:9;7456:18;7450:25;7434:41;;7500:2;7490:8;7487:16;7484:36;;;7516:1;7513;7506:12;7484:36;7552:70;7618:3;7607:8;7596:9;7592:24;7552:70;:::i;:::-;7547:2;7540:5;7536:14;7529:94;7676:2;7665:9;7661:18;7655:25;7650:2;7643:5;7639:14;7632:49;7713;7758:2;7747:9;7743:18;7713:49;:::i;:::-;7708:2;7701:5;7697:14;7690:73;7796:50;7841:3;7830:9;7826:19;7796:50;:::i;:::-;7790:3;7783:5;7779:15;7772:75;7893:3;7882:9;7878:19;7872:26;7856:42;;7923:2;7913:8;7910:16;7907:36;;;7939:1;7936;7929:12;7907:36;;7976:59;8031:3;8020:8;8009:9;8005:24;7976:59;:::i;:::-;7970:3;7963:5;7959:15;7952:84;;7033:1009;;;;:::o;8047:357::-;8141:6;8194:2;8182:9;8173:7;8169:23;8165:32;8162:52;;;8210:1;8207;8200:12;8162:52;8243:9;8237:16;8276:18;8268:6;8265:30;8262:50;;;8308:1;8305;8298:12;8262:50;8331:67;8390:7;8381:6;8370:9;8366:22;8331:67;:::i;8409:127::-;8470:10;8465:3;8461:20;8458:1;8451:31;8501:4;8498:1;8491:15;8525:4;8522:1;8515:15;8541:232;8580:3;-1:-1:-1;;8601:17:11;;8598:140;;;8660:10;8655:3;8651:20;8648:1;8641:31;8695:4;8692:1;8685:15;8723:4;8720:1;8713:15;8598:140;-1:-1:-1;8765:1:11;8754:13;;8541:232::o;9554:277::-;9621:6;9674:2;9662:9;9653:7;9649:23;9645:32;9642:52;;;9690:1;9687;9680:12;9642:52;9722:9;9716:16;9775:5;9768:13;9761:21;9754:5;9751:32;9741:60;;9797:1;9794;9787:12;10115:371;-1:-1:-1;;;;;;10300:33:11;;10288:46;;10357:13;;10270:3;;10379:61;10357:13;10429:1;10420:11;;10413:4;10401:17;;10379:61;:::i;:::-;10460:16;;;;10478:1;10456:24;;10115:371;-1:-1:-1;;;10115:371:11:o;10491:274::-;10620:3;10658:6;10652:13;10674:53;10720:6;10715:3;10708:4;10700:6;10696:17;10674:53;:::i;:::-;10743:16;;;;;10491:274;-1:-1:-1;;10491:274:11:o;10770:1162::-;10889:6;10920:2;10963;10951:9;10942:7;10938:23;10934:32;10931:52;;;10979:1;10976;10969:12;10931:52;11012:9;11006:16;11041:18;11082:2;11074:6;11071:14;11068:34;;;11098:1;11095;11088:12;11068:34;11136:6;11125:9;11121:22;11111:32;;11181:7;11174:4;11170:2;11166:13;11162:27;11152:55;;11203:1;11200;11193:12;11152:55;11232:2;11226:9;11255:68;11271:51;11319:2;11271:51;:::i;11255:68::-;11357:15;;;11439:1;11435:10;;;;11427:19;;11423:28;;;11388:12;;;;11463:19;;;11460:39;;;11495:1;11492;11485:12;11460:39;11527:2;11523;11519:11;11539:363;11555:6;11550:3;11547:15;11539:363;;;11634:3;11628:10;11670:2;11657:11;11654:19;11651:109;;;11714:1;11743:2;11739;11732:14;11651:109;11785:74;11851:7;11846:2;11832:11;11828:2;11824:20;11820:29;11785:74;:::i;:::-;11773:87;;-1:-1:-1;11880:12:11;;;;11572;;11539:363;;;-1:-1:-1;11921:5:11;10770:1162;-1:-1:-1;;;;;;;;10770:1162:11:o;12507:374::-;12737:2;12726:9;12719:21;12700:4;12757:49;12802:2;12791:9;12787:18;12420:2;12408:15;;-1:-1:-1;;;12448:4:11;12439:14;;12432:36;12493:2;12484:12;;12343:159;12757:49;-1:-1:-1;;;;;12842:32:11;;;;12837:2;12822:18;;;;12815:60;;;;-1:-1:-1;12749:57:11;12507:374::o;13050:::-;13280:2;13269:9;13262:21;13243:4;13300:49;13345:2;13334:9;13330:18;12963:2;12951:15;;-1:-1:-1;;;12991:4:11;12982:14;;12975:36;13036:2;13027:12;;12886:159;13832:348;14062:2;14051:9;14044:21;14025:4;14082:49;14127:2;14116:9;14112:18;12420:2;12408:15;;-1:-1:-1;;;12448:4:11;12439:14;;12432:36;12493:2;12484:12;;12343:159;14082:49;14074:57;;14167:6;14162:2;14151:9;14147:18;14140:34;13832:348;;;;:::o;14185:::-;14415:2;14404:9;14397:21;14378:4;14435:49;14480:2;14469:9;14465:18;12963:2;12951:15;;-1:-1:-1;;;12991:4:11;12982:14;;12975:36;13036:2;13027:12;;12886:159",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/alexander/dev/fractional/contracts/src/test/Fractron.t.sol",
    "exportedSymbols": {
      "DSTest": [
        1786
      ],
      "ERC721": [
        24144
      ],
      "Fractron": [
        24517
      ],
      "FractronTest": [
        25143
      ],
      "NFTShare": [
        24237
      ],
      "TestNFT": [
        24565
      ],
      "User": [
        24531
      ],
      "Vm": [
        3175
      ],
      "stdError": [
        21943
      ]
    },
    "id": 25144,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24519,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:10"
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "id": 24521,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25144,
        "sourceUnit": 3176,
        "src": "58:36:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24520,
              "name": "Vm",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "66:2:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "id": 24523,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25144,
        "sourceUnit": 1787,
        "src": "95:40:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24522,
              "name": "DSTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "103:6:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/forge-std/src/test.sol",
        "file": "forge-std/test.sol",
        "id": 24525,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25144,
        "sourceUnit": 23213,
        "src": "136:44:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24524,
              "name": "stdError",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "144:8:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "id": 24527,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25144,
        "sourceUnit": 24165,
        "src": "181:49:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24526,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "189:6:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/alexander/dev/fractional/contracts/src/Fractron.sol",
        "file": "../Fractron.sol",
        "id": 24530,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25144,
        "sourceUnit": 24518,
        "src": "231:51:10",
        "symbolAliases": [
          {
            "foreign": {
              "id": 24528,
              "name": "Fractron",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "239:8:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 24529,
              "name": "NFTShare",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "249:8:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "User",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24531,
        "linearizedBaseContracts": [
          24531
        ],
        "name": "User",
        "nameLocation": "293:4:10",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 25144,
        "src": "284:16:10",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "54657374204e4654",
                "id": 24533,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "329:10:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_399b3b8e1a607e38a806dbdb386c84217e0a0255dd7cc2a55c6afb0aaffe0822",
                  "typeString": "literal_string \"Test NFT\""
                },
                "value": "Test NFT"
              },
              {
                "hexValue": "54455354",
                "id": 24534,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "341:6:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                  "typeString": "literal_string \"TEST\""
                },
                "value": "TEST"
              }
            ],
            "baseName": {
              "id": 24532,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24144,
              "src": "322:6:10"
            },
            "id": 24535,
            "nodeType": "InheritanceSpecifier",
            "src": "322:26:10"
          }
        ],
        "canonicalName": "TestNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24565,
        "linearizedBaseContracts": [
          24565,
          24144
        ],
        "name": "TestNFT",
        "nameLocation": "311:7:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "17d70f7c",
            "id": 24538,
            "mutability": "mutable",
            "name": "tokenId",
            "nameLocation": "370:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 24565,
            "src": "355:26:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24536,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "355:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 24537,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "380:1:10",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23638
            ],
            "body": {
              "id": 24548,
              "nodeType": "Block",
              "src": "460:30:10",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74657374",
                    "id": 24546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "477:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                      "typeString": "literal_string \"test\""
                    },
                    "value": "test"
                  },
                  "functionReturnParameters": 24545,
                  "id": 24547,
                  "nodeType": "Return",
                  "src": "470:13:10"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 24549,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "397:8:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24542,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "427:8:10"
            },
            "parameters": {
              "id": 24541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24540,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24549,
                  "src": "406:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24539,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "405:9:10"
            },
            "returnParameters": {
              "id": 24545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24544,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24549,
                  "src": "445:13:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24543,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "444:15:10"
            },
            "scope": 24565,
            "src": "388:102:10",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24563,
              "nodeType": "Block",
              "src": "537:70:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24555,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "553:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "553:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24557,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24538,
                        "src": "565:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24554,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24014,
                      "src": "547:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 24558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "547:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24559,
                  "nodeType": "ExpressionStatement",
                  "src": "547:26:10"
                },
                {
                  "expression": {
                    "id": 24561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "591:9:10",
                    "subExpression": {
                      "id": 24560,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24538,
                      "src": "591:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 24553,
                  "id": 24562,
                  "nodeType": "Return",
                  "src": "584:16:10"
                }
              ]
            },
            "functionSelector": "1249c58b",
            "id": 24564,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "505:4:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "509:2:10"
            },
            "returnParameters": {
              "id": 24553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24552,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24564,
                  "src": "528:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "527:9:10"
            },
            "scope": 24565,
            "src": "496:111:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 25144,
        "src": "302:307:10",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24566,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1786,
              "src": "636:6:10"
            },
            "id": 24567,
            "nodeType": "InheritanceSpecifier",
            "src": "636:6:10"
          }
        ],
        "canonicalName": "FractronTest",
        "contractDependencies": [
          24517,
          24531,
          24565
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 25143,
        "linearizedBaseContracts": [
          25143,
          1786
        ],
        "name": "FractronTest",
        "nameLocation": "620:12:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 24569,
            "mutability": "mutable",
            "name": "collection1_id1",
            "nameLocation": "657:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 25143,
            "src": "649:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24568,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "649:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24571,
            "mutability": "mutable",
            "name": "collection1_id2",
            "nameLocation": "686:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 25143,
            "src": "678:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24570,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "678:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24573,
            "mutability": "mutable",
            "name": "collection2_id1",
            "nameLocation": "715:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 25143,
            "src": "707:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24572,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "707:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24575,
            "mutability": "mutable",
            "name": "collection2_id2",
            "nameLocation": "744:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 25143,
            "src": "736:23:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24574,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "736:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24578,
            "mutability": "mutable",
            "name": "user",
            "nameLocation": "779:4:10",
            "nodeType": "VariableDeclaration",
            "scope": 25143,
            "src": "765:18:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_User_$24531",
              "typeString": "contract User"
            },
            "typeName": {
              "id": 24577,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24576,
                "name": "User",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24531,
                "src": "765:4:10"
              },
              "referencedDeclaration": 24531,
              "src": "765:4:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_User_$24531",
                "typeString": "contract User"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24581,
            "mutability": "mutable",
            "name": "collection1",
            "nameLocation": "806:11:10",
            "nodeType": "VariableDeclaration",
            "scope": 25143,
            "src": "789:28:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestNFT_$24565",
              "typeString": "contract TestNFT"
            },
            "typeName": {
              "id": 24580,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24579,
                "name": "TestNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24565,
                "src": "789:7:10"
              },
              "referencedDeclaration": 24565,
              "src": "789:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestNFT_$24565",
                "typeString": "contract TestNFT"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24584,
            "mutability": "mutable",
            "name": "collection2",
            "nameLocation": "840:11:10",
            "nodeType": "VariableDeclaration",
            "scope": 25143,
            "src": "823:28:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestNFT_$24565",
              "typeString": "contract TestNFT"
            },
            "typeName": {
              "id": 24583,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24582,
                "name": "TestNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24565,
                "src": "823:7:10"
              },
              "referencedDeclaration": 24565,
              "src": "823:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestNFT_$24565",
                "typeString": "contract TestNFT"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24590,
            "mutability": "mutable",
            "name": "hevm",
            "nameLocation": "869:4:10",
            "nodeType": "VariableDeclaration",
            "scope": 25143,
            "src": "857:35:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$3175",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 24586,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24585,
                "name": "Vm",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3175,
                "src": "857:2:10"
              },
              "referencedDeclaration": 3175,
              "src": "857:2:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$3175",
                "typeString": "contract Vm"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 24588,
                  "name": "HEVM_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 107,
                  "src": "879:12:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 24587,
                "name": "Vm",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3175,
                "src": "876:2:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Vm_$3175_$",
                  "typeString": "type(contract Vm)"
                }
              },
              "id": 24589,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "876:16:10",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$3175",
                "typeString": "contract Vm"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24593,
            "mutability": "mutable",
            "name": "fractron",
            "nameLocation": "916:8:10",
            "nodeType": "VariableDeclaration",
            "scope": 25143,
            "src": "898:26:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Fractron_$24517",
              "typeString": "contract Fractron"
            },
            "typeName": {
              "id": 24592,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24591,
                "name": "Fractron",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24517,
                "src": "898:8:10"
              },
              "referencedDeclaration": 24517,
              "src": "898:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Fractron_$24517",
                "typeString": "contract Fractron"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24597,
            "mutability": "mutable",
            "name": "nftContracts",
            "nameLocation": "949:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 25143,
            "src": "931:30:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
              "typeString": "contract ERC721[]"
            },
            "typeName": {
              "baseType": {
                "id": 24595,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 24594,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24144,
                  "src": "931:6:10"
                },
                "referencedDeclaration": 24144,
                "src": "931:6:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC721_$24144",
                  "typeString": "contract ERC721"
                }
              },
              "id": 24596,
              "nodeType": "ArrayTypeName",
              "src": "931:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr",
                "typeString": "contract ERC721[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24601,
            "mutability": "mutable",
            "name": "nftContracts2",
            "nameLocation": "985:13:10",
            "nodeType": "VariableDeclaration",
            "scope": 25143,
            "src": "967:31:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
              "typeString": "contract ERC721[]"
            },
            "typeName": {
              "baseType": {
                "id": 24599,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 24598,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24144,
                  "src": "967:6:10"
                },
                "referencedDeclaration": 24144,
                "src": "967:6:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC721_$24144",
                  "typeString": "contract ERC721"
                }
              },
              "id": 24600,
              "nodeType": "ArrayTypeName",
              "src": "967:8:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr",
                "typeString": "contract ERC721[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24604,
            "mutability": "mutable",
            "name": "nftIds",
            "nameLocation": "1023:6:10",
            "nodeType": "VariableDeclaration",
            "scope": 25143,
            "src": "1004:25:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 24602,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1004:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 24603,
              "nodeType": "ArrayTypeName",
              "src": "1004:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24607,
            "mutability": "mutable",
            "name": "nftIds2",
            "nameLocation": "1054:7:10",
            "nodeType": "VariableDeclaration",
            "scope": 25143,
            "src": "1035:26:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 24605,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1035:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 24606,
              "nodeType": "ArrayTypeName",
              "src": "1035:9:10",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 24612,
            "name": "VaultCreated",
            "nameLocation": "1074:12:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24610,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1102:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24612,
                  "src": "1087:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                    "typeString": "struct Fractron.Vault"
                  },
                  "typeName": {
                    "id": 24609,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24608,
                      "name": "Fractron.Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24254,
                      "src": "1087:14:10"
                    },
                    "referencedDeclaration": 24254,
                    "src": "1087:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24254_storage_ptr",
                      "typeString": "struct Fractron.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1086:22:10"
            },
            "src": "1068:41:10"
          },
          {
            "anonymous": false,
            "id": 24617,
            "name": "VaultDestroyed",
            "nameLocation": "1120:14:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24615,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1150:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24617,
                  "src": "1135:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                    "typeString": "struct Fractron.Vault"
                  },
                  "typeName": {
                    "id": 24614,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24613,
                      "name": "Fractron.Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24254,
                      "src": "1135:14:10"
                    },
                    "referencedDeclaration": 24254,
                    "src": "1135:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24254_storage_ptr",
                      "typeString": "struct Fractron.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1134:22:10"
            },
            "src": "1114:43:10"
          },
          {
            "anonymous": false,
            "id": 24625,
            "name": "Transfer",
            "nameLocation": "1168:8:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24619,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1193:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24625,
                  "src": "1177:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24621,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1215:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24625,
                  "src": "1199:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1199:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24623,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1227:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 24625,
                  "src": "1219:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1176:58:10"
            },
            "src": "1162:73:10"
          },
          {
            "body": {
              "id": 24786,
              "nodeType": "Block",
              "src": "1265:973:10",
              "statements": [
                {
                  "expression": {
                    "id": 24633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24628,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24578,
                      "src": "1275:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$24531",
                        "typeString": "contract User"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1282:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_User_$24531_$",
                          "typeString": "function () returns (contract User)"
                        },
                        "typeName": {
                          "id": 24630,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24629,
                            "name": "User",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24531,
                            "src": "1286:4:10"
                          },
                          "referencedDeclaration": 24531,
                          "src": "1286:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_User_$24531",
                            "typeString": "contract User"
                          }
                        }
                      },
                      "id": 24632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1282:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_User_$24531",
                        "typeString": "contract User"
                      }
                    },
                    "src": "1275:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_User_$24531",
                      "typeString": "contract User"
                    }
                  },
                  "id": 24634,
                  "nodeType": "ExpressionStatement",
                  "src": "1275:17:10"
                },
                {
                  "expression": {
                    "id": 24640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24635,
                      "name": "collection1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24581,
                      "src": "1302:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestNFT_$24565",
                        "typeString": "contract TestNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1316:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestNFT_$24565_$",
                          "typeString": "function () returns (contract TestNFT)"
                        },
                        "typeName": {
                          "id": 24637,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24636,
                            "name": "TestNFT",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24565,
                            "src": "1320:7:10"
                          },
                          "referencedDeclaration": 24565,
                          "src": "1320:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestNFT_$24565",
                            "typeString": "contract TestNFT"
                          }
                        }
                      },
                      "id": 24639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1316:13:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestNFT_$24565",
                        "typeString": "contract TestNFT"
                      }
                    },
                    "src": "1302:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestNFT_$24565",
                      "typeString": "contract TestNFT"
                    }
                  },
                  "id": 24641,
                  "nodeType": "ExpressionStatement",
                  "src": "1302:27:10"
                },
                {
                  "expression": {
                    "id": 24647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24642,
                      "name": "collection2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24584,
                      "src": "1339:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestNFT_$24565",
                        "typeString": "contract TestNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1353:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestNFT_$24565_$",
                          "typeString": "function () returns (contract TestNFT)"
                        },
                        "typeName": {
                          "id": 24644,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24643,
                            "name": "TestNFT",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24565,
                            "src": "1357:7:10"
                          },
                          "referencedDeclaration": 24565,
                          "src": "1357:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestNFT_$24565",
                            "typeString": "contract TestNFT"
                          }
                        }
                      },
                      "id": 24646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1353:13:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestNFT_$24565",
                        "typeString": "contract TestNFT"
                      }
                    },
                    "src": "1339:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestNFT_$24565",
                      "typeString": "contract TestNFT"
                    }
                  },
                  "id": 24648,
                  "nodeType": "ExpressionStatement",
                  "src": "1339:27:10"
                },
                {
                  "expression": {
                    "id": 24654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24649,
                      "name": "fractron",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24593,
                      "src": "1376:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Fractron_$24517",
                        "typeString": "contract Fractron"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1387:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Fractron_$24517_$",
                          "typeString": "function () returns (contract Fractron)"
                        },
                        "typeName": {
                          "id": 24651,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24650,
                            "name": "Fractron",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24517,
                            "src": "1391:8:10"
                          },
                          "referencedDeclaration": 24517,
                          "src": "1391:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Fractron_$24517",
                            "typeString": "contract Fractron"
                          }
                        }
                      },
                      "id": 24653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1387:14:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Fractron_$24517",
                        "typeString": "contract Fractron"
                      }
                    },
                    "src": "1376:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Fractron_$24517",
                      "typeString": "contract Fractron"
                    }
                  },
                  "id": 24655,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:25:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24661,
                            "name": "fractron",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24593,
                            "src": "1450:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fractron_$24517",
                              "typeString": "contract Fractron"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Fractron_$24517",
                              "typeString": "contract Fractron"
                            }
                          ],
                          "id": 24660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1442:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24659,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1442:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1442:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1461:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 24656,
                        "name": "collection1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24581,
                        "src": "1412:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24565",
                          "typeString": "contract TestNFT"
                        }
                      },
                      "id": 24658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23782,
                      "src": "1412:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 24664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1412:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24665,
                  "nodeType": "ExpressionStatement",
                  "src": "1412:54:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24671,
                            "name": "fractron",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24593,
                            "src": "1514:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fractron_$24517",
                              "typeString": "contract Fractron"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Fractron_$24517",
                              "typeString": "contract Fractron"
                            }
                          ],
                          "id": 24670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1506:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24669,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1506:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1506:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1525:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 24666,
                        "name": "collection2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24584,
                        "src": "1476:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24565",
                          "typeString": "contract TestNFT"
                        }
                      },
                      "id": 24668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23782,
                      "src": "1476:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 24674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24675,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:54:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24681,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24578,
                            "src": "1560:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_User_$24531",
                              "typeString": "contract User"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_User_$24531",
                              "typeString": "contract User"
                            }
                          ],
                          "id": 24680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1552:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24679,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1552:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1552:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24676,
                        "name": "hevm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24590,
                        "src": "1541:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3175",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2634,
                      "src": "1541:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1541:25:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24684,
                  "nodeType": "ExpressionStatement",
                  "src": "1541:25:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24690,
                            "name": "fractron",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24593,
                            "src": "1614:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fractron_$24517",
                              "typeString": "contract Fractron"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Fractron_$24517",
                              "typeString": "contract Fractron"
                            }
                          ],
                          "id": 24689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1606:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24688,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1606:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1606:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1625:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 24685,
                        "name": "collection1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24581,
                        "src": "1576:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24565",
                          "typeString": "contract TestNFT"
                        }
                      },
                      "id": 24687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23782,
                      "src": "1576:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 24693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1576:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24694,
                  "nodeType": "ExpressionStatement",
                  "src": "1576:54:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24700,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24578,
                            "src": "1659:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_User_$24531",
                              "typeString": "contract User"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_User_$24531",
                              "typeString": "contract User"
                            }
                          ],
                          "id": 24699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1651:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24698,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1651:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1651:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24695,
                        "name": "hevm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24590,
                        "src": "1640:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3175",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2634,
                      "src": "1640:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 24702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1640:25:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24703,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:25:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24709,
                            "name": "fractron",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24593,
                            "src": "1713:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fractron_$24517",
                              "typeString": "contract Fractron"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Fractron_$24517",
                              "typeString": "contract Fractron"
                            }
                          ],
                          "id": 24708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1705:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24707,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1705:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1705:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1724:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 24704,
                        "name": "collection2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24584,
                        "src": "1675:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24565",
                          "typeString": "contract TestNFT"
                        }
                      },
                      "id": 24706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23782,
                      "src": "1675:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 24712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1675:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24713,
                  "nodeType": "ExpressionStatement",
                  "src": "1675:54:10"
                },
                {
                  "expression": {
                    "id": 24718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24714,
                      "name": "collection1_id1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24569,
                      "src": "1740:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 24715,
                          "name": "collection1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24581,
                          "src": "1758:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestNFT_$24565",
                            "typeString": "contract TestNFT"
                          }
                        },
                        "id": 24716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24564,
                        "src": "1758:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 24717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1758:18:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1740:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24719,
                  "nodeType": "ExpressionStatement",
                  "src": "1740:36:10"
                },
                {
                  "expression": {
                    "id": 24724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24720,
                      "name": "collection1_id2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24571,
                      "src": "1786:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 24721,
                          "name": "collection1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24581,
                          "src": "1804:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestNFT_$24565",
                            "typeString": "contract TestNFT"
                          }
                        },
                        "id": 24722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24564,
                        "src": "1804:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 24723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1804:18:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1786:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24725,
                  "nodeType": "ExpressionStatement",
                  "src": "1786:36:10"
                },
                {
                  "expression": {
                    "id": 24730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24726,
                      "name": "collection2_id1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24573,
                      "src": "1832:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 24727,
                          "name": "collection2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24584,
                          "src": "1850:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestNFT_$24565",
                            "typeString": "contract TestNFT"
                          }
                        },
                        "id": 24728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24564,
                        "src": "1850:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 24729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1850:18:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1832:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24731,
                  "nodeType": "ExpressionStatement",
                  "src": "1832:36:10"
                },
                {
                  "expression": {
                    "id": 24736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24732,
                      "name": "collection2_id2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24575,
                      "src": "1878:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 24733,
                          "name": "collection2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24584,
                          "src": "1896:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestNFT_$24565",
                            "typeString": "contract TestNFT"
                          }
                        },
                        "id": 24734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24564,
                        "src": "1896:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 24735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1896:18:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1878:36:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24737,
                  "nodeType": "ExpressionStatement",
                  "src": "1878:36:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24741,
                        "name": "collection1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24581,
                        "src": "1943:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24565",
                          "typeString": "contract TestNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestNFT_$24565",
                          "typeString": "contract TestNFT"
                        }
                      ],
                      "expression": {
                        "id": 24738,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24597,
                        "src": "1925:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      "id": 24740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1925:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$_t_contract$_ERC721_$24144_$returns$__$bound_to$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$",
                        "typeString": "function (contract ERC721[] storage pointer,contract ERC721)"
                      }
                    },
                    "id": 24742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1925:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24743,
                  "nodeType": "ExpressionStatement",
                  "src": "1925:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24747,
                        "name": "collection1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24581,
                        "src": "1983:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24565",
                          "typeString": "contract TestNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestNFT_$24565",
                          "typeString": "contract TestNFT"
                        }
                      ],
                      "expression": {
                        "id": 24744,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24597,
                        "src": "1965:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      "id": 24746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1965:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$_t_contract$_ERC721_$24144_$returns$__$bound_to$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$",
                        "typeString": "function (contract ERC721[] storage pointer,contract ERC721)"
                      }
                    },
                    "id": 24748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1965:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24749,
                  "nodeType": "ExpressionStatement",
                  "src": "1965:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24753,
                        "name": "collection2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24584,
                        "src": "2023:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24565",
                          "typeString": "contract TestNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestNFT_$24565",
                          "typeString": "contract TestNFT"
                        }
                      ],
                      "expression": {
                        "id": 24750,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24597,
                        "src": "2005:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      "id": 24752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2005:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$_t_contract$_ERC721_$24144_$returns$__$bound_to$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$",
                        "typeString": "function (contract ERC721[] storage pointer,contract ERC721)"
                      }
                    },
                    "id": 24754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2005:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24755,
                  "nodeType": "ExpressionStatement",
                  "src": "2005:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24759,
                        "name": "collection1_id1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24569,
                        "src": "2058:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24756,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24604,
                        "src": "2046:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 24758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2046:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 24760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2046:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24761,
                  "nodeType": "ExpressionStatement",
                  "src": "2046:28:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24765,
                        "name": "collection1_id2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24571,
                        "src": "2096:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24762,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24604,
                        "src": "2084:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 24764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2084:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 24766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2084:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24767,
                  "nodeType": "ExpressionStatement",
                  "src": "2084:28:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24771,
                        "name": "collection2_id1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24573,
                        "src": "2134:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24768,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24604,
                        "src": "2122:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 24770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2122:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 24772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2122:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24773,
                  "nodeType": "ExpressionStatement",
                  "src": "2122:28:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24777,
                        "name": "collection2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24584,
                        "src": "2180:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestNFT_$24565",
                          "typeString": "contract TestNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestNFT_$24565",
                          "typeString": "contract TestNFT"
                        }
                      ],
                      "expression": {
                        "id": 24774,
                        "name": "nftContracts2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24601,
                        "src": "2161:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      "id": 24776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2161:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$_t_contract$_ERC721_$24144_$returns$__$bound_to$_t_array$_t_contract$_ERC721_$24144_$dyn_storage_ptr_$",
                        "typeString": "function (contract ERC721[] storage pointer,contract ERC721)"
                      }
                    },
                    "id": 24778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2161:31:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24779,
                  "nodeType": "ExpressionStatement",
                  "src": "2161:31:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24783,
                        "name": "collection2_id2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24575,
                        "src": "2215:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24780,
                        "name": "nftIds2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24607,
                        "src": "2202:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 24782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2202:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 24784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2202:29:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24785,
                  "nodeType": "ExpressionStatement",
                  "src": "2202:29:10"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 24787,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1250:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1255:2:10"
            },
            "returnParameters": {
              "id": 24627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1265:0:10"
            },
            "scope": 25143,
            "src": "1241:997:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24917,
              "nodeType": "Block",
              "src": "2280:895:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24793,
                            "name": "collection1_id1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24569,
                            "src": "2319:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 24791,
                            "name": "collection1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24581,
                            "src": "2299:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestNFT_$24565",
                              "typeString": "contract TestNFT"
                            }
                          },
                          "id": 24792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23669,
                          "src": "2299:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 24794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2299:36:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 24797,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2345:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractronTest_$25143",
                              "typeString": "contract FractronTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractronTest_$25143",
                              "typeString": "contract FractronTest"
                            }
                          ],
                          "id": 24796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2337:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24795,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2337:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2337:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24790,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "2290:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 24799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2290:61:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24800,
                  "nodeType": "ExpressionStatement",
                  "src": "2290:61:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 24804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2378:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2384:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 24806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2390:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2397:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 24801,
                        "name": "hevm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24590,
                        "src": "2362:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3175",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 24803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2708,
                      "src": "2362:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 24808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2362:40:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24809,
                  "nodeType": "ExpressionStatement",
                  "src": "2362:40:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 24813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2434:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 24812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2426:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24811,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2426:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2426:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 24817,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2446:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractronTest_$25143",
                              "typeString": "contract FractronTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractronTest_$25143",
                              "typeString": "contract FractronTest"
                            }
                          ],
                          "id": 24816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2438:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24815,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2438:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2438:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 24819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2453:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 24810,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24625,
                      "src": "2417:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 24820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:46:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24821,
                  "nodeType": "EmitStatement",
                  "src": "2412:51:10"
                },
                {
                  "assignments": [
                    24823
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24823,
                      "mutability": "mutable",
                      "name": "vaultId",
                      "nameLocation": "2482:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 24917,
                      "src": "2474:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24822,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2474:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24832,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24826,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24597,
                        "src": "2520:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      {
                        "id": 24827,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24604,
                        "src": "2546:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 24828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2566:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "4672616374696f6e616c69736564204e4654",
                        "id": 24829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2589:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        "value": "Fractionalised NFT"
                      },
                      {
                        "hexValue": "46524143",
                        "id": 24830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2623:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        },
                        "value": "FRAC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        }
                      ],
                      "expression": {
                        "id": 24824,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24593,
                        "src": "2492:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24517",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 24825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "split",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24367,
                      "src": "2492:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC721[] memory,uint256[] memory,uint256,string memory,string memory) payable external returns (uint256)"
                      }
                    },
                    "id": 24831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2492:147:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2474:165:10"
                },
                {
                  "assignments": [
                    24837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24837,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "2672:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 24917,
                      "src": "2650:27:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                        "typeString": "struct Fractron.Vault"
                      },
                      "typeName": {
                        "id": 24836,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24835,
                          "name": "Fractron.Vault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24254,
                          "src": "2650:14:10"
                        },
                        "referencedDeclaration": 24254,
                        "src": "2650:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$24254_storage_ptr",
                          "typeString": "struct Fractron.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24842,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24840,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24823,
                        "src": "2698:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24838,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24593,
                        "src": "2680:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24517",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 24839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24455,
                      "src": "2680:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Vault_$24254_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct Fractron.Vault memory)"
                      }
                    },
                    "id": 24841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2680:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                      "typeString": "struct Fractron.Vault memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2650:56:10"
                },
                {
                  "body": {
                    "id": 24897,
                    "nodeType": "Block",
                    "src": "2773:272:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 24861,
                                    "name": "nftIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24604,
                                    "src": "2843:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 24863,
                                  "indexExpression": {
                                    "id": 24862,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24844,
                                    "src": "2850:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2843:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 24856,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24837,
                                      "src": "2813:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 24857,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftContracts",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24241,
                                    "src": "2813:18:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                                      "typeString": "contract ERC721[] memory"
                                    }
                                  },
                                  "id": 24859,
                                  "indexExpression": {
                                    "id": 24858,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24844,
                                    "src": "2832:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2813:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                },
                                "id": 24860,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23669,
                                "src": "2813:29:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 24864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2813:40:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 24867,
                                  "name": "fractron",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24593,
                                  "src": "2879:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Fractron_$24517",
                                    "typeString": "contract Fractron"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Fractron_$24517",
                                    "typeString": "contract Fractron"
                                  }
                                ],
                                "id": 24866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2871:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24865,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2871:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2871:17:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 24855,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 320,
                            "src": "2787:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 24869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2787:115:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24870,
                        "nodeType": "ExpressionStatement",
                        "src": "2787:115:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 24874,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24837,
                                      "src": "2933:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 24875,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftContracts",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24241,
                                    "src": "2933:18:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                                      "typeString": "contract ERC721[] memory"
                                    }
                                  },
                                  "id": 24877,
                                  "indexExpression": {
                                    "id": 24876,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24844,
                                    "src": "2952:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2933:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                ],
                                "id": 24873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2925:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24872,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2925:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2925:30:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 24881,
                                    "name": "nftContracts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24597,
                                    "src": "2965:12:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                                      "typeString": "contract ERC721[] storage ref"
                                    }
                                  },
                                  "id": 24883,
                                  "indexExpression": {
                                    "id": 24882,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24844,
                                    "src": "2978:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2965:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                ],
                                "id": 24880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2957:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24879,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2957:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24884,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2957:24:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 24871,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 320,
                            "src": "2916:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 24885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2916:66:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24886,
                        "nodeType": "ExpressionStatement",
                        "src": "2916:66:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 24888,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24837,
                                  "src": "3005:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                                    "typeString": "struct Fractron.Vault memory"
                                  }
                                },
                                "id": 24889,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenIds",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24244,
                                "src": "3005:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 24891,
                              "indexExpression": {
                                "id": 24890,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24844,
                                "src": "3020:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3005:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 24892,
                                "name": "nftIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24604,
                                "src": "3024:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 24894,
                              "indexExpression": {
                                "id": 24893,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24844,
                                "src": "3031:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3024:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 24887,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 514,
                            "src": "2996:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 24895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2996:38:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24896,
                        "nodeType": "ExpressionStatement",
                        "src": "2996:38:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24847,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24844,
                      "src": "2737:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 24848,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24837,
                          "src": "2741:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24849,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftContracts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24241,
                        "src": "2741:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                          "typeString": "contract ERC721[] memory"
                        }
                      },
                      "id": 24850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2741:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2737:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24898,
                  "initializationExpression": {
                    "assignments": [
                      24844
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24844,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2730:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 24898,
                        "src": "2722:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24843,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2722:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24846,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2734:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2722:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2768:3:10",
                      "subExpression": {
                        "id": 24852,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24844,
                        "src": "2768:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24854,
                    "nodeType": "ExpressionStatement",
                    "src": "2768:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "2717:328:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24900,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24837,
                          "src": "3064:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24901,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24246,
                        "src": "3064:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 24902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3083:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 24899,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3055:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3055:38:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24904,
                  "nodeType": "ExpressionStatement",
                  "src": "3055:38:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 24911,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3150:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FractronTest_$25143",
                                  "typeString": "contract FractronTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FractronTest_$25143",
                                  "typeString": "contract FractronTest"
                                }
                              ],
                              "id": 24910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3142:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24909,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3142:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3142:13:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 24906,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24837,
                              "src": "3112:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                                "typeString": "struct Fractron.Vault memory"
                              }
                            },
                            "id": 24907,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24249,
                            "src": "3112:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTShare_$24237",
                              "typeString": "contract NFTShare"
                            }
                          },
                          "id": 24908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23243,
                          "src": "3112:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 24913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3112:44:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 24914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3158:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 24905,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3103:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3103:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24916,
                  "nodeType": "ExpressionStatement",
                  "src": "3103:65:10"
                }
              ]
            },
            "functionSelector": "085d70ea",
            "id": 24918,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCanSplitToken",
            "nameLocation": "2253:17:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2270:2:10"
            },
            "returnParameters": {
              "id": 24789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2280:0:10"
            },
            "scope": 25143,
            "src": "2244:931:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25079,
              "nodeType": "Block",
              "src": "3232:1087:10",
              "statements": [
                {
                  "assignments": [
                    24922
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24922,
                      "mutability": "mutable",
                      "name": "vaultId",
                      "nameLocation": "3250:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 25079,
                      "src": "3242:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24921,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3242:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24931,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24925,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24597,
                        "src": "3288:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      {
                        "id": 24926,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24604,
                        "src": "3314:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 24927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3334:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "4672616374696f6e616c69736564204e4654",
                        "id": 24928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3357:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        "value": "Fractionalised NFT"
                      },
                      {
                        "hexValue": "46524143",
                        "id": 24929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3391:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        },
                        "value": "FRAC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        }
                      ],
                      "expression": {
                        "id": 24923,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24593,
                        "src": "3260:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24517",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 24924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "split",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24367,
                      "src": "3260:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC721[] memory,uint256[] memory,uint256,string memory,string memory) payable external returns (uint256)"
                      }
                    },
                    "id": 24930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3260:147:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3242:165:10"
                },
                {
                  "assignments": [
                    24936
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24936,
                      "mutability": "mutable",
                      "name": "vault",
                      "nameLocation": "3440:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 25079,
                      "src": "3418:27:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                        "typeString": "struct Fractron.Vault"
                      },
                      "typeName": {
                        "id": 24935,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24934,
                          "name": "Fractron.Vault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24254,
                          "src": "3418:14:10"
                        },
                        "referencedDeclaration": 24254,
                        "src": "3418:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$24254_storage_ptr",
                          "typeString": "struct Fractron.Vault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24941,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24939,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24922,
                        "src": "3466:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24937,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24593,
                        "src": "3448:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24517",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 24938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getVault",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24455,
                      "src": "3448:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Vault_$24254_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct Fractron.Vault memory)"
                      }
                    },
                    "id": 24940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3448:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                      "typeString": "struct Fractron.Vault memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3418:56:10"
                },
                {
                  "body": {
                    "id": 24971,
                    "nodeType": "Block",
                    "src": "3540:148:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 24960,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24936,
                                      "src": "3610:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 24961,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenIds",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24244,
                                    "src": "3610:14:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 24963,
                                  "indexExpression": {
                                    "id": 24962,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24943,
                                    "src": "3625:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3610:17:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 24955,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24936,
                                      "src": "3580:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 24956,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftContracts",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24241,
                                    "src": "3580:18:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                                      "typeString": "contract ERC721[] memory"
                                    }
                                  },
                                  "id": 24958,
                                  "indexExpression": {
                                    "id": 24957,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24943,
                                    "src": "3599:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3580:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                },
                                "id": 24959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23669,
                                "src": "3580:29:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 24964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3580:48:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 24967,
                                  "name": "fractron",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24593,
                                  "src": "3654:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Fractron_$24517",
                                    "typeString": "contract Fractron"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Fractron_$24517",
                                    "typeString": "contract Fractron"
                                  }
                                ],
                                "id": 24966,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3646:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24965,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3646:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3646:17:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 24954,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 320,
                            "src": "3554:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 24969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3554:123:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24970,
                        "nodeType": "ExpressionStatement",
                        "src": "3554:123:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24946,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24943,
                      "src": "3504:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 24947,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24936,
                          "src": "3508:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24948,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftContracts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24241,
                        "src": "3508:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                          "typeString": "contract ERC721[] memory"
                        }
                      },
                      "id": 24949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3508:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3504:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24972,
                  "initializationExpression": {
                    "assignments": [
                      24943
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24943,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3497:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 24972,
                        "src": "3489:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24942,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3489:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24945,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3501:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3489:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3535:3:10",
                      "subExpression": {
                        "id": 24951,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24943,
                        "src": "3535:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24953,
                    "nodeType": "ExpressionStatement",
                    "src": "3535:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "3484:204:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 24979,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3744:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FractronTest_$25143",
                                  "typeString": "contract FractronTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FractronTest_$25143",
                                  "typeString": "contract FractronTest"
                                }
                              ],
                              "id": 24978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3736:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24977,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3736:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3736:13:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 24974,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24936,
                              "src": "3706:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                                "typeString": "struct Fractron.Vault memory"
                              }
                            },
                            "id": 24975,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24249,
                            "src": "3706:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTShare_$24237",
                              "typeString": "contract NFTShare"
                            }
                          },
                          "id": 24976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23243,
                          "src": "3706:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 24981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3706:44:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 24982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3752:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 24973,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3697:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 24983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3697:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24984,
                  "nodeType": "ExpressionStatement",
                  "src": "3697:65:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24992,
                            "name": "fractron",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24593,
                            "src": "3809:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fractron_$24517",
                              "typeString": "contract Fractron"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Fractron_$24517",
                              "typeString": "contract Fractron"
                            }
                          ],
                          "id": 24991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3801:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24990,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3801:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3801:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 24996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3825:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 24995,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3825:7:10",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 24994,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3820:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3820:13:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 24998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "3820:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 24985,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24936,
                          "src": "3773:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 24988,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24249,
                        "src": "3773:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTShare_$24237",
                          "typeString": "contract NFTShare"
                        }
                      },
                      "id": 24989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23317,
                      "src": "3773:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 24999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3773:65:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25000,
                  "nodeType": "ExpressionStatement",
                  "src": "3773:65:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25004,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24922,
                        "src": "3862:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25001,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24593,
                        "src": "3848:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24517",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 25003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "join",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24442,
                      "src": "3848:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 25005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3848:22:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25006,
                  "nodeType": "ExpressionStatement",
                  "src": "3848:22:10"
                },
                {
                  "body": {
                    "id": 25036,
                    "nodeType": "Block",
                    "src": "3937:144:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 25025,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24936,
                                      "src": "4007:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 25026,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenIds",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24244,
                                    "src": "4007:14:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 25028,
                                  "indexExpression": {
                                    "id": 25027,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25008,
                                    "src": "4022:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4007:17:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 25020,
                                      "name": "vault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24936,
                                      "src": "3977:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 25021,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "nftContracts",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24241,
                                    "src": "3977:18:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                                      "typeString": "contract ERC721[] memory"
                                    }
                                  },
                                  "id": 25023,
                                  "indexExpression": {
                                    "id": 25022,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25008,
                                    "src": "3996:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3977:21:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC721_$24144",
                                    "typeString": "contract ERC721"
                                  }
                                },
                                "id": 25024,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23669,
                                "src": "3977:29:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 25029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3977:48:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 25032,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4051:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FractronTest_$25143",
                                    "typeString": "contract FractronTest"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_FractronTest_$25143",
                                    "typeString": "contract FractronTest"
                                  }
                                ],
                                "id": 25031,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4043:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 25030,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4043:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 25033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4043:13:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 25019,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 320,
                            "src": "3951:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 25034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3951:119:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25035,
                        "nodeType": "ExpressionStatement",
                        "src": "3951:119:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25011,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25008,
                      "src": "3901:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 25012,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24936,
                          "src": "3905:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 25013,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftContracts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24241,
                        "src": "3905:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                          "typeString": "contract ERC721[] memory"
                        }
                      },
                      "id": 25014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3905:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3901:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25037,
                  "initializationExpression": {
                    "assignments": [
                      25008
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 25008,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3894:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 25037,
                        "src": "3886:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25007,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3886:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 25010,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 25009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3898:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3886:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 25017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3932:3:10",
                      "subExpression": {
                        "id": 25016,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25008,
                        "src": "3932:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25018,
                    "nodeType": "ExpressionStatement",
                    "src": "3932:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "3881:200:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 25044,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4137:4:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FractronTest_$25143",
                                  "typeString": "contract FractronTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_FractronTest_$25143",
                                  "typeString": "contract FractronTest"
                                }
                              ],
                              "id": 25043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4129:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25042,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4129:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4129:13:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "id": 25039,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24936,
                              "src": "4099:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                                "typeString": "struct Fractron.Vault memory"
                              }
                            },
                            "id": 25040,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24249,
                            "src": "4099:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTShare_$24237",
                              "typeString": "contract NFTShare"
                            }
                          },
                          "id": 25041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23243,
                          "src": "4099:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4099:44:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 25047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4145:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 25038,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4090:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4090:57:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25049,
                  "nodeType": "ExpressionStatement",
                  "src": "4090:57:10"
                },
                {
                  "expression": {
                    "id": 25055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25050,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24936,
                      "src": "4158:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                        "typeString": "struct Fractron.Vault memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25053,
                          "name": "vaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24922,
                          "src": "4184:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 25051,
                          "name": "fractron",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24593,
                          "src": "4166:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Fractron_$24517",
                            "typeString": "contract Fractron"
                          }
                        },
                        "id": 25052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getVault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24455,
                        "src": "4166:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_Vault_$24254_memory_ptr_$",
                          "typeString": "function (uint256) view external returns (struct Fractron.Vault memory)"
                        }
                      },
                      "id": 25054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4166:26:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                        "typeString": "struct Fractron.Vault memory"
                      }
                    },
                    "src": "4158:34:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                      "typeString": "struct Fractron.Vault memory"
                    }
                  },
                  "id": 25056,
                  "nodeType": "ExpressionStatement",
                  "src": "4158:34:10"
                },
                {
                  "body": {
                    "id": 25077,
                    "nodeType": "Block",
                    "src": "4258:55:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 25070,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24936,
                                  "src": "4281:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                                    "typeString": "struct Fractron.Vault memory"
                                  }
                                },
                                "id": 25071,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenIds",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 24244,
                                "src": "4281:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 25073,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 25072,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4296:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4281:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 25074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4300:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25069,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              320,
                              345,
                              375,
                              400,
                              459,
                              484,
                              514,
                              539,
                              1639,
                              1674
                            ],
                            "referencedDeclaration": 514,
                            "src": "4272:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 25075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4272:30:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25076,
                        "nodeType": "ExpressionStatement",
                        "src": "4272:30:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25061,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25058,
                      "src": "4222:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 25062,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24936,
                          "src": "4226:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                            "typeString": "struct Fractron.Vault memory"
                          }
                        },
                        "id": 25063,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nftContracts",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24241,
                        "src": "4226:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr",
                          "typeString": "contract ERC721[] memory"
                        }
                      },
                      "id": 25064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4226:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4222:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25078,
                  "initializationExpression": {
                    "assignments": [
                      25058
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 25058,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4215:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 25078,
                        "src": "4207:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25057,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4207:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 25060,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 25059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4219:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4207:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 25067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4253:3:10",
                      "subExpression": {
                        "id": 25066,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25058,
                        "src": "4253:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25068,
                    "nodeType": "ExpressionStatement",
                    "src": "4253:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "4202:111:10"
                }
              ]
            },
            "functionSelector": "5ddea6a8",
            "id": 25080,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTotalSupplyOwnerCanJoinToken",
            "nameLocation": "3190:32:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3222:2:10"
            },
            "returnParameters": {
              "id": 24920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3232:0:10"
            },
            "scope": 25143,
            "src": "3181:1138:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25141,
              "nodeType": "Block",
              "src": "4363:526:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25086,
                        "name": "nftContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24597,
                        "src": "4401:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      {
                        "id": 25087,
                        "name": "nftIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24604,
                        "src": "4427:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 25088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4447:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "4672616374696f6e616c69736564204e4654",
                        "id": 25089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4470:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        "value": "Fractionalised NFT"
                      },
                      {
                        "hexValue": "46524143",
                        "id": 25090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4504:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        },
                        "value": "FRAC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        }
                      ],
                      "expression": {
                        "id": 25083,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24593,
                        "src": "4373:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24517",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 25085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "split",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24367,
                      "src": "4373:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC721[] memory,uint256[] memory,uint256,string memory,string memory) payable external returns (uint256)"
                      }
                    },
                    "id": 25091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4373:147:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25092,
                  "nodeType": "ExpressionStatement",
                  "src": "4373:147:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25096,
                        "name": "nftContracts2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24601,
                        "src": "4558:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        }
                      },
                      {
                        "id": 25097,
                        "name": "nftIds2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24607,
                        "src": "4585:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 25098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4606:9:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      },
                      {
                        "hexValue": "4672616374696f6e616c69736564204e4654",
                        "id": 25099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4629:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        "value": "Fractionalised NFT"
                      },
                      {
                        "hexValue": "46524143",
                        "id": 25100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4663:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        },
                        "value": "FRAC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_ERC721_$24144_$dyn_storage",
                          "typeString": "contract ERC721[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae53d707ddc236b3e172bcd4886fd3badc245a6829d0cc24538992ad917f3459",
                          "typeString": "literal_string \"Fractionalised NFT\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_612111917be5f48cd8173db4eb61427798ea8cc747eafa3b4be30a91bd971e7f",
                          "typeString": "literal_string \"FRAC\""
                        }
                      ],
                      "expression": {
                        "id": 25093,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24593,
                        "src": "4530:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24517",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 25095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "split",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24367,
                      "src": "4530:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_array$_t_contract$_ERC721_$24144_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC721[] memory,uint256[] memory,uint256,string memory,string memory) payable external returns (uint256)"
                      }
                    },
                    "id": 25101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4530:149:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25102,
                  "nodeType": "ExpressionStatement",
                  "src": "4530:149:10"
                },
                {
                  "assignments": [
                    25108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25108,
                      "mutability": "mutable",
                      "name": "vaults",
                      "nameLocation": "4714:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 25141,
                      "src": "4690:30:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Vault_$24254_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Fractron.Vault[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 25106,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25105,
                            "name": "Fractron.Vault",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24254,
                            "src": "4690:14:10"
                          },
                          "referencedDeclaration": 24254,
                          "src": "4690:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vault_$24254_storage_ptr",
                            "typeString": "struct Fractron.Vault"
                          }
                        },
                        "id": 25107,
                        "nodeType": "ArrayTypeName",
                        "src": "4690:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vault_$24254_storage_$dyn_storage_ptr",
                          "typeString": "struct Fractron.Vault[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25112,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25109,
                        "name": "fractron",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24593,
                        "src": "4723:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fractron_$24517",
                          "typeString": "contract Fractron"
                        }
                      },
                      "id": 25110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAllVaults",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24497,
                      "src": "4723:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_struct$_Vault_$24254_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (struct Fractron.Vault memory[] memory)"
                      }
                    },
                    "id": 25111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4723:23:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Vault_$24254_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Fractron.Vault memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4690:56:10"
                },
                {
                  "body": {
                    "id": 25139,
                    "nodeType": "Block",
                    "src": "4800:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 25136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 25127,
                                        "name": "vaults",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25108,
                                        "src": "4833:6:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Vault_$24254_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct Fractron.Vault memory[] memory"
                                        }
                                      },
                                      "id": 25129,
                                      "indexExpression": {
                                        "id": 25128,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25114,
                                        "src": "4840:1:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4833:9:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Vault_$24254_memory_ptr",
                                        "typeString": "struct Fractron.Vault memory"
                                      }
                                    },
                                    "id": 25130,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenContract",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 24249,
                                    "src": "4833:23:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NFTShare_$24237",
                                      "typeString": "contract NFTShare"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_NFTShare_$24237",
                                      "typeString": "contract NFTShare"
                                    }
                                  ],
                                  "id": 25126,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4825:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 25125,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4825:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 25131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4825:32:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 25134,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4869:1:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 25133,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4861:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 25132,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4861:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 25135,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4861:10:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4825:46:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 25124,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              269,
                              290
                            ],
                            "referencedDeclaration": 269,
                            "src": "4814:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 25137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4814:58:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25138,
                        "nodeType": "ExpressionStatement",
                        "src": "4814:58:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25117,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25114,
                      "src": "4776:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 25118,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25108,
                        "src": "4780:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Vault_$24254_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Fractron.Vault memory[] memory"
                        }
                      },
                      "id": 25119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4780:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4776:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25140,
                  "initializationExpression": {
                    "assignments": [
                      25114
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 25114,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4769:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 25140,
                        "src": "4761:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25113,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4761:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 25116,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 25115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4773:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4761:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 25122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4795:3:10",
                      "subExpression": {
                        "id": 25121,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25114,
                        "src": "4795:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25123,
                    "nodeType": "ExpressionStatement",
                    "src": "4795:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "4756:127:10"
                }
              ]
            },
            "functionSelector": "f6781937",
            "id": 25142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCanGetAllVaults",
            "nameLocation": "4334:19:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4353:2:10"
            },
            "returnParameters": {
              "id": 25082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4363:0:10"
            },
            "scope": 25143,
            "src": "4325:564:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 25144,
        "src": "611:4280:10",
        "usedErrors": []
      }
    ],
    "src": "32:4860:10"
  }
}